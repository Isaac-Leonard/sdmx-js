{"version":3,"sources":["sdmx/commonreferences.ts"],"names":[],"mappings":";;;;;;;IAmBA;QAA6B,2BAAkB;QAG3C,iBAAY,CAAS;YACjB,kBAAM,CAAC,CAAC,CAAC;QACb,CAAC;QACM,iCAAe,GAAtB;YACI,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC;QACM,+BAAa,GAApB,UAAqB,EAAW;YAC5B,MAAM,CAAC,gBAAK,CAAC,SAAS,WAAE,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;QAC/C,CAAC;QACM,wBAAM,GAAb,UAAc,EAAU;YACpB,MAAM,CAAC,gBAAK,CAAC,SAAS,WAAE,IAAI,EAAE,CAAC;QACnC,CAAC;QACM,2BAAS,GAAhB,UAAiB,CAAS;YACtB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,CAAC;gBAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,EAAE,GAAW,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1C,IAAI,EAAE,GAAW,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YACxC,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC1C,CAAC;QAnBa,eAAO,GAAW,oBAAoB,CAAC;QACvC,WAAG,GAAY,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;QAmBpD,cAAC;IAAD,CArBA,AAqBC,CArB4B,GAAG,CAAC,cAAc,GAqB9C;IArBY,eAAO,UAqBnB,CAAA;IACD;QAA8B,4BAAkB;QAI5C,kBAAY,CAAS;YACjB,kBAAM,CAAC,CAAC,CAAC;QACb,CAAC;QAEM,kCAAe,GAAtB;YACI,MAAM,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC;QAEM,iCAAc,GAArB,UAAsB,EAAY;YAC9B,EAAE,CAAC,CAAC,gBAAK,CAAC,SAAS,WAAE,IAAI,IAAI,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YAC5C,MAAM,CAAC,gBAAK,CAAC,SAAS,WAAE,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;QAC/C,CAAC;QAEM,+BAAY,GAAnB,UAAoB,EAAU;YAC1B,MAAM,CAAC,gBAAK,CAAC,YAAY,YAAC,EAAE,CAAC,CAAC;QAClC,CAAC;QAEM,2BAAQ,GAAf,UAAgB,EAAM;YAClB,MAAM,CAAC,gBAAK,CAAC,SAAS,WAAE,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;QAC/C,CAAC;QAEM,uBAAI,GAAX;YACI,MAAM,CAAC,IAAI,EAAE,CAAC,gBAAK,CAAC,SAAS,WAAE,CAAC,CAAC;QACrC,CAAC;QAzBa,gBAAO,GAAW,sCAAsC,CAAC;QA0B3E,eAAC;IAAD,CA5BA,AA4BC,CA5B6B,GAAG,CAAC,cAAc,GA4B/C;IA5BY,gBAAQ,WA4BpB,CAAA;IACD;QAAwB,sBAAQ;QAI5B,YAAY,CAAS;YACjB,kBAAM,CAAC,CAAC,CAAC;YACT,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBAAC,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;YAAC,CAAC;QAC7D,CAAC;QAEM,qBAAQ,GAAf,UAAgB,EAAM;YAClB,EAAE,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;gBACb,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;gBACpD,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;gBAC/C,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YACD,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;gBACzD,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;QAC9C,CAAC;QACM,yBAAY,GAAnB,UAAoB,EAAU;YAC1B,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC;QAClC,CAAC;QACM,4BAAe,GAAtB;YACI,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;QACxB,CAAC;QA5Ba,UAAO,GAAW,iBAAiB,CAAC;QA6BtD,SAAC;IAAD,CA/BA,AA+BC,CA/BuB,QAAQ,GA+B/B;IA/BY,UAAE,KA+Bd,CAAA;IACD;QAA8B,4BAAE;QAE5B,kBAAY,CAAS;YACjB,kBAAM,CAAC,CAAC,CAAC;QACb,CAAC;QACM,kCAAe,GAAtB;YACI,MAAM,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC;QACM,iCAAc,GAArB,UAAsB,EAAY;YAC9B,MAAM,CAAC,gBAAK,CAAC,SAAS,WAAE,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;QAC/C,CAAC;QATa,gBAAO,GAAW,oBAAoB,CAAC;QAUzD,eAAC;IAAD,CAXA,AAWC,CAX6B,EAAE,GAW/B;IAXY,gBAAQ,WAWpB,CAAA;IACD;QAAoC,kCAAQ;QAGxC,wBAAY,CAAS;YACjB,kBAAM,CAAC,CAAC,CAAC;QACb,CAAC;QACM,wCAAe,GAAtB;YACI,MAAM,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC;QACM,6CAAoB,GAA3B,UAA4B,EAAkB;YAC1C,MAAM,CAAC,gBAAK,CAAC,SAAS,WAAE,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;QAC/C,CAAC;QAVa,sBAAO,GAAW,4CAA4C,CAAC;QAWjF,qBAAC;IAAD,CAZA,AAYC,CAZmC,QAAQ,GAY3C;IAZY,sBAAc,iBAY1B,CAAA;IACD;QAUI;;;;;;;;;;;UAWE;QACF;YArBQ,aAAQ,GAAmB,IAAI,CAAC;YAChC,OAAE,GAAO,IAAI,CAAC;YACd,YAAO,GAAY,IAAI,CAAC;YACxB,uBAAkB,GAAO,IAAI,CAAC;YAC9B,4BAAuB,GAAY,IAAI,CAAC;YACxC,UAAK,GAAY,IAAI,CAAC;YACtB,WAAM,GAA2B,IAAI,CAAC;YACtC,YAAO,GAA4B,IAAI,CAAC;QAgBhD,CAAC;QACM,yBAAW,GAAlB;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;QACM,mBAAK,GAAZ;YACI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;QACnB,CAAC;QACM,wBAAU,GAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QACM,qCAAuB,GAA9B;YACI,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACnC,CAAC;QACM,0CAA4B,GAAnC;YACI,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC;QACxC,CAAC;QACM,yBAAW,GAAlB;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;QACM,qBAAO,GAAd;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QAExB,CAAC;QACM,yBAAW,GAAlB,UAAmB,CAAiB;YAChC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QACtB,CAAC;QACM,mBAAK,GAAZ,UAAa,EAAM;YACf,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACjB,CAAC;QACM,wBAAU,GAAjB,UAAkB,CAAU;YACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACrB,CAAC;QACM,qCAAuB,GAA9B,UAA+B,EAAM;YACjC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QACjC,CAAC;QACM,0CAA4B,GAAnC,UAAoC,CAAU;YAC1C,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC;QACrC,CAAC;QACM,yBAAW,GAAlB,UAAmB,EAA0B;YACzC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACrB,CAAC;QACM,wBAAU,GAAjB,UAAkB,CAA0B;YACxC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACrB,CAAC;QACD,yBAAW,GAAX;YACI,IAAI,SAAS,GAAc,IAAI,SAAS,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;YACpD,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QACL,UAAC;IAAD,CAxEA,AAwEC,IAAA;IAxEY,WAAG,MAwEf,CAAA;IACD;QAaI,mBAAY,GAAQ,EAAE,GAAe;YAT7B,SAAI,GAA4B,IAAI,CAAC;YACrC,UAAK,GAA2B,IAAI,CAAC;YACrC,WAAM,GAAmB,IAAI,CAAC;YAC9B,uBAAkB,GAAO,IAAI,CAAC;YAC9B,4BAAuB,GAAY,IAAI,CAAC;YACxC,YAAO,GAAY,IAAI,CAAC;YACxB,iBAAY,GAAc,IAAI,CAAC;YAC/B,aAAQ,GAAa,IAAI,CAAC;YAG9B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;gBACnB,OAAO;gBACP,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;gBAC1B,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;gBAC/B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;gBAChC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;gBAC5B,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,uBAAuB,EAAE,CAAC;gBACxD,IAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC,4BAA4B,EAAE,CAAC;gBAClE,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;YAIpC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,KAAK,EAAE,CAAC;YACjB,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC;oBACD,mCAAmC;oBACnC,IAAI,CAAC,OAAO,EAAE,CAAC;gBAEnB,CAAE;gBAAA,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,CAAC;YACL,CAAC;QACL,CAAC;QAED;;WAEG;QACI,0BAAM,GAAb;YACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QACpB,CAAC;QAED;;WAEG;QACI,0BAAM,GAAb,UAAc,GAAQ;YAClB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACnB,CAAC;QAED;;WAEG;QACI,0BAAM,GAAb;YACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QACpB,CAAC;QAED;;WAEG;QACI,0BAAM,GAAb,UAAc,GAAe;YACzB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACnB,CAAC;QAED;;WAEG;QACI,2BAAO,GAAd;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;QACM,2BAAO,GAAd,UAAe,IAA6B;YACxC,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACnB,CAAC;QAED;;WAEG;QACI,+BAAW,GAAlB;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;QAEM,+BAAW,GAAlB,UAAmB,KAA6B;YAC5C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC;QACD;;WAEG;QACI,4BAAQ,GAAf;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;QAED;;WAEG;QACI,+BAAW,GAAlB;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;QAED;;WAEG;QACI,2CAAuB,GAA9B;YACI,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACnC,CAAC;QAED;;WAEG;QACI,8BAAU,GAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAED;;WAEG;QACI,yBAAK,GAAZ;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;QAEM,yCAAqB,GAA5B;YACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;QAED;;WAEG;QACI,8CAA0B,GAAjC;YACI,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC;QACxC,CAAC;QACD,6BAA6B;QAC7B,qFAAqF;QACrF,qCAAqC;QACrC,GAAG;QAEI,wBAAI,GAAX;QACA,CAAC;QAEM,4BAAQ,GAAf;YACI,IAAI,CAAC,GAAW,EAAE,CAAC;YACnB,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QACM,yBAAK,GAAZ;QAEA,CAAC;QACM,2BAAO,GAAd;QAEA,CAAC;QACM,4BAAQ,GAAf;YACI,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;YAChC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACtD,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAA;YAC/D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;QAEhB,CAAC;QACL,gBAAC;IAAD,CApKA,AAoKC,IAAA;IApKY,iBAAS,YAoKrB,CAAA;IAED;QA+OI,gCAAmB,CAAS;YAH5B,WAAW;YACH,WAAM,GAAW,IAAI,CAAC;YACtB,UAAK,GAAW,CAAC,CAAC,CAAC;YAEvB,IAAI,QAAQ,GAAY,KAAK,CAAC;YAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,sBAAsB,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjE,EAAE,CAAC,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC7C,QAAQ,GAAG,IAAI,CAAC;gBACpB,CAAC;YACL,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAAC,MAAM,IAAI,KAAK,CAAC,CAAC,GAAG,sCAAsC,CAAC,CAAC;YAC3E,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,sBAAsB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC/D,CAAC;QApCD,UAAU;QACK,0BAAG,GAAlB,UAAmB,CAAS;YACxB,IAAI,CAAC,GAA2B,IAAI,sBAAsB,CAAC,CAAC,CAAC,CAAC;YAC9D,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QACc,gCAAS,GAAxB,UAAyB,CAAS;YAC9B,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QAEa,iCAAU,GAAxB,UAAyB,CAAS;YAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,sBAAsB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAClE,EAAE,CAAC,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;oBAAC,MAAM,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1F,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACa,8CAAuB,GAArC,UAAsC,CAAS;YAC3C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,sBAAsB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAClE,EAAE,CAAC,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;oBAAC,MAAM,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1F,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,QAAQ,GAAG,CAAC,GAAG,oDAAoD,CAAC,CAAC;QACzF,CAAC;QAeM,yCAAQ,GAAf,cAA4B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1C,sCAAK,GAAZ;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;QA3Pa,2BAAI,GAAkC,IAAI,KAAK,EAA0B,CAAC;QAC1E,kCAAW,GAAkB,IAAI,KAAK,EAAU,CAAC;QAEjD,iCAAU,GAAW,sBAAsB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC7D,oCAAa,GAAW,sBAAsB,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAEnE,0CAAmB,GAAW,sBAAsB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC/E,kDAA2B,GAAW,sBAAsB,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;QAC/F,uCAAgB,GAAW,sBAAsB,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACzE,iDAA0B,GAAW,sBAAsB,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;QAC7F,4CAAqB,GAAW,sBAAsB,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACnF,sCAAe,GAAW,sBAAsB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACvE,+CAAwB,GAAW,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QACzF,4CAAqB,GAAW,sBAAsB,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACnF,kCAAW,GAAW,sBAAsB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC/D,qCAAc,GAAW,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACrE,sCAAe,GAAW,sBAAsB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACvE,yCAAkB,GAAW,sBAAsB,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC7E,0CAAmB,GAAW,sBAAsB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC/E,qCAAc,GAAW,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACrE,wCAAiB,GAAW,sBAAsB,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAC3E,2CAAoB,GAAW,sBAAsB,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACjF,8CAAuB,GAAW,sBAAsB,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QACvF,wCAAiB,GAAW,sBAAsB,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAC3E,6CAAsB,GAAW,sBAAsB,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QACtF,+CAAwB,GAAW,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QACzF,sCAAe,GAAW,sBAAsB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACvE,0CAAmB,GAAW,sBAAsB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC/E,gDAAyB,GAAW,sBAAsB,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;QAC3F,0CAAmB,GAAW,sBAAsB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC/E,gDAAyB,GAAW,sBAAsB,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;QAC3F,2CAAoB,GAAW,sBAAsB,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACjF,2CAAoB,GAAW,sBAAsB,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACjF,uCAAgB,GAAW,sBAAsB,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACzE,iDAA0B,GAAW,sBAAsB,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;QAC7F,6DAAsC,GAAW,sBAAsB,CAAC,SAAS,CAAC,iCAAiC,CAAC,CAAC;QACrH,sDAA+B,GAAW,sBAAsB,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;QACvG,8CAAuB,GAAW,sBAAsB,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QACvF,kDAA2B,GAAW,sBAAsB,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;QAC/F,uCAAgB,GAAW,sBAAsB,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACzE,+CAAwB,GAAW,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QACzF,2CAAoB,GAAW,sBAAsB,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACjF,sDAA+B,GAAW,sBAAsB,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;QACvG,mCAAY,GAAW,sBAAsB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACjE,+CAAwB,GAAW,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QACzF,8CAAuB,GAAW,sBAAsB,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QACvF,0CAAmB,GAAW,sBAAsB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC/E,+CAAwB,GAAW,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QACzF,yCAAkB,GAAW,sBAAsB,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC7E,+CAAwB,GAAW,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QACzF,4CAAqB,GAAW,sBAAsB,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACnF,0CAAmB,GAAW,sBAAsB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC/E,6CAAsB,GAAW,sBAAsB,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QACrF,gDAAyB,GAAW,sBAAsB,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;QAC3F,mDAA4B,GAAW,sBAAsB,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;QACjG,8CAAuB,GAAW,sBAAsB,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QACvF,oDAA6B,GAAW,sBAAsB,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;QACnG,4CAAqB,GAAW,sBAAsB,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACnF,qCAAc,GAAW,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACrE,yCAAkB,GAAW,sBAAsB,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC7E,gDAAyB,GAAW,sBAAsB,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;QAC3F,+CAAwB,GAAW,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QACzF,kDAA2B,GAAW,sBAAsB,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;QAC/F,+CAAwB,GAAW,sBAAsB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QACzF,kDAA2B,GAAW,sBAAsB,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;QAC/F,mDAA4B,GAAW,sBAAsB,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;QACjG,gDAAyB,GAAW,sBAAsB,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;QAC3F,6CAAsB,GAAW,sBAAsB,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QACrF,0CAAmB,GAAW,sBAAsB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC/E,0CAAmB,GAAW,sBAAsB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC/E,2CAAoB,GAAW,sBAAsB,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACjF,wCAAiB,GAAW,sBAAsB,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAE3E,0BAAG,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC5F,6BAAM,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;QAClG,mCAAY,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;QAC9G,2CAAoB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,CAAC;QAC9H,gCAAS,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;QACxG,0CAAmB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,0BAA0B,CAAC,CAAC;QAC5H,qCAAc,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;QAClH,+BAAQ,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QACtG,wCAAiB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,CAAC;QACxH,qCAAc,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;QAClH,2BAAI,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;QAC9F,8BAAO,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;QACjG,+BAAQ,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QACtG,kCAAW,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;QAC5G,mCAAY,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;QAC9G,8BAAO,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;QACpG,iCAAU,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC;QAC1G,oCAAa,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,CAAC;QAChH,uCAAgB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,CAAC;QACtH,iCAAU,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC;QAC1G,sCAAe,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,CAAC;QACpH,wCAAiB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,CAAC;QACxH,+BAAQ,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QACtG,mCAAY,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;QAC9G,yCAAkB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,yBAAyB,CAAC,CAAC;QAC1H,mCAAY,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;QAC9G,yCAAkB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,yBAAyB,CAAC,CAAC;QAC1H,oCAAa,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,CAAC;QAChH,oCAAa,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,CAAC;QAChH,gCAAS,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;QACxG,0CAAmB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,0BAA0B,CAAC,CAAC;QAC5H,sDAA+B,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,sCAAsC,CAAC,CAAC;QACpJ,+CAAwB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,+BAA+B,CAAC,CAAC;QACtI,uCAAgB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,CAAC;QACtH,2CAAoB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,CAAC;QAC9H,gCAAS,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;QACxG,wCAAiB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,CAAC;QACxH,oCAAa,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,CAAC;QAChH,+CAAwB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,+BAA+B,CAAC,CAAC;QACtI,4BAAK,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;QAChG,wCAAiB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,CAAC;QACxH,uCAAgB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,CAAC;QACtH,mCAAY,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;QAC9G,wCAAiB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,CAAC;QACxH,kCAAW,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;QAC5G,wCAAiB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,CAAC;QACxH,qCAAc,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;QAClH,mCAAY,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;QAC9G,sCAAe,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,CAAC;QACpH,yCAAkB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,yBAAyB,CAAC,CAAC;QAC1H,4CAAqB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,4BAA4B,CAAC,CAAC;QAChI,uCAAgB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,CAAC;QACtH,6CAAsB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,6BAA6B,CAAC,CAAC;QAClI,qCAAc,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;QAClH,8BAAO,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;QACpG,kCAAW,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;QAC5G,yCAAkB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,yBAAyB,CAAC,CAAC;QAC1H,wCAAiB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,CAAC;QACxH,2CAAoB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,CAAC;QAC9H,wCAAiB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,CAAC;QACxH,2CAAoB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,CAAC;QAC9H,4CAAqB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,4BAA4B,CAAC,CAAC;QAChI,yCAAkB,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,yBAAyB,CAAC,CAAC;QAC1H,sCAAe,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,CAAC;QACpH,mCAAY,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;QAC9G,mCAAY,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;QAC9G,oCAAa,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,CAAC;QAChH,iCAAU,GAA2B,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC;QAE1G,8BAAO,GAAW,CAAC,CAAC;QACpB,iCAAU,GAAW,CAAC,CAAC;QACvB,uCAAgB,GAAW,CAAC,CAAC;QAC7B,+CAAwB,GAAW,CAAC,CAAC;QACrC,oCAAa,GAAW,CAAC,CAAC;QAC1B,8CAAuB,GAAW,CAAC,CAAC;QACpC,yCAAkB,GAAW,CAAC,CAAC;QAC/B,mCAAY,GAAW,CAAC,CAAC;QACzB,4CAAqB,GAAW,CAAC,CAAC;QAClC,yCAAkB,GAAW,CAAC,CAAC;QAC/B,+BAAQ,GAAW,EAAE,CAAC;QACtB,kCAAW,GAAW,EAAE,CAAC;QACzB,mCAAY,GAAW,EAAE,CAAC;QAC1B,sCAAe,GAAW,EAAE,CAAC;QAC7B,uCAAgB,GAAW,EAAE,CAAC;QAC9B,kCAAW,GAAW,EAAE,CAAC;QACzB,qCAAc,GAAW,EAAE,CAAC;QAC5B,wCAAiB,GAAW,EAAE,CAAC;QAC/B,2CAAoB,GAAW,EAAE,CAAC;QAClC,qCAAc,GAAW,EAAE,CAAC;QAC5B,0CAAmB,GAAW,EAAE,CAAC;QACjC,4CAAqB,GAAW,EAAE,CAAC;QACnC,mCAAY,GAAW,EAAE,CAAC;QAC1B,uCAAgB,GAAW,EAAE,CAAC;QAC9B,6CAAsB,GAAW,EAAE,CAAC;QACpC,uCAAgB,GAAW,EAAE,CAAC;QAC9B,6CAAsB,GAAW,EAAE,CAAC;QACpC,wCAAiB,GAAW,EAAE,CAAC;QAC/B,wCAAiB,GAAW,EAAE,CAAC;QAC/B,oCAAa,GAAW,EAAE,CAAC;QAC3B,8CAAuB,GAAW,EAAE,CAAC;QACrC,0DAAmC,GAAW,EAAE,CAAC;QACjD,mDAA4B,GAAW,EAAE,CAAC;QAC1C,2CAAoB,GAAW,EAAE,CAAC;QAClC,+CAAwB,GAAW,EAAE,CAAC;QACtC,oCAAa,GAAW,EAAE,CAAC;QAC3B,4CAAqB,GAAW,EAAE,CAAC;QACnC,wCAAiB,GAAW,EAAE,CAAC;QAC/B,mDAA4B,GAAW,EAAE,CAAC;QAC1C,gCAAS,GAAW,EAAE,CAAC;QACvB,4CAAqB,GAAW,EAAE,CAAC;QACnC,2CAAoB,GAAW,EAAE,CAAC;QAClC,uCAAgB,GAAW,EAAE,CAAC;QAC9B,4CAAqB,GAAW,EAAE,CAAC;QACnC,sCAAe,GAAW,EAAE,CAAC;QAC7B,4CAAqB,GAAW,EAAE,CAAC;QACnC,yCAAkB,GAAW,EAAE,CAAC;QAChC,uCAAgB,GAAW,EAAE,CAAC;QAC9B,0CAAmB,GAAW,EAAE,CAAC;QACjC,6CAAsB,GAAW,EAAE,CAAC;QACpC,gDAAyB,GAAW,EAAE,CAAC;QACvC,2CAAoB,GAAW,EAAE,CAAC;QAClC,iDAA0B,GAAW,EAAE,CAAC;QACxC,yCAAkB,GAAW,EAAE,CAAC;QAChC,kCAAW,GAAW,EAAE,CAAC;QACzB,sCAAe,GAAW,EAAE,CAAC;QAC7B,6CAAsB,GAAW,EAAE,CAAC;QACpC,4CAAqB,GAAW,EAAE,CAAC;QACnC,+CAAwB,GAAW,EAAE,CAAC;QACtC,4CAAqB,GAAW,EAAE,CAAC;QACnC,+CAAwB,GAAW,EAAE,CAAC;QACtC,gDAAyB,GAAW,EAAE,CAAC;QACvC,6CAAsB,GAAW,EAAE,CAAC;QACpC,0CAAmB,GAAW,EAAE,CAAC;QACjC,uCAAgB,GAAW,EAAE,CAAC;QAC9B,uCAAgB,GAAW,EAAE,CAAC;QAC9B,wCAAiB,GAAW,EAAE,CAAC;QAC/B,qCAAc,GAAW,EAAE,CAAC;QA2C9C,6BAAC;IAAD,CA9PA,AA8PC,IAAA;IA9PY,8BAAsB,yBA8PlC,CAAA;IAED;QAiDI,iCAAY,CAAS;YAFrB,WAAW;YACH,WAAM,GAAW,IAAI,CAAC;YAE1B,IAAI,QAAQ,GAAY,KAAK,CAAC;YAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,uBAAuB,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAClE,EAAE,CAAC,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC9C,QAAQ,GAAG,IAAI,CAAC;gBACpB,CAAC;YACL,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAAC,MAAM,IAAI,KAAK,CAAC,CAAC,GAAG,sCAAsC,CAAC,CAAC;YAC3E,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACpB,CAAC;QAlCD,UAAU;QACK,2BAAG,GAAlB,UAAmB,CAAS;YACxB,IAAI,CAAC,GAA4B,IAAI,uBAAuB,CAAC,CAAC,CAAC,CAAC;YAChE,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QACc,iCAAS,GAAxB,UAAyB,CAAS;YAC9B,uBAAuB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QAEa,kCAAU,GAAxB,UAAyB,CAAS;YAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,uBAAuB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3D,EAAE,CAAC,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;oBAAC,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5F,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACa,+CAAuB,GAArC,UAAsC,CAAS;YAC3C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,uBAAuB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3D,EAAE,CAAC,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;oBAAC,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5F,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,QAAQ,GAAG,CAAC,GAAG,oDAAoD,CAAC,CAAC;QACzF,CAAC;QAaM,0CAAQ,GAAf,cAA4B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAzDnC,4BAAI,GAAmC,IAAI,KAAK,EAA2B,CAAC;QAC5E,mCAAW,GAAkB,IAAI,KAAK,EAAU,CAAC;QAEjD,mCAAW,GAAW,uBAAuB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAChE,4CAAoB,GAAW,uBAAuB,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAClF,gDAAwB,GAAW,uBAAuB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QAC1F,sCAAc,GAAW,uBAAuB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACtE,uCAAe,GAAW,uBAAuB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACxE,sCAAc,GAAW,uBAAuB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACtE,uCAAe,GAAW,uBAAuB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACxE,6CAAqB,GAAW,uBAAuB,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACpF,4CAAoB,GAAW,uBAAuB,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAElF,4BAAI,GAA4B,uBAAuB,CAAC,GAAG,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;QACjG,qCAAa,GAA4B,uBAAuB,CAAC,GAAG,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC;QACnH,yCAAiB,GAA4B,uBAAuB,CAAC,GAAG,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,CAAC;QAC3H,+BAAO,GAA4B,uBAAuB,CAAC,GAAG,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC;QACvG,gCAAQ,GAA4B,uBAAuB,CAAC,GAAG,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;QACzG,+BAAO,GAA4B,uBAAuB,CAAC,GAAG,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC;QACvG,gCAAQ,GAA4B,uBAAuB,CAAC,GAAG,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;QACzG,sCAAc,GAA4B,uBAAuB,CAAC,GAAG,CAAC,uBAAuB,CAAC,qBAAqB,CAAC,CAAC;QACrH,qCAAa,GAA4B,uBAAuB,CAAC,GAAG,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC;QAqCrI,8BAAC;IAAD,CA5DA,AA4DC,IAAA;IA5DY,+BAAuB,0BA4DnC,CAAA;IAED;QAsCI,+BAAY,CAAS;YAFrB,WAAW;YACH,WAAM,GAAW,IAAI,CAAC;YAE1B,IAAI,QAAQ,GAAY,KAAK,CAAC;YAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChE,EAAE,CAAC,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC5C,QAAQ,GAAG,IAAI,CAAC;gBACpB,CAAC;YACL,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAAC,MAAM,IAAI,KAAK,CAAC,CAAC,GAAG,uCAAuC,CAAC,CAAC;YAC5E,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACpB,CAAC;QAlCD,UAAU;QACK,yBAAG,GAAlB,UAAmB,CAAS;YACxB,IAAI,CAAC,GAA0B,IAAI,qBAAqB,CAAC,CAAC,CAAC,CAAC;YAC5D,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QACc,+BAAS,GAAxB,UAAyB,CAAS;YAC9B,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QAEa,gCAAU,GAAxB,UAAyB,CAAS;YAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzD,EAAE,CAAC,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;oBAAC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxF,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACa,6CAAuB,GAArC,UAAsC,CAAS;YAC3C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzD,EAAE,CAAC,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;oBAAC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxF,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,QAAQ,GAAG,CAAC,GAAG,iDAAiD,CAAC,CAAC;QACtF,CAAC;QAaM,wCAAQ,GAAf,cAA4B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QA/CjD;;;;WAIG;QACW,0BAAI,GAAiC,IAAI,KAAK,EAAyB,CAAC;QACxE,iCAAW,GAAkB,IAAI,KAAK,EAAU,CAAC;QAEjD,yCAAmB,GAAW,qBAAqB,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAC/E,sCAAgB,GAAW,qBAAqB,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC1E,oCAAc,GAA0B,IAAI,qBAAqB,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC;QAC7G,iCAAW,GAA0B,IAAI,qBAAqB,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;QAqCzH,4BAAC;IAAD,CAjDA,AAiDC,IAAA;IAjDY,6BAAqB,wBAiDjC,CAAA;IACD;QAAA;QAA2C,CAAC;QAAD,kCAAC;IAAD,CAA3C,AAA4C,IAAA;IAA/B,mCAA2B,8BAAI,CAAA;IAC5C;QAAA;QAAsC,CAAC;QAAD,6BAAC;IAAD,CAAtC,AAAuC,IAAA;IAA1B,8BAAsB,yBAAI,CAAA;IACvC;QAAA;QAA2C,CAAC;QAAD,kCAAC;IAAD,CAA3C,AAA4C,IAAA;IAA/B,mCAA2B,8BAAI,CAAA","file":"commonreferences.js","sourcesContent":["/*\r\n    This file is part of sdmx-js.\r\n\r\n    sdmx-js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    sdmx-js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\r\n    Copyright (C) 2016 James Gardner\r\n*/\r\n/// <amd-module name='sdmx/commonreferences'/>\r\nimport xml = require(\"sdmx/xml\");\r\nexport class Version extends xml.RegexXMLString {\r\n    public static PATTERN: string = \"[0-9]+(\\\\.[0-9]+)*\";\r\n    public static ONE: Version = new Version(\"1.0\");\r\n    constructor(s: string) {\r\n        super(s);\r\n    }\r\n    public getPatternArray(): string[] {\r\n        return [Version.PATTERN];\r\n    }\r\n    public equalsVersion(id: Version): boolean {\r\n        return super.getString() == id.getString();\r\n    }\r\n    public equals(id: String): boolean {\r\n        return super.getString() == id;\r\n    }\r\n    public compareTo(o: Object): number {\r\n        if (!(o instanceof Version)) return -1;\r\n        var a1: number = parseFloat(o.toString());\r\n        var a2: number = parseFloat(toString());\r\n        return a1 > a2 ? 1 : a1 < a2 ? -1 : 0;\r\n    }\r\n}\r\nexport class NestedID extends xml.RegexXMLString {\r\n\r\n    public static PATTERN: string = \"[A-z0-9_@$\\\\-]+(\\\\.[A-z0-9_@$\\\\-]+)*\";\r\n\r\n    constructor(s: string) {\r\n        super(s);\r\n    }\r\n\r\n    public getPatternArray(): string[] {\r\n        return [NestedID.PATTERN];\r\n    }\r\n\r\n    public equalsNestedID(id: NestedID): boolean {\r\n        if (super.getString() == null) return false;\r\n        return super.getString() == id.getString();\r\n    }\r\n\r\n    public equalsString(id: string): boolean {\r\n        return super.equalsString(id);\r\n    }\r\n\r\n    public equalsID(id: ID): boolean {\r\n        return super.getString() == id.getString();\r\n    }\r\n\r\n    public asID(): ID {\r\n        return new ID(super.getString());\r\n    }\r\n}\r\nexport class ID extends NestedID {\r\n\r\n    public static PATTERN: string = \"[A-z0-9_@$\\\\-]+\";\r\n\r\n    constructor(s: string) {\r\n        super(s);\r\n        if (s == null) { throw new Error(\"null IDType string\"); }\r\n    }\r\n\r\n    public equalsID(id: ID): boolean {\r\n        if (id == null) {\r\n            console.log(\"passed null id into ID.equalsID(...)\");\r\n            return false;\r\n        }\r\n\r\n        if (this.getString() == \"\") {\r\n            console.log(\"this ID has a null string as ID\");\r\n            return false;\r\n        }\r\n        if (id.getString() == \"\") {\r\n            console.log(\"hat ID has a null string in equalsID(...)\");\r\n            return false;\r\n        }\r\n        return this.getString() == id.getString();\r\n    }\r\n    public equalsString(id: string): boolean {\r\n        return this.getString() == id;\r\n    }\r\n    public getPatternArray(): string[] {\r\n        return [ID.PATTERN];\r\n    }\r\n}\r\nexport class NCNameID extends ID {\r\n    public static PATTERN: string = \"[A-z][A-z0-9_\\\\-]*\";\r\n    constructor(s: string) {\r\n        super(s);\r\n    }\r\n    public getPatternArray(): Array<string> {\r\n        return [NCNameID.PATTERN];\r\n    }\r\n    public equalsNCNameId(id: NCNameID): boolean {\r\n        return super.getString() == id.getString();\r\n    }\r\n}\r\nexport class NestedNCNameID extends NestedID {\r\n    public static PATTERN: string = \"[A-z][A-z0-9_\\\\-]*(\\\\.[A-z][A-z0-9_\\\\-]*)*\";\r\n\r\n    constructor(s: string) {\r\n        super(s);\r\n    }\r\n    public getPatternArray(): string[] {\r\n        return [NestedNCNameID.PATTERN];\r\n    }\r\n    public equalsNestedNCNameID(id: NestedNCNameID): boolean {\r\n        return super.getString() == id.getString();\r\n    }\r\n}\r\nexport class Ref {\r\n    private agencyId: NestedNCNameID = null;\r\n    private id: ID = null;\r\n    private version: Version = null;\r\n    private maintainedParentId: ID = null;\r\n    private maintainedParentVersion: Version = null;\r\n    private local: boolean = null;\r\n    private object: ObjectTypeCodelistType = null;\r\n    private package: PackageTypeCodelistType = null;\r\n\r\n    /*\r\n        constructor(agencyId: NestedNCNameID, id: NestedID, vers: Version, maintParent: ID, mainVers: Version, containId: NestedID, loc: boolean, ob: ObjectTypeCodelistType, pack: PackageTypeCodelistType) {\r\n            this.agencyId = agencyId;\r\n            this.id = id;\r\n            this.version = vers;\r\n            this.maintainedParentId = maintParent;\r\n            this.maintainedParentVersion = mainVers;\r\n            this.local = loc;\r\n            this.object = ob;\r\n            this.package = pack;\r\n        }\r\n    */\r\n    constructor() {\r\n\r\n    }\r\n    public getAgencyId(): NestedNCNameID {\r\n        return this.agencyId;\r\n    }\r\n    public getId(): ID {\r\n        return this.id;\r\n    }\r\n    public getVersion(): Version {\r\n        return this.version;\r\n    }\r\n    public getMaintainableParentId(): ID {\r\n        return this.maintainedParentId;\r\n    }\r\n    public getMaintainableParentVersion(): Version {\r\n        return this.maintainedParentVersion;\r\n    }\r\n    public getRefClass(): ObjectTypeCodelistType {\r\n        return this.object;\r\n    }\r\n    public getPack(): PackageTypeCodelistType {\r\n        return this.package;\r\n\r\n    }\r\n    public setAgencyId(a: NestedNCNameID) {\r\n        this.agencyId = a;\r\n    }\r\n    public setId(id: ID) {\r\n        this.id = id;\r\n    }\r\n    public setVersion(v: Version) {\r\n        this.version = v;\r\n    }\r\n    public setMaintainableParentId(id: ID) {\r\n        this.maintainedParentId = id;\r\n    }\r\n    public setMaintainableParentVersion(v: Version) {\r\n        this.maintainedParentVersion = v;\r\n    }\r\n    public setRefClass(ob: ObjectTypeCodelistType) {\r\n        this.object = ob;\r\n    }\r\n    public setPackage(p: PackageTypeCodelistType) {\r\n        this.package = p;\r\n    }\r\n    asReference(): Reference {\r\n        var reference: Reference = new Reference(this,null);\r\n        return reference;\r\n    }\r\n}\r\nexport class Reference {\r\n    public urn: xml.anyURI;\r\n    public ref: Ref;\r\n\r\n    private pack: PackageTypeCodelistType = null;\r\n    private clazz: ObjectTypeCodelistType = null;\r\n    private agency: NestedNCNameID = null;\r\n    private maintainedParentId: ID = null;\r\n    private maintainedParentVersion: Version = null;\r\n    private version: Version = null;\r\n    private containedIds: Array<ID> = null;\r\n    private objectId: NestedID = null;\r\n\r\n    constructor(ref: Ref, urn: xml.anyURI) {\r\n        this.ref = ref;\r\n        this.urn = urn;\r\n        if (this.ref != null) {\r\n            //try {\r\n            this.pack = ref.getPack();\r\n            this.clazz = ref.getRefClass();\r\n            this.agency = ref.getAgencyId();\r\n            this.objectId = ref.getId();\r\n            this.maintainedParentId = ref.getMaintainableParentId();\r\n            this.maintainedParentVersion = ref.getMaintainableParentVersion();\r\n            this.version = ref.getVersion();\r\n            //} catch (URISyntaxException ex) {\r\n            //    Logger.getLogger(ReferenceType.class.getName()).log(Level.SEVERE, null, ex);\r\n            //}\r\n        } else {\r\n            this.parse();\r\n        }\r\n        if (this.urn == null) {\r\n            try {\r\n                //if (this.getAgencyId() != null) {\r\n                this.produce();\r\n                //}\r\n            } catch (Error) {\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @return the ref\r\n     */\r\n    public getRef(): Ref {\r\n        return this.ref;\r\n    }\r\n\r\n    /**\r\n     * @param ref the ref to set\r\n     */\r\n    public setRef(ref: Ref) {\r\n        this.ref = ref;\r\n    }\r\n\r\n    /**\r\n     * @return the urn\r\n     */\r\n    public getUrn(): xml.anyURI {\r\n        return this.urn;\r\n    }\r\n\r\n    /**\r\n     * @param urn the urn to set\r\n     */\r\n    public setUrn(urn: xml.anyURI) {\r\n        this.urn = urn;\r\n    }\r\n\r\n    /**\r\n     * @return the pack\r\n     */\r\n    public getPack(): PackageTypeCodelistType {\r\n        return this.pack;\r\n    }\r\n    public setPack(pack: PackageTypeCodelistType) {\r\n        this.pack=pack;\r\n    }\r\n\r\n    /**\r\n     * @return the clazz\r\n     */\r\n    public getRefClass(): ObjectTypeCodelistType {\r\n        return this.clazz;\r\n    }\r\n\r\n    public setRefClass(clazz: ObjectTypeCodelistType) {\r\n        this.clazz = clazz;\r\n    }\r\n    /**\r\n     * @return the clazz\r\n     */\r\n    public getClazz(): ObjectTypeCodelistType {\r\n        return this.clazz;\r\n    }\r\n\r\n    /**\r\n     * @return the agency\r\n     */\r\n    public getAgencyId(): NestedNCNameID {\r\n        return this.agency;\r\n    }\r\n\r\n    /**\r\n     * @return the maintainedObjectId\r\n     */\r\n    public getMaintainableParentId(): ID {\r\n        return this.maintainedParentId;\r\n    }\r\n\r\n    /**\r\n     * @return the maintainedObjectVersion\r\n     */\r\n    public getVersion(): Version {\r\n        return this.version;\r\n    }\r\n\r\n    /**\r\n     * @return the objectId\r\n     */\r\n    public getId(): NestedID {\r\n        return this.objectId;\r\n    }\r\n\r\n    public getContainedObjectIds(): Array<ID> {\r\n        return this.containedIds;\r\n    }\r\n\r\n    /**\r\n     * @return the maintainedParentVersion\r\n     */\r\n    public getMaintainedParentVersion(): Version {\r\n        return this.maintainedParentVersion;\r\n    }\r\n    //public IDType getMainID() {\r\n    //    if( this.maintainedParentId==null ) return objectId!=null?objectId.asID():null;\r\n    //    else return maintainedParentId;\r\n    //}\r\n\r\n    public dump() {\r\n    }\r\n\r\n    public toString(): string {\r\n        var s: string = \"\";\r\n        return s;\r\n    }\r\n    public parse() {\r\n\r\n    }\r\n    public produce() {\r\n\r\n    }\r\n    public cloneRef():Ref {\r\n        var ref2 = new Ref();\r\n        ref2.setAgencyId(this.agency);\r\n        ref2.setId(this.getId().asID());\r\n        ref2.setMaintainableParentId(this.maintainedParentId);\r\n        ref2.setMaintainableParentVersion(this.maintainedParentVersion)\r\n        ref2.setRefClass(this.clazz);\r\n        ref2.setPackage(this.pack);\r\n        ref2.setVersion(this.version);\r\n        return ref2;\r\n        \r\n    }\r\n}\r\n\r\nexport class ObjectTypeCodelistType {\r\n\r\n    public static ENUM: Array<ObjectTypeCodelistType> = new Array<ObjectTypeCodelistType>();\r\n    public static STRING_ENUM: Array<string> = new Array<string>();\r\n\r\n    public static TARGET_ANY: string = ObjectTypeCodelistType.addString(\"Any\");\r\n    public static TARGET_AGENCY: string = ObjectTypeCodelistType.addString(\"Agency\");\r\n\r\n    public static TARGET_AGENCYSCHEME: string = ObjectTypeCodelistType.addString(\"AgencyScheme\");\r\n    public static TARGET_ATTACHMENTCONSTRAINT: string = ObjectTypeCodelistType.addString(\"AttachmentConstraint\");\r\n    public static TARGET_ATTRIBUTE: string = ObjectTypeCodelistType.addString(\"Attribute\");\r\n    public static TARGET_ATTRIBUTEDESCRIPTOR: string = ObjectTypeCodelistType.addString(\"AttributeDescriptor\");\r\n    public static TARGET_CATEGORISATION: string = ObjectTypeCodelistType.addString(\"Categorisation\");\r\n    public static TARGET_CATEGORY: string = ObjectTypeCodelistType.addString(\"Category\");\r\n    public static TARGET_CATEGORYSCHEMEMAP: string = ObjectTypeCodelistType.addString(\"CategorySchemeMap\");\r\n    public static TARGET_CATEGORYSCHEME: string = ObjectTypeCodelistType.addString(\"CategoryScheme\");\r\n    public static TARGET_CODE: string = ObjectTypeCodelistType.addString(\"Code\");\r\n    public static TARGET_CODEMAP: string = ObjectTypeCodelistType.addString(\"CodeMap\");\r\n    public static TARGET_CODELIST: string = ObjectTypeCodelistType.addString(\"Codelist\");\r\n    public static TARGET_CODELISTMAP: string = ObjectTypeCodelistType.addString(\"CodelistMap\");\r\n    public static TARGET_COMPONENTMAP: string = ObjectTypeCodelistType.addString(\"ComponentMap\");\r\n    public static TARGET_CONCEPT: string = ObjectTypeCodelistType.addString(\"Concept\");\r\n    public static TARGET_CONCEPTMAP: string = ObjectTypeCodelistType.addString(\"ConceptMap\");\r\n    public static TARGET_CONCEPTSCHEME: string = ObjectTypeCodelistType.addString(\"ConceptScheme\");\r\n    public static TARGET_CONCEPTSCHEMEMAP: string = ObjectTypeCodelistType.addString(\"ConceptSchemeMap\");\r\n    public static TARGET_CONSTRAINT: string = ObjectTypeCodelistType.addString(\"Constraint\");\r\n    public static TARGET_CONSTRAINTARGET: string = ObjectTypeCodelistType.addString(\"ConstraintTarget\");\r\n    public static TARGET_CONTENTCONSTRAINT: string = ObjectTypeCodelistType.addString(\"ContentConstraint\");\r\n    public static TARGET_DATAFLOW: string = ObjectTypeCodelistType.addString(\"Dataflow\");\r\n    public static TARGET_DATACONSUMER: string = ObjectTypeCodelistType.addString(\"DataConsumer\");\r\n    public static TARGET_DATACONSUMERSCHEME: string = ObjectTypeCodelistType.addString(\"DataConsumerScheme\");\r\n    public static TARGET_DATAPROVIDER: string = ObjectTypeCodelistType.addString(\"DataProvider\");\r\n    public static TARGET_DATAPROVIDERSCHEME: string = ObjectTypeCodelistType.addString(\"DataProviderScheme\");\r\n    public static TARGET_DATASETTARGET: string = ObjectTypeCodelistType.addString(\"DataSetTarget\");\r\n    public static TARGET_DATASTRUCTURE: string = ObjectTypeCodelistType.addString(\"DataStructure\");\r\n    public static TARGET_DIMENSION: string = ObjectTypeCodelistType.addString(\"Dimension\");\r\n    public static TARGET_DIMENSIONDESCRIPTOR: string = ObjectTypeCodelistType.addString(\"DimensionDescriptor\");\r\n    public static TARGET_DIMENSIONDESCRIPTORVALUESTARGET: string = ObjectTypeCodelistType.addString(\"DimensionDescriptorValuesTarget\");\r\n    public static TARGET_GROUPDIMENSIONDESCRIPTOR: string = ObjectTypeCodelistType.addString(\"GroupDimensionDescriptor\");\r\n    public static TARGET_HIERARCHICALCODE: string = ObjectTypeCodelistType.addString(\"HierarchicalCode\");\r\n    public static TARGET_HIERARCHICALCODELIST: string = ObjectTypeCodelistType.addString(\"HierarchicalCodelist\");\r\n    public static TARGET_HIERARCHY: string = ObjectTypeCodelistType.addString(\"Hierarchy\");\r\n    public static TARGET_HYBRIDCODELISTMAP: string = ObjectTypeCodelistType.addString(\"HybridCodelistMap\");\r\n    public static TARGET_HYBRIDCODEMAP: string = ObjectTypeCodelistType.addString(\"HybridCodeMap\");\r\n    public static TARGET_IDENTIFIABLEOBJECTTARGET: string = ObjectTypeCodelistType.addString(\"IdentifiableObjectTarget\");\r\n    public static TARGET_LEVEL: string = ObjectTypeCodelistType.addString(\"Level\");\r\n    public static TARGET_MEASUREDESCRIPTOR: string = ObjectTypeCodelistType.addString(\"MeasureDescriptor\");\r\n    public static TARGET_MEASUREDIMENSION: string = ObjectTypeCodelistType.addString(\"MeasureDimension\");\r\n    public static TARGET_METADATAFLOW: string = ObjectTypeCodelistType.addString(\"Metadataflow\");\r\n    public static TARGET_METADATAATTRIBUTE: string = ObjectTypeCodelistType.addString(\"MetadataAttribute\");\r\n    public static TARGET_METADATASET: string = ObjectTypeCodelistType.addString(\"MetadataSet\");\r\n    public static TARGET_METADATASTRUCTURE: string = ObjectTypeCodelistType.addString(\"MetadataStructure\");\r\n    public static TARGET_METADATATARGET: string = ObjectTypeCodelistType.addString(\"MetadataTarget\");\r\n    public static TARGET_ORGANISATION: string = ObjectTypeCodelistType.addString(\"Organisation\");\r\n    public static TARGET_ORGANISATIONMAP: string = ObjectTypeCodelistType.addString(\"OrganisationMap\");\r\n    public static TARGET_ORGANISATIONSCHEME: string = ObjectTypeCodelistType.addString(\"OrganisationScheme\");\r\n    public static TARGET_ORGANISATIONSCHEMEMAP: string = ObjectTypeCodelistType.addString(\"OrganisationSchemeMap\");\r\n    public static TARGET_ORGANISATIONUNIT: string = ObjectTypeCodelistType.addString(\"OrganisationUnit\");\r\n    public static TARGET_ORGANISATIONUNITSCHEME: string = ObjectTypeCodelistType.addString(\"OrganisationUnitScheme\");\r\n    public static TARGET_PRIMARYMEASURE: string = ObjectTypeCodelistType.addString(\"PrimaryMeasure\");\r\n    public static TARGET_PROCESS: string = ObjectTypeCodelistType.addString(\"Process\");\r\n    public static TARGET_PROCESSSTEP: string = ObjectTypeCodelistType.addString(\"ProcessStep\");\r\n    public static TARGET_PROVISIONAGREEMENT: string = ObjectTypeCodelistType.addString(\"ProvisionAgreement\");\r\n    public static TARGET_REPORTINGCATEGORY: string = ObjectTypeCodelistType.addString(\"ReportingCategory\");\r\n    public static TARGET_REPORTINGCATEGORYMAP: string = ObjectTypeCodelistType.addString(\"ReportingCategoryMap\");\r\n    public static TARGET_REPORTINGTAXONOMY: string = ObjectTypeCodelistType.addString(\"ReportingTaxonomy\");\r\n    public static TARGET_REPORTINGTAXONOMYMAP: string = ObjectTypeCodelistType.addString(\"ReportingTaxonomyMap\");\r\n    public static TARGET_REPORTINGYEARSTARTDAY: string = ObjectTypeCodelistType.addString(\"ReportingYearStartDay\");\r\n    public static TARGET_REPORTPERIODTARGET: string = ObjectTypeCodelistType.addString(\"ReportPeriodTarget\");\r\n    public static TARGET_REPORTSTRUCTURE: string = ObjectTypeCodelistType.addString(\"ReportStructure\");\r\n    public static TARGET_STRUCTUREMAP: string = ObjectTypeCodelistType.addString(\"StructureMap\");\r\n    public static TARGET_STRUCTURESET: string = ObjectTypeCodelistType.addString(\"StructureSet\");\r\n    public static TARGET_TIMEDIMENSION: string = ObjectTypeCodelistType.addString(\"TimeDimension\");\r\n    public static TARGET_TRANSITION: string = ObjectTypeCodelistType.addString(\"Transition\");\r\n\r\n    public static ANY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ANY);\r\n    public static AGENCY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_AGENCY);\r\n    public static AGENCYSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_AGENCYSCHEME);\r\n    public static ATTACHMENTCONSTRAINT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ATTACHMENTCONSTRAINT);\r\n    public static ATTRIBUTE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ATTRIBUTE);\r\n    public static ATTRIBUTEDESCRIPTOR: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ATTRIBUTEDESCRIPTOR);\r\n    public static CATEGORISATION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CATEGORISATION);\r\n    public static CATEGORY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CATEGORY);\r\n    public static CATEGORYSCHEMEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CATEGORYSCHEMEMAP);\r\n    public static CATEGORYSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CATEGORYSCHEME);\r\n    public static CODE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CODE);\r\n    public static CODEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CODE);\r\n    public static CODELIST: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CODELIST);\r\n    public static CODELISTMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CODELISTMAP);\r\n    public static COMPONENTMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_COMPONENTMAP);\r\n    public static CONCEPT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONCEPT);\r\n    public static CONCEPTMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONCEPTMAP);\r\n    public static CONCEPTSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONCEPTSCHEME);\r\n    public static CONCEPTSCHEMEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONCEPTSCHEMEMAP);\r\n    public static CONSTRAINT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONSTRAINT);\r\n    public static CONSTRAINTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONSTRAINTARGET);\r\n    public static CONTENTCONSTRAINT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONTENTCONSTRAINT);\r\n    public static DATAFLOW: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATAFLOW);\r\n    public static DATACONSUMER: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATACONSUMER);\r\n    public static DATACONSUMERSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATACONSUMERSCHEME);\r\n    public static DATAPROVIDER: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATAPROVIDER);\r\n    public static DATAPROVIDERSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATAPROVIDERSCHEME);\r\n    public static DATASETTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATASETTARGET);\r\n    public static DATASTRUCTURE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATASTRUCTURE);\r\n    public static DIMENSION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DIMENSION);\r\n    public static DIMENSIONDESCRIPTOR: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DIMENSIONDESCRIPTOR);\r\n    public static DIMENSIONDESCRIPTORVALUESTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DIMENSIONDESCRIPTORVALUESTARGET);\r\n    public static GROUPDIMENSIONDESCRIPTOR: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_GROUPDIMENSIONDESCRIPTOR);\r\n    public static HIERARCHICALCODE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HIERARCHICALCODE);\r\n    public static HIERARCHICALCODELIST: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HIERARCHICALCODELIST);\r\n    public static HIERARCHY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HIERARCHY);\r\n    public static HYBRIDCODELISTMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HYBRIDCODELISTMAP);\r\n    public static HYBRIDCODEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HYBRIDCODEMAP);\r\n    public static IDENTIFIABLEOBJECTTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_IDENTIFIABLEOBJECTTARGET);\r\n    public static LEVEL: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_LEVEL);\r\n    public static MEASUREDESCRIPTOR: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_MEASUREDESCRIPTOR);\r\n    public static MEASUREDIMENSION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_MEASUREDIMENSION);\r\n    public static METADATAFLOW: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATAFLOW);\r\n    public static METADATAATTRIBUTE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATAATTRIBUTE);\r\n    public static METADATASET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATASET);\r\n    public static METADATASTRUCTURE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATASTRUCTURE);\r\n    public static METADATATARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATATARGET);\r\n    public static ORGANISATION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATION);\r\n    public static ORGANISATIONMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONMAP);\r\n    public static ORGANISATIONSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONSCHEME);\r\n    public static ORGANISATIONSCHEMEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONSCHEMEMAP);\r\n    public static ORGANISATIONUNIT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONUNIT);\r\n    public static ORGANISATIONUNITSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONUNITSCHEME);\r\n    public static PRIMARYMEASURE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_PRIMARYMEASURE);\r\n    public static PROCESS: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_PROCESS);\r\n    public static PROCESSSTEP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_PROCESSSTEP);\r\n    public static PROVISIONAGREEMENT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_PROVISIONAGREEMENT);\r\n    public static REPORTINGCATEGORY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGCATEGORY);\r\n    public static REPORTINGCATEGORYMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGCATEGORYMAP);\r\n    public static REPORTINGTAXONOMY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGTAXONOMY);\r\n    public static REPORTINGTAXONOMYMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGTAXONOMYMAP);\r\n    public static REPORTINGYEARSTARTDAY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGYEARSTARTDAY);\r\n    public static REPORTPERIODTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTPERIODTARGET);\r\n    public static REPORTSTRUCTURE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTSTRUCTURE);\r\n    public static STRUCTUREMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_STRUCTUREMAP);\r\n    public static STRUCTURESET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_STRUCTURESET);\r\n    public static TIMEDIMENSION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_TIMEDIMENSION);\r\n    public static TRANSITION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_TRANSITION);\r\n\r\n    public static INT_ANY: number = 0;\r\n    public static INT_AGENCY: number = 1;\r\n    public static INT_AGENCYSCHEME: number = 2;\r\n    public static INT_ATTACHMENTCONSTRAINT: number = 3;\r\n    public static INT_ATTRIBUTE: number = 4;\r\n    public static INT_ATTRIBUTEDESCRIPTOR: number = 5;\r\n    public static INT_CATEGORISATION: number = 6;\r\n    public static INT_CATEGORY: number = 7;\r\n    public static INT_CATEGORYSCHEMEMAP: number = 8;\r\n    public static INT_CATEGORYSCHEME: number = 9;\r\n    public static INT_CODE: number = 10;\r\n    public static INT_CODEMAP: number = 11;\r\n    public static INT_CODELIST: number = 12;\r\n    public static INT_CODELISTMAP: number = 13;\r\n    public static INT_COMPONENTMAP: number = 14;\r\n    public static INT_CONCEPT: number = 15;\r\n    public static INT_CONCEPTMAP: number = 16;\r\n    public static INT_CONCEPTSCHEME: number = 17;\r\n    public static INT_CONCEPTSCHEMEMAP: number = 18;\r\n    public static INT_CONSTRAINT: number = 19;\r\n    public static INT_CONSTRAINTARGET: number = 20;\r\n    public static INT_CONTENTCONSTRAINT: number = 21;\r\n    public static INT_DATAFLOW: number = 22;\r\n    public static INT_DATACONSUMER: number = 23;\r\n    public static INT_DATACONSUMERSCHEME: number = 24;\r\n    public static INT_DATAPROVIDER: number = 25;\r\n    public static INT_DATAPROVIDERSCHEME: number = 26;\r\n    public static INT_DATASETTARGET: number = 27;\r\n    public static INT_DATASTRUCTURE: number = 28;\r\n    public static INT_DIMENSION: number = 29;\r\n    public static INT_DIMENSIONDESCRIPTOR: number = 30;\r\n    public static INT_DIMENSIONDESCRIPTORVALUESTARGET: number = 31;\r\n    public static INT_GROUPDIMENSIONDESCRIPTOR: number = 32;\r\n    public static INT_HIERARCHICALCODE: number = 33;\r\n    public static INT_HIERARCHICALCODELIST: number = 34;\r\n    public static INT_HIERARCHY: number = 35;\r\n    public static INT_HYBRIDCODELISTMAP: number = 36;\r\n    public static INT_HYBRIDCODEMAP: number = 37;\r\n    public static INT_IDENTIFIABLEOBJECTTARGET: number = 38;\r\n    public static INT_LEVEL: number = 39;\r\n    public static INT_MEASUREDESCRIPTOR: number = 40;\r\n    public static INT_MEASUREDIMENSION: number = 41;\r\n    public static INT_METADATAFLOW: number = 42;\r\n    public static INT_METADATAATTRIBUTE: number = 43;\r\n    public static INT_METADATASET: number = 44;\r\n    public static INT_METADATASTRUCTURE: number = 45;\r\n    public static INT_METADATATARGET: number = 46;\r\n    public static INT_ORGANISATION: number = 47;\r\n    public static INT_ORGANISATIONMAP: number = 48;\r\n    public static INT_ORGANISATIONSCHEME: number = 49;\r\n    public static INT_ORGANISATIONSCHEMEMAP: number = 50;\r\n    public static INT_ORGANISATIONUNIT: number = 51;\r\n    public static INT_ORGANISATIONUNITSCHEME: number = 52;\r\n    public static INT_PRIMARYMEASURE: number = 53;\r\n    public static INT_PROCESS: number = 54;\r\n    public static INT_PROCESSSTEP: number = 55;\r\n    public static INT_PROVISIONAGREEMENT: number = 56;\r\n    public static INT_REPORTINGCATEGORY: number = 57;\r\n    public static INT_REPORTINGCATEGORYMAP: number = 58;\r\n    public static INT_REPORTINGTAXONOMY: number = 59;\r\n    public static INT_REPORTINGTAXONOMYMAP: number = 60;\r\n    public static INT_REPORTINGYEARSTARTDAY: number = 61;\r\n    public static INT_REPORTPERIODTARGET: number = 62;\r\n    public static INT_REPORTSTRUCTURE: number = 63;\r\n    public static INT_STRUCTUREMAP: number = 64;\r\n    public static INT_STRUCTURESET: number = 65;\r\n    public static INT_TIMEDIMENSION: number = 66;\r\n    public static INT_TRANSITION: number = 67;\r\n\r\n    // Utility\r\n    private static add(s: string): ObjectTypeCodelistType {\r\n        var b: ObjectTypeCodelistType = new ObjectTypeCodelistType(s);\r\n        ObjectTypeCodelistType.ENUM.push(b);\r\n        return b;\r\n    }\r\n    private static addString(s: string): string {\r\n        ObjectTypeCodelistType.STRING_ENUM.push(s);\r\n        return s;\r\n    }\r\n\r\n    public static fromString(s: string): ObjectTypeCodelistType {\r\n        for (var i: number = 0; i < ObjectTypeCodelistType.ENUM.length; i++) {\r\n            if (ObjectTypeCodelistType.ENUM[i].target == s) return ObjectTypeCodelistType.ENUM[i];\r\n        }\r\n        return null;\r\n    }\r\n    public static fromStringWithException(s: string): ObjectTypeCodelistType {\r\n        for (var i: number = 0; i < ObjectTypeCodelistType.ENUM.length; i++) {\r\n            if (ObjectTypeCodelistType.ENUM[i].target == s) return ObjectTypeCodelistType.ENUM[i];\r\n        }\r\n        throw new Error(\"Value:\" + s + \" not found in enumeration! - ObjectypeCodelistType\");\r\n    }\r\n    // Instance\r\n    private target: string = null;\r\n    private index: number = -1;\r\n    public constructor(s: string) {\r\n        var contains: boolean = false;\r\n        for (var i = 0; i < ObjectTypeCodelistType.STRING_ENUM.length; i++) {\r\n            if (ObjectTypeCodelistType.STRING_ENUM[i] == s) {\r\n                contains = true;\r\n            }\r\n        }\r\n        if (!contains) throw new Error(s + \" is not a valid CodeTypeCodelistType\");\r\n        this.target = s;\r\n        this.index = ObjectTypeCodelistType.STRING_ENUM.indexOf(s);\r\n    }\r\n    public toString(): string { return this.target; }\r\n    public toInt(): number {\r\n        return this.index;\r\n    }\r\n}\r\n\r\nexport class PackageTypeCodelistType {\r\n\r\n    public static ENUM: Array<PackageTypeCodelistType> = new Array<PackageTypeCodelistType>();\r\n    public static STRING_ENUM: Array<string> = new Array<string>();\r\n\r\n    public static TARGET_BASE: string = PackageTypeCodelistType.addString(\"base\");\r\n    public static TARGET_DATASTRUCTURE: string = PackageTypeCodelistType.addString(\"datastructure\");\r\n    public static TARGET_METADATASTRUCTURE: string = PackageTypeCodelistType.addString(\"metadatastructure\");\r\n    public static TARGET_PROCESS: string = PackageTypeCodelistType.addString(\"process\");\r\n    public static TARGET_REGISTRY: string = PackageTypeCodelistType.addString(\"registry\");\r\n    public static TARGET_MAPPING: string = PackageTypeCodelistType.addString(\"mapping\");\r\n    public static TARGET_CODELIST: string = PackageTypeCodelistType.addString(\"codelist\");\r\n    public static TARGET_CATEGORYSCHEME: string = PackageTypeCodelistType.addString(\"categoryscheme\");\r\n    public static TARGET_CONCEPTSCHEME: string = PackageTypeCodelistType.addString(\"conceptscheme\");\r\n\r\n    public static BASE: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_BASE);\r\n    public static DATASTRUCTURE: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_DATASTRUCTURE);\r\n    public static METADATASTRUCTURE: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_METADATASTRUCTURE);\r\n    public static PROCESS: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_PROCESS);\r\n    public static REGISTRY: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_REGISTRY);\r\n    public static MAPPING: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_MAPPING);\r\n    public static CODELIST: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_CODELIST);\r\n    public static CATEGORYSCHEME: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_CATEGORYSCHEME);\r\n    public static CONCEPTSCHEME: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_CONCEPTSCHEME);\r\n    // Utility\r\n    private static add(s: string): PackageTypeCodelistType {\r\n        var b: PackageTypeCodelistType = new PackageTypeCodelistType(s);\r\n        PackageTypeCodelistType.ENUM.push(b);\r\n        return b;\r\n    }\r\n    private static addString(s: string): string {\r\n        PackageTypeCodelistType.STRING_ENUM.push(s);\r\n        return s;\r\n    }\r\n\r\n    public static fromString(s: string): PackageTypeCodelistType {\r\n        for (var i = 0; i < PackageTypeCodelistType.ENUM.length; i++) {\r\n            if (PackageTypeCodelistType.ENUM[i].target == s) return PackageTypeCodelistType.ENUM[i];\r\n        }\r\n        return null;\r\n    }\r\n    public static fromStringWithException(s: string): PackageTypeCodelistType {\r\n        for (var i = 0; i < PackageTypeCodelistType.ENUM.length; i++) {\r\n            if (PackageTypeCodelistType.ENUM[i].target == s) return PackageTypeCodelistType.ENUM[i];\r\n        }\r\n        throw new Error(\"Value:\" + s + \" not found in PackageTypeCodelistType enumeration!\");\r\n    }\r\n    // Instance\r\n    private target: string = null;\r\n    constructor(s: string) {\r\n        var contains: boolean = false;\r\n        for (var i = 0; i < PackageTypeCodelistType.STRING_ENUM.length; i++) {\r\n            if (PackageTypeCodelistType.STRING_ENUM[i] == s) {\r\n                contains = true;\r\n            }\r\n        }\r\n        if (!contains) throw new Error(s + \" is not a valid CodeTypeCodelistType\");\r\n        this.target = s;\r\n    }\r\n    public toString(): string { return this.target; }\r\n}\r\n\r\nexport class ObsDimensionsCodeType {\r\n    /*\r\n     * DO ME! Add Proper codes for this class\r\n     * \r\n     * \r\n     */\r\n    public static ENUM: Array<ObsDimensionsCodeType> = new Array<ObsDimensionsCodeType>();\r\n    public static STRING_ENUM: Array<string> = new Array<string>();\r\n\r\n    public static ALL_DIMENSIONS_TEXT: string = ObsDimensionsCodeType.addString(\"AllDimensions\");\r\n    public static TIME_PERIOD_TEXT: string = ObsDimensionsCodeType.addString(\"TIME_PERIOD\");\r\n    public static ALL_DIMENSIONS: ObsDimensionsCodeType = new ObsDimensionsCodeType(ObsDimensionsCodeType.ALL_DIMENSIONS_TEXT);\r\n    public static TIME_PERIOD: ObsDimensionsCodeType = new ObsDimensionsCodeType(ObsDimensionsCodeType.TIME_PERIOD_TEXT);\r\n    // Utility\r\n    private static add(s: string): ObsDimensionsCodeType {\r\n        var b: ObsDimensionsCodeType = new ObsDimensionsCodeType(s);\r\n        ObsDimensionsCodeType.ENUM.push(b);\r\n        return b;\r\n    }\r\n    private static addString(s: string): string {\r\n        ObsDimensionsCodeType.STRING_ENUM.push(s);\r\n        return s;\r\n    }\r\n\r\n    public static fromString(s: string): ObsDimensionsCodeType {\r\n        for (var i = 0; i < ObsDimensionsCodeType.ENUM.length; i++) {\r\n            if (ObsDimensionsCodeType.ENUM[i].target == s) return ObsDimensionsCodeType.ENUM[i];\r\n        }\r\n        return null;\r\n    }\r\n    public static fromStringWithException(s: string): ObsDimensionsCodeType {\r\n        for (var i = 0; i < ObsDimensionsCodeType.ENUM.length; i++) {\r\n            if (ObsDimensionsCodeType.ENUM[i].target == s) return ObsDimensionsCodeType.ENUM[i];\r\n        }\r\n        throw new Error(\"Value:\" + s + \" not found in ObsDimensionCodeType enumeration!\");\r\n    }\r\n    // Instance\r\n    private target: string = null;\r\n    constructor(s: string) {\r\n        var contains: boolean = false;\r\n        for (var i = 0; i < ObsDimensionsCodeType.STRING_ENUM.length; i++) {\r\n            if (ObsDimensionsCodeType.STRING_ENUM[i] == s) {\r\n                contains = true;\r\n            }\r\n        }\r\n        if (!contains) throw new Error(s + \" is not a valid ObsDimensionsCodeType\");\r\n        this.target = s;\r\n    }\r\n    public toString(): string { return this.target; }\r\n}\r\nexport class ProvisionAgreementReference { }\r\nexport class StructureReferenceBase { }\r\nexport class StructureUsageReferenceBase { }\r\n"]}