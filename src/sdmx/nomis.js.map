{"version":3,"sources":["sdmx/nomis.ts"],"names":["parseXml","NOMISRESTServiceRegistry","NOMISRESTServiceRegistry.constructor","NOMISRESTServiceRegistry.throttle","NOMISRESTServiceRegistry.getRemoteRegistry","NOMISRESTServiceRegistry.getRepository","NOMISRESTServiceRegistry.clear","NOMISRESTServiceRegistry.query","NOMISRESTServiceRegistry.load","NOMISRESTServiceRegistry.unload","NOMISRESTServiceRegistry.makeRequest","NOMISRESTServiceRegistry.makeRequest2","NOMISRESTServiceRegistry.retrieve","NOMISRESTServiceRegistry.retrieveData","NOMISRESTServiceRegistry.retrieve2","NOMISRESTServiceRegistry.findDataStructure","NOMISRESTServiceRegistry.listDataflows","NOMISRESTServiceRegistry.getServiceURL","NOMISRESTServiceRegistry.parseGeography","NOMISRESTServiceRegistry.recurseDomChildren","NOMISRESTServiceRegistry.loopNodeChildren","NOMISRESTServiceRegistry.outputNode","NOMISRESTServiceRegistry.findNodeName","NOMISRESTServiceRegistry.searchNodeName","NOMISRESTServiceRegistry.findDataflow","NOMISRESTServiceRegistry.findCode","NOMISRESTServiceRegistry.findCodelist","NOMISRESTServiceRegistry.findItemType","NOMISRESTServiceRegistry.findConcept","NOMISRESTServiceRegistry.findConceptScheme","NOMISRESTServiceRegistry.searchDataStructure","NOMISRESTServiceRegistry.searchDataflow","NOMISRESTServiceRegistry.searchCodelist","NOMISRESTServiceRegistry.searchItemType","NOMISRESTServiceRegistry.searchConcept","NOMISRESTServiceRegistry.searchConceptScheme","NOMISRESTServiceRegistry.getLocalRegistry","NOMISRESTServiceRegistry.save","NOMISGeography","NOMISGeography.constructor","NOMISGeography.getGeography","NOMISGeography.getCubeName","NOMISGeography.getCubeId","NOMISGeography.getGeographyName"],"mappings":"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AEA,CAACA,GAAGA,QAAQA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACvCA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,YAAYA,CAACA,SAASA,CAACA,IAAIA,WAAWA,CAACA,CAACA,CAACA;oBACrDA,QAAQA,GAAGA,QAAQA,CAACA,CAACA,CAACA,CAACA;gBAC3BA,CAACA;YACLA,CAACA;YACDA,EAAEA,CAACA,CAACA,QAAQA,IAAIA,IAAIA,CAACA;gBAACA,MAAMA,CAACA,QAAQA,CAACA;YACtCA,IAAIA,SAASA,GAAGA,IAAIA,CAACA,YAAYA,CAACA,OAAOA,EAAEA,QAAQA,CAACA,UAAUA,CAACA,CAACA;YAChEA,EAAEA,CAACA,CAACA,SAASA,IAAIA,IAAIA,CAACA;gBAACA,MAAMA,CAACA,QAAQA,CAACA;YACvCA,IAAIA,SAASA,GAAGA,IAAIA,CAACA,cAAcA,CAACA,MAAMA,EAAEA,SAASA,CAACA,UAAUA,CAACA,CAACA;YAClEA,EAAEA,CAACA,CAACA,SAASA,CAACA,MAAMA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACxBA,MAAMA,CAACA,QAAQA,CAACA;YACpBA,CAACA;YACDA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,SAASA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBAChDA,IAAIA,EAAEA,GAAmBA,IAAIA,cAAcA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA,YAAYA,CAACA,OAAOA,CAACA,EAAEA,SAASA,CAACA,CAACA,CAACA,CAACA,YAAYA,CAACA,MAAMA,CAACA,EAAEA,QAAQA,EAAEA,MAAMA,CAACA,CAACA;gBACrIA,QAAQA,CAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA;YACtBA,CAACA;YACDA,MAAMA,CAACA,QAAQA,CAACA;QACpBA,CAACA;QACDjB,qDAAkBA,GAAlBA,UAAmBA,KAAUA,EAAEA,MAAWA;YACtCkB,IAAIA,KAAKA,CAACA;YACVA,EAAEA,CAACA,CAACA,KAAKA,CAACA,UAAUA,CAACA,CAACA,CAACA;gBACnBA,KAAKA,GAAGA,KAAKA,CAACA,UAAUA,CAACA;gBACzBA,IAAIA,CAACA,gBAAgBA,CAACA,KAAKA,EAAEA,MAAMA,CAACA,CAACA;YACzCA,CAACA;QACLA,CAACA;QAEDlB,mDAAgBA,GAAhBA,UAAiBA,KAAiBA,EAAEA,MAAWA;YAC3CmB,IAAIA,IAAIA,CAACA;YACTA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,KAAKA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACpCA,IAAIA,GAAGA,KAAKA,CAACA,CAACA,CAACA,CAACA;gBAChBA,EAAEA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA;oBACTA,IAAIA,CAACA,UAAUA,CAACA,IAAIA,CAACA,CAACA;gBAC1BA,CAACA;gBACDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;oBAClBA,IAAIA,CAACA,kBAAkBA,CAACA,IAAIA,EAAEA,MAAMA,CAACA,CAACA;gBAC1CA,CAACA;YACLA,CAACA;QACLA,CAACA;QACDnB,6CAAUA,GAAVA,UAAWA,IAASA;YAChBoB,IAAIA,UAAUA,GAAGA,QAAQA,CAACA;YAC1BA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,KAAKA,CAACA,CAACA,CAACA,CAACA;gBACtBA,OAAOA,CAACA,GAAGA,CAACA,WAAWA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,CAACA;YAC5CA,CAACA;YAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,KAAKA,CAACA,CAACA,CAACA,CAACA;gBAC7BA,6BAA6BA;gBAC7BA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA,IAAIA,CAACA,OAAOA,CAACA,UAAUA,EAAEA,EAAEA,CAACA,CAACA;gBAC9CA,EAAEA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA;oBACZA,OAAOA,CAACA,GAAGA,CAACA,QAAQA,GAAGA,IAAIA,CAACA,IAAIA,CAACA,CAACA;gBACtCA,CAACA;YACLA,CAACA;QACLA,CAACA;QACDpB,+CAAYA,GAAZA,UAAaA,CAASA,EAAEA,UAAeA;YACnCqB,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,UAAUA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACjDA,IAAIA,EAAEA,GAAWA,UAAUA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA;gBACxCA,2DAA2DA;gBAC3DA,EAAEA,CAACA,CAACA,EAAEA,CAACA,OAAOA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACrBA,yBAAyBA;oBACzBA,MAAMA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA;gBACzBA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDrB,iDAAcA,GAAdA,UAAeA,CAASA,EAAEA,UAAeA;YACrCsB,IAAIA,MAAMA,GAAeA,EAAEA,CAACA;YAC5BA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,UAAUA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACjDA,IAAIA,EAAEA,GAAWA,UAAUA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA;gBACxCA,2DAA2DA;gBAC3DA,EAAEA,CAACA,CAACA,EAAEA,CAACA,OAAOA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACrBA,yBAAyBA;oBACzBA,MAAMA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAC/BA,CAACA;YACLA,CAACA;YACDA,EAAEA,CAACA,CAACA,MAAMA,CAACA,MAAMA,IAAIA,CAACA,CAACA,CAACA,CAACA;YAEzBA,CAACA;YACDA,MAAMA,CAACA,MAAMA,CAACA;QAClBA,CAACA;QACDtB,+CAAYA,GAAZA,UAAaA,GAA+BA;YACxCuB,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDvB,2CAAQA,GAARA,UAASA,GAA+BA,IAAiCwB,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACvFxB,+CAAYA,GAAZA,UAAaA,GAA+BA,IAAiCyB,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;QAC3FzB,+CAAYA,GAAZA,UAAaA,IAAgCA,IAAiC0B,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;QAC5F1B,8CAAWA,GAAXA,UAAYA,GAA+BA,IAAoC2B,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;QAC7F3B,oDAAiBA,GAAjBA,UAAkBA,GAA+BA,IAA0C4B,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACzG5B,sDAAmBA,GAAnBA,UAAoBA,GAA+BA,IAA6C6B,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;QAC9G7B,iDAAcA,GAAdA,UAAeA,GAA+BA,IAAwC8B,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACpG9B,iDAAcA,GAAdA,UAAeA,GAA+BA,IAAwC+B,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACpG/B,iDAAcA,GAAdA,UAAeA,IAAgCA,IAAwCgC,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACrGhC,gDAAaA,GAAbA,UAAcA,GAA+BA,IAA2CiC,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACtGjC,sDAAmBA,GAAnBA,UAAoBA,GAA+BA,IAAiDkC,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA;QAClHlC,mDAAgBA,GAAhBA;YACImC,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA;QACtBA,CAACA;QACDnC,uCAAIA,GAAJA,cAAcoC,CAACA;QACnBpC,+BAACA;IAADA,CAtfA,AAsfCA,IAAA;IAtfY,gCAAwB,2BAsfpC,CAAA;IACD;QAKIqC,wBAAYA,SAAiBA,EAAEA,aAAqBA,EAAEA,QAAgBA,EAAEA,MAAcA;YAJ9EC,cAASA,GAAWA,EAAEA,CAACA;YACvBA,kBAAaA,GAAWA,EAAEA,CAACA;YAC3BA,aAAQA,GAAWA,EAAEA,CAACA;YACtBA,WAAMA,GAAWA,EAAEA,CAACA;YAExBA,IAAIA,CAACA,SAASA,GAAGA,SAASA,CAACA;YAC3BA,IAAIA,CAACA,aAAaA,GAAGA,aAAaA,CAACA;YACnCA,IAAIA,CAACA,QAAQA,GAAGA,QAAQA,CAACA;YACzBA,IAAIA,CAACA,MAAMA,GAAGA,MAAMA,CAACA;QAEzBA,CAACA;QACDD,qCAAYA,GAAZA;YACIE,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA;QAC1BA,CAACA;QACDF,oCAAWA,GAAXA,cAAgBG,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA;QACvCH,kCAASA,GAATA;YACII,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA;QACvBA,CAACA;QACDJ,yCAAgBA,GAAhBA;YACIK,MAAMA,CAACA,IAAIA,CAACA,aAAaA,CAACA;QAC9BA,CAACA;QAELL,qBAACA;IAADA,CAvBA,AAuBCA,IAAA;IAvBY,sBAAc,iBAuB1B,CAAA","file":"sdmx/nomis.js","sourcesContent":["/*\n    This file is part of sdmx-js.\n\n    sdmx-js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    sdmx-js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\n    Copyright (C) 2016 James Gardner\n*/\n///<reference path=\"../bluebird.d.ts\"/>\n///<reference path=\"../moment.d.ts\"/>\nimport moment = require(\"moment\");\nimport interfaces = require(\"sdmx/interfaces\");\nimport registry = require(\"sdmx/registry\");\nimport structure = require(\"sdmx/structure\");\nimport message = require(\"sdmx/message\");\nimport commonreferences = require(\"sdmx/commonreferences\");\nimport common = require(\"sdmx/common\");\nimport sdmx = require(\"sdmx\");\nimport data = require(\"sdmx/data\");\nimport time = require(\"sdmx/time\");\nexport function parseXml(s: string): any {\n    var parseXml: DOMParser;\n    parseXml = new DOMParser();\n    var xmlDoc = parseXml.parseFromString(s, \"text/xml\");\n    return xmlDoc;\n}\nexport class NOMISRESTServiceRegistry implements interfaces.RemoteRegistry, interfaces.Queryable {\n\n    private agency: string = \"NOMIS\";\n    private serviceURL: string = \"http://www.nomisweb.co.uk/api\";\n    private options: string = \"uid=0xad235cca367972d98bd642ef04ea259da5de264f\";\n    private local: interfaces.LocalRegistry = new registry.LocalRegistry();\n\n    private dataflowList: Array<structure.Dataflow> = null;\n\n    public throttle(fn, threshhold, scope) {\n        threshhold || (threshhold = 250);\n        var last,\n            deferTimer;\n        return function() {\n            var context = scope || this;\n\n            var now = +new Date,\n                args = arguments;\n            if (last && now < last + threshhold) {\n                // hold on to it\n                clearTimeout(deferTimer);\n                deferTimer = setTimeout(function() {\n                    last = now;\n                    fn.apply(context, args);\n                }, threshhold);\n            } else {\n                last = now;\n                fn.apply(context, args);\n            }\n        };\n    }\n    getRemoteRegistry(): interfaces.RemoteRegistry {\n        return this;\n    }\n\n    getRepository(): interfaces.Repository {\n        return null;\n\n    }\n\n    clear() {\n        this.local.clear();\n    }\n    query(q: data.Query): Promise<message.DataMessage> {\n        var flow: structure.Dataflow = q.getDataflow();\n        var startTime = q.getStartDate();\n        var endTime = q.getEndDate();\n        var geogIndex: number = flow.getId().toString().lastIndexOf(\"_\");\n        var geog: string = flow.getId().toString().substring(geogIndex + 1, flow.getId().toString().length);\n        var geography_string: string = \"&geography=\" + geog;\n        if (\"NOGEOG\" == geog) {\n            geography_string = \"\";\n        }\n        var id: string = flow.getId().toString().substring(0, geogIndex);\n        var dst_ref: commonreferences.Ref = new commonreferences.Ref();\n        dst_ref.setAgencyId(flow.getAgencyId());\n        dst_ref.setId(new commonreferences.ID(id));\n        dst_ref.setVersion(flow.getVersion());\n        var dst_reference = new commonreferences.Reference(dst_ref, null);\n        var st: Promise<message.StructureType> = this.retrieve(this.getServiceURL() + \"/v01/dataset/\" + id + \"/time/def.sdmx.xml\");\n        return <Promise<message.DataMessage>>st.then(function(struc: message.StructureType) {\n            var times: string = \"&TIME=\";\n            var timeCL: structure.Codelist = struc.getStructures().getCodeLists().getCodelists()[0];\n            var comma: boolean = true;\n            for (var i: number = 0; i < timeCL.size(); i++) {\n                var rtp: time.RegularTimePeriod = time.TimeUtil.parseTime(\"\", timeCL.getItems()[i].getId().toString());\n                var ts = moment(rtp.getStart());\n                var te = moment(rtp.getEnd());\n                var startMoment = moment(startTime);\n                var endMoment = moment(endTime);\n                if (ts.isBetween(startMoment, endMoment)) {\n                    //console.log(timeCL.getItems()[i].getId().toString() + \" is between \" + startTime + \" and \" + endTime);\n                    if (!comma) {\n                        times += \",\";\n                        comma = true;\n                    }\n                    times += timeCL.getItem(i).getId().toString();\n                    comma = false;\n                } else {\n                    console.log(timeCL.getItems()[i].getId().toString() + \" is not between \" + startTime + \" and \" + endTime);\n                }\n            }\n            var queryString: string = \"\";\n            var kns = q.getKeyNames();\n            for (var i: number = 0; i < kns.length; i++) {\n                var name: string = kns[i];\n                var values = q.getQueryKey(kns[i]).getValues();\n                if (i == 0) {\n                    queryString += \"?\";\n                } else {\n                    queryString += \"&\";\n                }\n                queryString += name + \"=\";\n                for (var j: number = 0; j < values.length; j++) {\n                    queryString += values[j];\n                    if (j < values.length - 1) {\n                        queryString += \",\";\n                    }\n                }\n            }\n            return this.retrieveData(flow, \"http://www.nomisweb.co.uk/api/v01/dataset/\" + dst_ref.getId() + \".compact.sdmx.xml\" + queryString + times + \"&\" + this.options);\n        }.bind(this));\n        /*\n        StringBuilder q = new StringBuilder();\n        for (int i = 0; i < structure.getDataStructureComponents().getDimensionList().size(); i++) {\n            DimensionType dim = structure.getDataStructureComponents().getDimensionList().getDimension(i);\n            boolean addedParam = false;\n            String concept = dim.getConceptIdentity().getId().toString();\n            List<String> params = message.getQuery().getDataWhere().getAnd().get(0).getDimensionParameters(concept);\n            System.out.println(\"Params=\" + params);\n            if (params.size() > 0) {\n                addedParam = true;\n                q.append(concept + \"=\");\n                for (int j = 0; j < params.size(); j++) {\n                    q.append(params.get(j));\n                    if (j < params.size() - 1) {\n                        q.append(\",\");\n                    }\n                }\n            }\n            if (addedParam && i < structure.getDataStructureComponents().getDimensionList().size() - 1) {\n                q.append(\"&\");\n            }\n            addedParam = false;\n        }\n        DataMessage msg = null;\n        msg = query(pparams, getServiceURL() + \"/v01/dataset/\" + id + \".compact.sdmx.xml?\" + q + \"&time=\" + times.toString() + geography_string +\"&\" + options);\n        */\n        //return null;\n    }\n    constructor(agency: string, service: string, options: string) {\n        if (service != null) {\n            this.serviceURL = service;\n        } else {\n\n        }\n        if (agency != null) {\n            this.agency = agency;\n        }\n        if (options != null) {\n            this.options = options;\n        }\n    }\n\n    load(struct: message.StructureType) {\n        console.log(\"nomis load\");\n        this.local.load(struct);\n    }\n\n    unload(struct: message.StructureType) {\n        this.local.unload(struct);\n    }\n    makeRequest(opts): Promise<string> {\n        return new Promise<string>(function(resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            console.log(\"nomis retrieve:\" + opts.url);\n            xhr.open(opts.method, opts.url);\n            xhr.onload = function() {\n                if (this.status >= 200 && this.status < 300) {\n                    resolve(xhr.responseText);\n                } else {\n                    reject({\n                        status: this.status,\n                        statusText: xhr.statusText\n                    });\n                }\n            };\n            xhr.onerror = function() {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            };\n            if (opts.headers) {\n                Object.keys(opts.headers).forEach(function(key) {\n                    xhr.setRequestHeader(key, opts.headers[key]);\n                });\n            }\n            var params = opts.params;\n            // We'll need to stringify if we've been given an object\n            // If we have a string, this is skipped.\n            if (params && typeof params === 'object') {\n                params = Object.keys(params).map(function(key) {\n                    return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n                }).join('&');\n            }\n            xhr.send(params);\n        });\n    }\n    \n    /*\n     * Modified to always resolve\n     * \n     */\n    makeRequest2(opts): Promise<string> {\n        return new Promise<string>(function(resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            console.log(\"nomis retrieve:\" + opts.url);\n            xhr.open(opts.method, opts.url);\n            xhr.onload = function() {\n                if (this.status >= 200 && this.status < 300) {\n                    resolve(xhr.responseText);\n                } else {\n                    resolve(\"\");\n                }\n            };\n            xhr.onerror = function() {\n                resolve(\"\");\n            };\n            if (opts.headers) {\n                Object.keys(opts.headers).forEach(function(key) {\n                    xhr.setRequestHeader(key, opts.headers[key]);\n                });\n            }\n            var params = opts.params;\n            // We'll need to stringify if we've been given an object\n            // If we have a string, this is skipped.\n            if (params && typeof params === 'object') {\n                params = Object.keys(params).map(function(key) {\n                    return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n                }).join('&');\n            }\n            xhr.send(params);\n        });\n    }\n    public retrieve(urlString: string): Promise<message.StructureType> {\n        var s: string = this.options;\n        if (urlString.indexOf(\"?\") == -1) {\n            s = \"?\" + this.options + \"&random=\" + new Date().getTime();\n        } else {\n            s = \"&\" + this.options + \"&random=\" + new Date().getTime();\n        }\n        var opts: any = {};\n        opts.url = urlString + s;\n        opts.method = \"GET\";\n        opts.headers = { \"Connection\": \"close\" };\n        return this.makeRequest(opts).then(function(a) {\n            return sdmx.SdmxIO.parseStructure(a);\n        });\n    }\n    public retrieveData(dataflow: structure.Dataflow, urlString: string): Promise<message.DataMessage> {\n        var s: string = this.options;\n        if (urlString.indexOf(\"?\") == -1) {\n            s = \"?\" + s + \"&random=\" + new Date().getTime();\n        } else {\n            s = \"&\" + s + \"&random=\" + new Date().getTime();\n        }\n        var opts: any = {};\n        opts.url = urlString + s;\n        opts.method = \"GET\";\n        opts.headers = { \"Connection\": \"close\" };\n        return this.makeRequest(opts).then(function(a) {\n            var dm = sdmx.SdmxIO.parseData(a);\n            var payload = new common.PayloadStructureType();\n            payload.setStructure(dataflow.getStructure());\n            dm.getHeader().setStructures([payload]);\n            return dm;\n        });\n    }\n    public retrieve2(urlString: string, vals: any): Promise<any> {\n        console.log(\"nomis retrieve:\" + urlString);\n        var s: string = this.options;\n        if (urlString.indexOf(\"?\") == -1) {\n            s = \"?\" + s + \"&random=\" + new Date().getTime();\n        } else {\n            s = \"&\" + s + \"&random=\" + new Date().getTime();\n        }\n        var opts: any = {};\n        opts.url = urlString;\n        opts.method = \"GET\";\n        opts.headers = { \"Connection\": \"close\" };\n        return this.makeRequest2(opts).then(function(a) {\n            var pack = { string: a };\n            for (var i: number = 0; i < Object.keys(vals).length; i++) {\n                var k = Object.keys(vals)[i];\n                pack[k] = vals[k];\n            }\n            return pack;\n        });\n    }\n    /*\n      This function ignores the version argument!!!\n      ILO stat does not use version numbers.. simply take the latest\n     */\n\n    public findDataStructure(ref: commonreferences.Reference): Promise<structure.DataStructure> {\n        var dst: structure.DataStructure = this.local.findDataStructure(ref);\n        if (dst != null) {\n            var promise1 = new Promise<structure.DataStructure>(function(resolve, reject) {\n                resolve(dst);\n            }.bind(this));\n            return promise1;\n        } else {\n            var geogIndex = ref.getMaintainableParentId().toString().lastIndexOf(\"_\");\n            var geog: string = ref.getMaintainableParentId().toString().substring(geogIndex + 1, ref.getMaintainableParentId().toString().length);\n            var geography_string: string = \"geography=\" + geog;\n            if (\"NOGEOG\" == geog) {\n                geography_string = \"\";\n            }\n            var id: string = ref.getMaintainableParentId().toString().substring(0, geogIndex);\n            return <Promise<structure.DataStructure>>this.retrieve(this.getServiceURL() + \"/v01/dataset/\" + id + \".structure.sdmx.xml?\" + geography_string).then(function(a) {\n                a.getStructures().getDataStructures().getDataStructures()[0].setId(ref.getMaintainableParentId());\n                a.getStructures().getDataStructures().getDataStructures()[0].setVersion(ref.getVersion());\n                this.load(a);\n                return this.local.findDataStructure(ref);\n            }.bind(this));\n        }\n    }\n    public listDataflows(): Promise<Array<structure.Dataflow>> {\n        if (this.dataflowList != null) {\n            var promise1 = new Promise<Array<structure.Dataflow>>(function(resolve, reject) {\n                resolve(this.dataflowList);\n            }.bind(this));\n            return promise1;\n        } else {\n            var dfs: Array<structure.Dataflow> = [];\n            var th = this;\n            var promise2: any = this.retrieve(this.serviceURL + \"/v01/dataset/def.sdmx.xml\").then(function(st: message.StructureType) {\n                var packArray = [];\n                var list: Array<structure.DataStructure> = st.getStructures().getDataStructures().getDataStructures();\n                for (var i: number = 0; i < list.length; i++) {\n                    var dst: structure.DataStructure = list[i];\n                    var cubeId: string = structure.NameableType.toIDString(dst);\n                    var cubeName: string = dst.findName(\"en\").getText();\n                    var url: string = th.serviceURL + \"/v01/dataset/\" + cubeId + \".overview.xml\";\n                    var pack = { cubeId: cubeId, cubeName: cubeName, url: url };\n                    packArray.push(pack);\n                }\n                return packArray;\n            });\n            return promise2.map(function(item, index, length) {\n                var pack = item;\n                return th.retrieve2(pack.url, pack).then(function(pack) {\n                    var cubeId2: string = pack.cubeId;\n                    var cubeName2: string = pack.cubeName;\n                    var url2: string = pack.url;\n                    var doc: string = pack.string;\n                    var parsedDataflows = [];\n                    try {\n                        var geogList: Array<NOMISGeography> = th.parseGeography(doc, cubeId2, cubeName2);\n                        for (var j = 0; j < geogList.length; j++) {\n                            var dataFlow: structure.Dataflow = new structure.Dataflow();\n                            dataFlow.setAgencyId(new commonreferences.NestedNCNameID((th.agency)));\n                            dataFlow.setId(new commonreferences.ID(cubeId2 + \"_\" + geogList[j].getGeography()));\n                            var name: common.Name = new common.Name(\"en\", cubeName2 + \" \" + geogList[j].getGeographyName());\n                            var names: Array<common.Name> = [];\n                            names.push(name);\n                            dataFlow.setNames(names);\n                            var ref: commonreferences.Ref = new commonreferences.Ref();\n                            ref.setAgencyId(new commonreferences.NestedNCNameID(th.agency));\n                            ref.setMaintainableParentId(dataFlow.getId());\n                            ref.setVersion(commonreferences.Version.ONE);\n                            var reference = new commonreferences.Reference(ref, null);\n                            dataFlow.setStructure(reference);\n                            parsedDataflows.push(dataFlow);\n                        }\n                        if (geogList.length == 0) {\n                            var dataFlow: structure.Dataflow = new structure.Dataflow();\n                            dataFlow.setAgencyId(new commonreferences.NestedNCNameID((th.agency)));\n                            dataFlow.setId(new commonreferences.ID(cubeId2 + \"_NOGEOG\"));\n                            var name: common.Name = new common.Name(\"en\", cubeName2);\n                            var names: Array<common.Name> = [];\n                            names.push(name);\n                            dataFlow.setNames(names);\n                            var ref: commonreferences.Ref = new commonreferences.Ref();\n                            ref.setAgencyId(new commonreferences.NestedNCNameID(th.agency));\n                            ref.setMaintainableParentId(dataFlow.getId());\n                            ref.setVersion(commonreferences.Version.ONE);\n                            var reference = new commonreferences.Reference(ref, null);\n                            dataFlow.setStructure(reference);\n                            parsedDataflows.push(dataFlow);\n                        }\n                    } catch (error) {\n                        console.log(\"error!:\" + error);\n                    }\n                    return parsedDataflows;\n                });\n            }, { concurrency: 5 }).delay(1300).then(function(stuff) {\n                // works with delay of 1000, put 1300 to be safe =D\n                var dfs = [];\n                for (var i: number = 0; i < stuff.length; i++) {\n                    for (var j: number = 0; j < stuff[i].length; j++) {\n                        dfs.push(stuff[i][j]);\n                    }\n                }\n                this.dataflowList = dfs;\n                return dfs;\n            }.bind(this));\n        }\n    }\n\n    public getServiceURL(): string {\n        return this.serviceURL;\n    }\n    public parseGeography(doc: string, cubeId: string, cubeName: string): Array<NOMISGeography> {\n        var geogList: Array<NOMISGeography> = [];\n        var tagContent: string = null;\n        var lastLang: string = null;\n        var xmlDoc = parseXml(doc);\n        var dimNode = this.findNodeName(\"Dimensions\", xmlDoc.documentElement.childNodes);\n        if (dimNode == null) {\n            return geogList;\n        }\n        var dimsNode = this.searchNodeName(\"Dimension\", dimNode.childNodes);\n        if (dimsNode == null || dimsNode.length == 0) {\n            return geogList;\n        }\n        var geogNode = null;\n        for (var i = 0; i < dimsNode.length; i++) {\n            if (dimsNode[i].getAttribute(\"concept\") == \"geography\") {\n                geogNode = dimsNode[i];\n            }\n        }\n        if (geogNode == null) return geogList;\n        var typesNode = this.findNodeName(\"Types\", geogNode.childNodes);\n        if (typesNode == null) return geogList;\n        var typeArray = this.searchNodeName(\"Type\", typesNode.childNodes);\n        if (typeArray.length == 0) {\n            return geogList;\n        }\n        for (var i: number = 0; i < typeArray.length; i++) {\n            var ng: NOMISGeography = new NOMISGeography(typeArray[i].getAttribute(\"value\"), typeArray[i].getAttribute(\"name\"), cubeName, cubeId);\n            geogList.push(ng);\n        }\n        return geogList;\n    }\n    recurseDomChildren(start: any, output: any) {\n        var nodes;\n        if (start.childNodes) {\n            nodes = start.childNodes;\n            this.loopNodeChildren(nodes, output);\n        }\n    }\n\n    loopNodeChildren(nodes: Array<any>, output: any) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (output) {\n                this.outputNode(node);\n            }\n            if (node.childNodes) {\n                this.recurseDomChildren(node, output);\n            }\n        }\n    }\n    outputNode(node: any) {\n        var whitespace = /^\\s+$/g;\n        if (node.nodeType === 1) {\n            console.log(\"element: \" + node.tagName);\n        } else if (node.nodeType === 3) {\n            //clear whitespace text nodes\n            node.data = node.data.replace(whitespace, \"\");\n            if (node.data) {\n                console.log(\"text: \" + node.data);\n            }\n        }\n    }\n    findNodeName(s: string, childNodes: any) {\n        for (var i: number = 0; i < childNodes.length; i++) {\n            var nn: string = childNodes[i].nodeName;\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\n            if (nn.indexOf(s) == 0) {\n                //alert(\"found node:\"+s);\n                return childNodes[i];\n            }\n        }\n        return null;\n    }\n    searchNodeName(s: string, childNodes: any): Array<any> {\n        var result: Array<any> = [];\n        for (var i: number = 0; i < childNodes.length; i++) {\n            var nn: string = childNodes[i].nodeName;\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\n            if (nn.indexOf(s) == 0) {\n                //alert(\"found node:\"+s);\n                result.push(childNodes[i]);\n            }\n        }\n        if (result.length == 0) {\n            //alert(\"cannot find any \" + s + \" in node\");\n        }\n        return result;\n    }\n    findDataflow(ref: commonreferences.Reference): Promise<structure.Dataflow> {\n        return null;\n    }\n    findCode(ref: commonreferences.Reference): Promise<structure.CodeType> { return null; }\n    findCodelist(ref: commonreferences.Reference): Promise<structure.Codelist> { return null; }\n    findItemType(item: commonreferences.Reference): Promise<structure.ItemType> { return null; }\n    findConcept(ref: commonreferences.Reference): Promise<structure.ConceptType> { return null; }\n    findConceptScheme(ref: commonreferences.Reference): Promise<structure.ConceptSchemeType> { return null; }\n    searchDataStructure(ref: commonreferences.Reference): Promise<Array<structure.DataStructure>> { return null; }\n    searchDataflow(ref: commonreferences.Reference): Promise<Array<structure.Dataflow>> { return null; }\n    searchCodelist(ref: commonreferences.Reference): Promise<Array<structure.Codelist>> { return null; }\n    searchItemType(item: commonreferences.Reference): Promise<Array<structure.ItemType>> { return null; }\n    searchConcept(ref: commonreferences.Reference): Promise<Array<structure.ConceptType>> { return null; }\n    searchConceptScheme(ref: commonreferences.Reference): Promise<Array<structure.ConceptSchemeType>> { return null; }\n    getLocalRegistry(): interfaces.LocalRegistry {\n        return this.local;\n    }\n    save(): any { }\n}\nexport class NOMISGeography {\n    private geography: string = \"\";\n    private geographyName: string = \"\";\n    private cubeName: string = \"\";\n    private cubeId: string = \"\";\n    constructor(geography: string, geographyName: string, cubeName: string, cubeId: string) {\n        this.geography = geography;\n        this.geographyName = geographyName;\n        this.cubeName = cubeName;\n        this.cubeId = cubeId;\n\n    }\n    getGeography() {\n        return this.geography;\n    }\n    getCubeName() { return this.cubeName; }\n    getCubeId() {\n        return this.cubeId;\n    }\n    getGeographyName() {\n        return this.geographyName;\n    }\n\n}\n"],"sourceRoot":"/source/"}