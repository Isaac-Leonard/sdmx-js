{"version":3,"sources":["sdmx/sdmx20.ts"],"names":[],"mappings":"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","file":"sdmx20.js","sourcesContent":["/*\r\n    This file is part of sdmx-js.\r\n\r\n    sdmx-js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    sdmx-js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\r\n    Copyright (C) 2016 James Gardner\r\n*/\r\n/// <amd-module name='sdmx/sdmx20'/>\r\n///<reference path=\"../collections.ts\"/>\r\nimport commonreferences = require(\"sdmx/commonreferences\");\r\nimport structure = require(\"sdmx/structure\");\r\nimport message = require(\"sdmx/message\");\r\nimport interfaces = require(\"sdmx/interfaces\");\r\nimport registry = require(\"sdmx/registry\");\r\nimport xml = require(\"sdmx/xml\");\r\nimport common = require(\"sdmx/common\");\r\nimport data = require(\"sdmx/data\");\r\nimport sdmx = require(\"sdmx\");\r\nexport function parseXml(s: string): any {\r\n    var parseXml: DOMParser;\r\n    parseXml = new DOMParser();\r\n    var xmlDoc = parseXml.parseFromString(s, \"text/xml\");\r\n    return xmlDoc;\r\n}\r\n\r\nexport class Sdmx20StructureParser implements interfaces.SdmxParserProvider {\r\n    constructor() {\r\n\r\n    }\r\n    getVersionIdentifier(): number {\r\n        return 2.0;\r\n    }\r\n    canParse(input: string): boolean {\r\n        if (input == null) return false;\r\n        if (this.isStructure(input)) return true;\r\n        if (this.isData(input)) return true;\r\n    }\r\n    isStructure(input: string): boolean {\r\n        if (input.indexOf(\"Structure\") != -1 && input.indexOf(\"http://www.SDMX.org/resources/SDMXML/schemas/v2_0/message\") != -1) {\r\n            return true;\r\n        } else return false;\r\n    }\r\n    isData(input: string): boolean {\r\n        if (input.indexOf(\"CompactData\") != -1 && input.indexOf(\"http://www.SDMX.org/resources/SDMXML/schemas/v2_0/message\") != -1) {\r\n            return true;\r\n        }\r\n        if (input.indexOf(\"GenericData\") != -1 && input.indexOf(\"http://www.SDMX.org/resources/SDMXML/schemas/v2_0/message\") != -1) {\r\n            return true;\r\n        }\r\n        if (input.indexOf(\"MessageGroup\") != -1 && input.indexOf(\"http://www.SDMX.org/resources/SDMXML/schemas/v2_0/message\") != -1) {\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n    isMetadata(header: string): boolean {\r\n        return false;\r\n    }\r\n    parseStructureWithRegistry(input: string, reg: interfaces.LocalRegistry): message.StructureType {\r\n        var srt: Sdmx20StructureReaderTools = new Sdmx20StructureReaderTools(input, reg);\r\n        return srt.getStructureType();\r\n\r\n    }\r\n    parseStructure(input: string): message.StructureType {\r\n        var srt: Sdmx20StructureReaderTools = new Sdmx20StructureReaderTools(input, null);\r\n        return srt.getStructureType();\r\n\r\n    }\r\n    isCompactData(input: string) {\r\n        if (input.indexOf(\"CompactData\") != -1 && input.indexOf(\"http://www.SDMX.org/resources/SDMXML/schemas/v2_0/message\") != -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    isGenericData(input: string) {\r\n        if (input.indexOf(\"GenericData\") != -1 && input.indexOf(\"http://www.SDMX.org/resources/SDMXML/schemas/v2_0/message\") != -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    parseData(input: string): message.DataMessage {\r\n        if (this.isGenericData(input)) {\r\n            var parser: Sdmx20GenericDataReaderTools = new Sdmx20GenericDataReaderTools(input);\r\n            return parser.getDataMessage();\r\n        } else {\r\n            var parser2: Sdmx20DataReaderTools = new Sdmx20DataReaderTools(input);\r\n            return parser2.getDataMessage();\r\n        }\r\n\r\n    }\r\n}\r\nexport class Sdmx20DataReaderTools {\r\n    private msg: message.DataMessage = null;\r\n    private dw: data.FlatDataSetWriter = new data.FlatDataSetWriter();\r\n\r\n    constructor(s: string) {\r\n        //console.log(\"sdmx20 parsing data\");\r\n        var dom: any = parseXml(s);\r\n        //console.log(\"sdmx20 creating DataMessage\");\r\n        this.msg = this.toDataMessage(dom.documentElement);\r\n    }\r\n\r\n    getDataMessage(): message.DataMessage { return this.msg; }\r\n    toDataMessage(dm: any): message.DataMessage {\r\n        var msg: message.DataMessage = new message.DataMessage();\r\n        var childNodes = dm.childNodes;\r\n        msg.setHeader(this.toHeader(this.findNodeName(\"Header\", childNodes)));\r\n        var dss = this.toDataSets(this.searchNodeName(\"DataSet\", childNodes));\r\n        for (var i: number = 0; i < dss.length; i++) {\r\n            msg.addDataSet(dss[i]);\r\n        }\r\n        return msg;\r\n    }\r\n    toDataSets(dm: Array<any>): Array<data.FlatDataSet> {\r\n        var dss: Array<data.FlatDataSet> = [];\r\n        for (var i: number = 0; i < dm.length; i++) {\r\n            dss.push(this.toDataSet(dm[i].childNodes));\r\n        }\r\n        return dss;\r\n    }\r\n    toDataSet(ds: any): data.FlatDataSet {\r\n        this.dw.newDataSet();\r\n        var series: Array<any> = this.searchNodeName(\"Series\", ds);\r\n        if (series.length == 0) {\r\n            var obsArray: Array<any> = this.searchNodeName(\"Obs\", ds);\r\n            for (var i: number = 0; i < obsArray.length; i++) {\r\n                this.dw.newObservation();\r\n                var atts = obsArray[i].attributes;\r\n                for (var av: number = 0; av < atts.length; av++) {\r\n                    this.dw.writeObservationComponent(atts[av].nodeName, atts[av].value);\r\n                }\r\n                this.dw.finishObservation();\r\n            }\r\n        } else {\r\n            for (var i: number = 0; i < series.length; i++) {\r\n                this.dw.newSeries();\r\n                var satts: Array<any> = series[i].attributes;\r\n                for (var av: number = 0; av < satts.length; av++) {\r\n                    this.dw.writeSeriesComponent(satts[av].nodeName, satts[av].value);\r\n                }\r\n                var obsArray: Array<any> = this.searchNodeName(\"Obs\", series[i].childNodes);\r\n                for (var j: number = 0; j < obsArray.length; j++) {\r\n                    this.dw.newObservation();\r\n                    var atts = obsArray[j].attributes;\r\n                    for (var av: number = 0; av < atts.length; av++) {\r\n                        this.dw.writeObservationComponent(atts[av].nodeName, atts[av].value);\r\n                    }\r\n                    this.dw.finishObservation();\r\n                }\r\n                this.dw.finishSeries();\r\n            }\r\n\r\n        }\r\n        return this.dw.finishDataSet();\r\n    }\r\n\r\n    toHeader(headerNode: any) {\r\n        var header: message.Header = new message.Header();\r\n        header.setId(this.findNodeName(\"ID\", headerNode.childNodes).childNodes[0].nodeValue);\r\n        var test: string = this.findNodeName(\"Test\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        header.setTest(test == \"true\");\r\n        // truncated not in sdmx 2.1\r\n        //var truncated:string= this.findNodeName(\"Truncated\",headerNode.childNodes).childNodes[0].nodeValue;\r\n        //header.setTruncated(truncated==\"true\");\r\n        var prepared: string = this.findNodeName(\"Prepared\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        var prepDate: xml.DateTime = xml.DateTime.fromString(prepared);\r\n        header.setPrepared(new message.HeaderTimeType(prepDate));\r\n        header.setSender(this.toSender(this.findNodeName(\"Sender\", headerNode.childNodes)));\r\n        return header;\r\n    }\r\n    toSender(senderNode: any): message.Sender {\r\n        //var sender: string = senderNode.childNodes[0].nodeValue;\r\n        var senderType: message.Sender = new message.Sender();\r\n        var senderId: string = senderNode.getAttribute(\"id\");\r\n        var senderID: commonreferences.ID = new commonreferences.ID(senderId);\r\n        senderType.setId(senderID);\r\n        return senderType;\r\n    }\r\n    toNames(node: any): Array<common.Name> {\r\n        var names: Array<common.Name> = [];\r\n        var senderNames = this.searchNodeName(\"Name\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toName(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toName(node: any): common.Name {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var name: common.Name = new common.Name(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return name;\r\n    }\r\n    toDescriptions(node: any): Array<common.Description> {\r\n        var names: Array<common.Description> = [];\r\n        var senderNames = this.searchNodeName(\"Description\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toDescription(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toDescription(node: any): common.Description {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var desc: common.Description = new common.Description(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return desc;\r\n    }\r\n    toTextType(node: any): common.TextType {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var textType: common.TextType = new common.TextType(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return textType;\r\n    }\r\n    toPartyType(node: any): message.PartyType {\r\n        var pt = new message.PartyType();\r\n        return pt;\r\n    }\r\n    findNodeName(s: string, childNodes: any) {\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                return childNodes[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    searchNodeName(s: string, childNodes: any): Array<any> {\r\n        var result: Array<any> = [];\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                result.push(childNodes[i]);\r\n            }\r\n        }\r\n        if (result.length == 0) {\r\n            //alert(\"cannot find any \" + s + \" in node\");\r\n        }\r\n        return result;\r\n    }\r\n    findTextNode(node: any): string {\r\n        if (node == null) return \"\";\r\n        var childNodes = node.childNodes;\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nodeType = childNodes[i].nodeType;\r\n            if (nodeType == 3) {\r\n                return childNodes[i].nodeValue;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    recurseDomChildren(start: any, output: any) {\r\n        var nodes;\r\n        if (start.childNodes) {\r\n            nodes = start.childNodes;\r\n            this.loopNodeChildren(nodes, output);\r\n        }\r\n    }\r\n\r\n    loopNodeChildren(nodes: Array<any>, output: any) {\r\n        var node;\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            node = nodes[i];\r\n            if (output) {\r\n                this.outputNode(node);\r\n            }\r\n            if (node.childNodes) {\r\n                this.recurseDomChildren(node, output);\r\n            }\r\n        }\r\n    }\r\n    outputNode(node: any) {\r\n        var whitespace = /^\\s+$/g;\r\n        if (node.nodeType === 1) {\r\n            console.log(\"element: \" + node.tagName);\r\n        } else if (node.nodeType === 3) {\r\n            //clear whitespace text nodes\r\n            node.data = node.data.replace(whitespace, \"\");\r\n            if (node.data) {\r\n                console.log(\"text: \" + node.data);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class Sdmx20GenericDataReaderTools {\r\n    private msg: message.DataMessage = null;\r\n    private dw: data.FlatDataSetWriter = new data.FlatDataSetWriter();\r\n\r\n    constructor(s: string) {\r\n        //console.log(\"sdmx20 parsing data\");\r\n        var dom: any = parseXml(s);\r\n        //console.log(\"sdmx20 creating DataMessage\");\r\n        this.msg = this.toDataMessage(dom.documentElement);\r\n    }\r\n\r\n    getDataMessage(): message.DataMessage { return this.msg; }\r\n    toDataMessage(dm: any): message.DataMessage {\r\n        var msg: message.DataMessage = new message.DataMessage();\r\n        var childNodes = dm.childNodes;\r\n        msg.setHeader(this.toHeader(this.findNodeName(\"Header\", childNodes)));\r\n        var dss = this.toDataSets(this.searchNodeName(\"DataSet\", childNodes));\r\n        for (var i: number = 0; i < dss.length; i++) {\r\n            msg.addDataSet(dss[i]);\r\n        }\r\n        return msg;\r\n    }\r\n    toDataSets(dm: Array<any>): Array<data.FlatDataSet> {\r\n        var dss: Array<data.FlatDataSet> = [];\r\n        for (var i: number = 0; i < dm.length; i++) {\r\n            dss.push(this.toDataSet(dm[i].childNodes));\r\n        }\r\n        return dss;\r\n    }\r\n    toDataSet(ds: any): data.FlatDataSet {\r\n        this.dw.newDataSet();\r\n        var series: Array<any> = this.searchNodeName(\"Series\", ds);\r\n        if (series.length == 0) {\r\n            var obsArray: Array<any> = this.searchNodeName(\"Obs\", ds);\r\n            for (var i: number = 0; i < obsArray.length; i++) {\r\n                this.toObs(obsArray[i], this.dw);\r\n            }\r\n        } else {\r\n            for (var i: number = 0; i < series.length; i++) {\r\n                this.dw.newSeries();\r\n                var seriesKey = this.findNodeName(\"SeriesKey\", series[i].childNodes);\r\n                var satts: Array<any> = this.searchNodeName(\"Value\", seriesKey.childNodes);\r\n                for (var av: number = 0; av < satts.length; av++) {\r\n                    this.dw.writeSeriesComponent(satts[av].getAttribute(\"concept\"), satts[av].getAttribute(\"value\"));\r\n                }\r\n                var obsArray: Array<any> = this.searchNodeName(\"Obs\", series[i].childNodes);\r\n                for (var i: number = 0; i < obsArray.length; i++) {\r\n                    this.toObs(obsArray[i], this.dw);\r\n                }\r\n                this.dw.finishSeries();\r\n            }\r\n\r\n        }\r\n        return this.dw.finishDataSet();\r\n    }\r\n    toObs(obs: any, dw: data.FlatDataSetWriter) {\r\n        dw.newObservation();\r\n        var timeNode = this.findNodeName(\"Time\", obs.childNodes);\r\n        var valueNode = this.findNodeName(\"ObsValue\", obs.childNodes);\r\n        var attributesNode = this.findNodeName(\"Attributes\", obs.childNodes);\r\n        if (timeNode != null) {\r\n            dw.writeObservationComponent(\"TIME_PERIOD\", timeNode.childNodes[0].nodeValue);\r\n        }\r\n        if (valueNode != null) {\r\n            dw.writeObservationComponent(\"OBS_VALUE\", valueNode.getAttribute(\"value\"));\r\n        }\r\n        if (attributesNode != null) {\r\n            var attributesArray = this.searchNodeName(\"Value\", attributesNode.childNodes);\r\n            for (var i: number = 0; i < attributesArray.length; i++) {\r\n                dw.writeObservationComponent(attributesArray[i].getAttribute(\"concept\"), attributesArray[i].getAttribute(\"value\"));\r\n            }\r\n        }\r\n        dw.finishObservation();\r\n    }\r\n\r\n    toHeader(headerNode: any) {\r\n        var header: message.Header = new message.Header();\r\n        header.setId(this.findNodeName(\"ID\", headerNode.childNodes).childNodes[0].nodeValue);\r\n        var test: string = this.findNodeName(\"Test\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        header.setTest(test == \"true\");\r\n        // truncated not in sdmx 2.1\r\n        //var truncated:string= this.findNodeName(\"Truncated\",headerNode.childNodes).childNodes[0].nodeValue;\r\n        //header.setTruncated(truncated==\"true\");\r\n        var prepared: string = this.findNodeName(\"Prepared\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        var prepDate: xml.DateTime = xml.DateTime.fromString(prepared);\r\n        header.setPrepared(new message.HeaderTimeType(prepDate));\r\n        header.setSender(this.toSender(this.findNodeName(\"Sender\", headerNode.childNodes)));\r\n        return header;\r\n    }\r\n    toSender(senderNode: any): message.Sender {\r\n        //var sender: string = senderNode.childNodes[0].nodeValue;\r\n        var senderType: message.Sender = new message.Sender();\r\n        var senderId: string = senderNode.getAttribute(\"id\");\r\n        var senderID: commonreferences.ID = new commonreferences.ID(senderId);\r\n        senderType.setId(senderID);\r\n        return senderType;\r\n    }\r\n    toNames(node: any): Array<common.Name> {\r\n        var names: Array<common.Name> = [];\r\n        var senderNames = this.searchNodeName(\"Name\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toName(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toName(node: any): common.Name {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var name: common.Name = new common.Name(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return name;\r\n    }\r\n    toDescriptions(node: any): Array<common.Description> {\r\n        var names: Array<common.Description> = [];\r\n        var senderNames = this.searchNodeName(\"Description\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toDescription(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toDescription(node: any): common.Description {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var desc: common.Description = new common.Description(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return desc;\r\n    }\r\n    toTextType(node: any): common.TextType {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var textType: common.TextType = new common.TextType(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return textType;\r\n    }\r\n    toPartyType(node: any): message.PartyType {\r\n        var pt = new message.PartyType();\r\n        return pt;\r\n    }\r\n    findNodeName(s: string, childNodes: any) {\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                return childNodes[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    searchNodeName(s: string, childNodes: any): Array<any> {\r\n        var result: Array<any> = [];\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                result.push(childNodes[i]);\r\n            }\r\n        }\r\n        if (result.length == 0) {\r\n            //alert(\"cannot find any \" + s + \" in node\");\r\n        }\r\n        return result;\r\n    }\r\n    findTextNode(node: any): string {\r\n        if (node == null) return \"\";\r\n        var childNodes = node.childNodes;\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nodeType = childNodes[i].nodeType;\r\n            if (nodeType == 3) {\r\n                return childNodes[i].nodeValue;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    recurseDomChildren(start: any, output: any) {\r\n        var nodes;\r\n        if (start.childNodes) {\r\n            nodes = start.childNodes;\r\n            this.loopNodeChildren(nodes, output);\r\n        }\r\n    }\r\n\r\n    loopNodeChildren(nodes: Array<any>, output: any) {\r\n        var node;\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            node = nodes[i];\r\n            if (output) {\r\n                this.outputNode(node);\r\n            }\r\n            if (node.childNodes) {\r\n                this.recurseDomChildren(node, output);\r\n            }\r\n        }\r\n    }\r\n    outputNode(node: any) {\r\n        var whitespace = /^\\s+$/g;\r\n        if (node.nodeType === 1) {\r\n            console.log(\"element: \" + node.tagName);\r\n        } else if (node.nodeType === 3) {\r\n            //clear whitespace text nodes\r\n            node.data = node.data.replace(whitespace, \"\");\r\n            if (node.data) {\r\n                console.log(\"text: \" + node.data);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class Sdmx20StructureReaderTools {\r\n    private registry: interfaces.LocalRegistry = null;\r\n    private struct: message.StructureType = null;\r\n    private currentKeyFamilyAgency: string = null;\r\n\r\n    constructor(s: string, reg: interfaces.LocalRegistry) {\r\n        this.registry = reg;\r\n        var dom: any = parseXml(s);\r\n        this.struct = this.toStructureType(dom.documentElement);\r\n    }\r\n    toStructureType(structureNode: any): message.StructureType {\r\n        this.struct = new message.StructureType();\r\n        var structures = new structure.Structures();\r\n        this.struct.setStructures(structures);\r\n        if (this.registry == null) {\r\n            this.registry = this.struct;\r\n        } else {\r\n            this.registry = new registry.DoubleRegistry(this.registry, this.struct);\r\n        }\r\n        var childNodes = structureNode.childNodes;\r\n        this.struct.setHeader(this.toHeader(this.findNodeName(\"Header\", childNodes)));\r\n        structures.setCodeLists(this.toCodelists(this.findNodeName(\"CodeLists\", childNodes)));\r\n        structures.setConcepts(this.toConcepts(this.findNodeName(\"Concepts\", childNodes)));\r\n        structures.setDataStructures(this.toKeyFamilies(this.findNodeName(\"KeyFamilies\", childNodes)));\r\n        structures.setDataflows(this.toDataflows(null));\r\n        return this.struct;\r\n    }\r\n    toHeader(headerNode: any) {\r\n        var header: message.Header = new message.Header();\r\n        header.setId(this.findNodeName(\"ID\", headerNode.childNodes).childNodes[0].nodeValue);\r\n        var test: string = this.findNodeName(\"Test\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        header.setTest(test == \"true\");\r\n        // truncated not in sdmx 2.1\r\n        //var truncated:string= this.findNodeName(\"Truncated\",headerNode.childNodes).childNodes[0].nodeValue;\r\n        //header.setTruncated(truncated==\"true\");\r\n        var prepared: string = this.findNodeName(\"Prepared\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        var prepDate: xml.DateTime = xml.DateTime.fromString(prepared);\r\n        header.setPrepared(new message.HeaderTimeType(prepDate));\r\n        header.setSender(this.toSender(this.findNodeName(\"Sender\", headerNode.childNodes)));\r\n        return header;\r\n    }\r\n    toSender(senderNode: any): message.Sender {\r\n        if (senderNode == null || senderNode.childNodes == null) return null;\r\n        //var sender: string = senderNode.childNodes[0].nodeValue;\r\n        var senderType: message.Sender = new message.Sender();\r\n        var senderId: string = senderNode.getAttribute(\"id\");\r\n        var senderID: commonreferences.ID = new commonreferences.ID(senderId);\r\n        senderType.setId(senderID);\r\n        return senderType;\r\n    }\r\n    toNames(node: any): Array<common.Name> {\r\n        var names: Array<common.Name> = [];\r\n        var senderNames = this.searchNodeName(\"Name\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toName(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toName(node: any): common.Name {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var name: common.Name = new common.Name(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return name;\r\n    }\r\n    toDescriptions(node: any): Array<common.Description> {\r\n        var names: Array<common.Description> = [];\r\n        var senderNames = this.searchNodeName(\"Description\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toDescription(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toDescription(node: any): common.Description {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        if (node.childNodes.length == 0) {\r\n            // <structure:Description xml:lang=\"en\" />\r\n            return new common.Description(lang, \"\");\r\n        }\r\n        var text = node.childNodes[0].nodeValue;\r\n        var desc: common.Description = new common.Description(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return desc;\r\n    }\r\n    toCodeNames(node: any): Array<common.Name> {\r\n        var names: Array<common.Name> = [];\r\n        var senderNames = this.searchNodeName(\"Description\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toCodeName(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toCodeName(node: any): common.Description {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        if (node.childNodes.length == 0) {\r\n            // <structure:Description xml:lang=\"en\" />\r\n            return new common.Name(lang, \"\");\r\n        }\r\n        var text = node.childNodes[0].nodeValue;\r\n        var name: common.Name = new common.Name(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return name;\r\n    }\r\n    toTextType(node: any): common.TextType {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var textType: common.TextType = new common.TextType(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return textType;\r\n    }\r\n    toPartyType(node: any): message.PartyType {\r\n        var pt = new message.PartyType();\r\n        return pt;\r\n    }\r\n    toDataflows(dataflowsNode: any): structure.DataflowList {\r\n        var dl: structure.DataflowList = new structure.DataflowList();\r\n\r\n        return dl;\r\n    }\r\n    toDataflow(dataflowNode: any): structure.Dataflow {\r\n        var df: structure.Dataflow = new structure.Dataflow();\r\n        df.setNames(this.toNames(dataflowNode));\r\n        df.setId(this.toID(dataflowNode));\r\n        df.setAgencyId(this.toNestedNCNameID(dataflowNode));\r\n        df.setVersion(this.toVersion(dataflowNode));\r\n        return df;\r\n    }\r\n    toCodelists(codelistsNode: any) {\r\n        if (codelistsNode == null) return null;\r\n        var codelists: structure.CodeLists = new structure.CodeLists();\r\n        var codes = this.searchNodeName(\"CodeList\", codelistsNode.childNodes);\r\n        for (var i: number = 0; i < codes.length; i++) {\r\n            codelists.getCodelists().push(this.toCodelist(codes[i]));\r\n        }\r\n        return codelists;\r\n    }\r\n    toID(node: any): commonreferences.ID {\r\n        if (node == null) return null;\r\n        return new commonreferences.ID(node.getAttribute(\"id\"));\r\n    }\r\n    toNestedNCNameID(node: any): commonreferences.NestedNCNameID {\r\n        if (node == null) return null;\r\n        return new commonreferences.NestedNCNameID(node.getAttribute(\"agencyID\"));\r\n    }\r\n    toVersion(node: any): commonreferences.Version {\r\n        if (node == null) return null;\r\n        if (node.getAttribute(\"version\") == \"\" || node.getAttribute(\"version\") == null) {\r\n            return commonreferences.Version.ONE;\r\n        }\r\n        return new commonreferences.Version(node.getAttribute(\"version\"));\r\n    }\r\n    toCodelist(codelistNode: any) {\r\n        var cl: structure.Codelist = new structure.Codelist();\r\n        cl.setNames(this.toNames(codelistNode));\r\n        cl.setId(this.toID(codelistNode));\r\n        cl.setAgencyId(this.toNestedNCNameID(codelistNode));\r\n        cl.setVersion(this.toVersion(codelistNode));\r\n        var codeNodes = this.searchNodeName(\"Code\", codelistNode.childNodes);\r\n        for (var i: number = 0; i < codeNodes.length; i++) {\r\n            cl.getItems().push(this.toCode(codeNodes[i]));\r\n        }\r\n        return cl;\r\n    }\r\n    toCode(codeNode: any): structure.CodeType {\r\n        var c: structure.CodeType = new structure.CodeType();\r\n        // Codes in SDMX 2.1 have Names, not Descriptions.. here we change the\r\n        // description to a name instead.\r\n        //c.setDescriptions(this.toDescriptions(codeNode));\r\n        c.setNames(this.toCodeNames(codeNode));\r\n        c.setId(this.toValue(codeNode));\r\n        if (codeNode.getAttribute(\"parentCode\") != null) {\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setMaintainableParentId(new commonreferences.ID(codeNode.getAttribute(\"parentCode\")));\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            c.setParent(reference);\r\n        }\r\n        return c;\r\n    }\r\n    getParentCode(codeNode: any): commonreferences.ID {\r\n        var id = codeNode.getAttribute(\"parentCode\");\r\n        if (id == null) { return null; }\r\n        else {\r\n            return new commonreferences.ID(id);\r\n        }\r\n    }\r\n    toValue(codeNode: any): commonreferences.ID {\r\n        if (codeNode == null) return null;\r\n        var id = codeNode.getAttribute(\"value\");\r\n        return new commonreferences.ID(id);\r\n    }\r\n    toConcepts(conceptsNode: any) {\r\n        if (conceptsNode == null) return null;\r\n        var concepts: structure.Concepts = new structure.Concepts();\r\n        this.struct.getStructures().setConcepts(concepts);\r\n        var csNodes = this.searchNodeName(\"ConceptScheme\", conceptsNode.childNodes);\r\n        for (var i: number = 0; i < csNodes.length; i++) {\r\n            concepts.getConceptSchemes().push(this.toConceptScheme(csNodes[i]));\r\n        }\r\n        if (csNodes.length == 0) {\r\n            var conNodes = this.searchNodeName(\"Concept\", conceptsNode.childNodes);\r\n            for (var i: number = 0; i < conNodes.length; i++) {\r\n                var conceptScheme: structure.ConceptSchemeType = this.findStandaloneConceptScheme(this.toNestedNCNameID(conNodes[i]));\r\n                this.toConcept(conceptScheme, conNodes[i]);\r\n            }\r\n        }\r\n        return concepts;\r\n    }\r\n    findStandaloneConceptScheme(ag: commonreferences.NestedNCNameID): structure.ConceptSchemeType {\r\n        var ref: commonreferences.Ref = new commonreferences.Ref();\r\n        ref.setAgencyId(ag);\r\n        ref.setMaintainableParentId(new commonreferences.ID(\"STANDALONE_CONCEPT_SCHEME\"));\r\n        ref.setVersion(null);\r\n        var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n        var cs: structure.ConceptSchemeType = this.struct.findConceptScheme(reference);\r\n        if (cs == null) {\r\n            cs = new structure.ConceptSchemeType();\r\n            cs.setAgencyId(ag);\r\n            cs.setId(new commonreferences.ID(\"STANDALONE_CONCEPT_SCHEME\"));\r\n            cs.setVersion(commonreferences.Version.ONE);\r\n            var name: common.Name = new common.Name(\"en\", \"Standalone Concept Scheme\");\r\n            cs.setNames([name]);\r\n            this.struct.getStructures().getConcepts().getConceptSchemes().push(cs);\r\n        }\r\n        return cs;\r\n    }\r\n    toConceptScheme(conceptSchemeNode: any) {\r\n        if (conceptSchemeNode == null) return null;\r\n        var cs: structure.ConceptSchemeType = new structure.ConceptSchemeType();\r\n        cs.setNames(this.toNames(conceptSchemeNode))\r\n        cs.setAgencyId(this.toNestedNCNameID(conceptSchemeNode));\r\n        cs.setId(this.toID(conceptSchemeNode));\r\n        cs.setVersion(this.toVersion(conceptSchemeNode));\r\n        var conceptNodes = this.searchNodeName(\"Concept\", conceptSchemeNode.childNodes);\r\n        for (var i = 0; i < conceptNodes.length; i++) {\r\n            this.toConcept(cs, conceptNodes[i]);\r\n        }\r\n        return cs;\r\n    }\r\n    toConcept(conceptScheme: structure.ConceptSchemeType, conceptNode: any) {\r\n        if (conceptNode == null) {\r\n            return null;\r\n        }\r\n        var con: structure.ConceptType = new structure.ConceptType();\r\n        con.setNames(this.toNames(conceptNode));\r\n        con.setDescriptions(this.toDescriptions(conceptNode));\r\n        con.setId(this.toID(conceptNode));\r\n        conceptScheme.getItems().push(con);\r\n    }\r\n    toKeyFamilies(keyFamiliesNode: any) {\r\n        if (keyFamiliesNode == null) return null;\r\n        var dst: structure.DataStructures = new structure.DataStructures();\r\n        var kfNodes = this.searchNodeName(\"KeyFamily\", keyFamiliesNode.childNodes);\r\n        for (var i: number = 0; i < kfNodes.length; i++) {\r\n            dst.getDataStructures().push(this.toDataStructure(kfNodes[i]));\r\n        }\r\n        return dst;\r\n    }\r\n    toDataStructure(keyFamilyNode: any): structure.DataStructure {\r\n        var dst: structure.DataStructure = new structure.DataStructure();\r\n        dst.setNames(this.toNames(keyFamilyNode));\r\n        dst.setId(this.toID(keyFamilyNode));\r\n        this.currentKeyFamilyAgency = keyFamilyNode.getAttribute(\"agencyID\");\r\n        dst.setAgencyId(this.toNestedNCNameID(keyFamilyNode));\r\n        dst.setVersion(this.toVersion(keyFamilyNode));\r\n\r\n        dst.setDataStructureComponents(this.toDataStructureComponents(this.findNodeName(\"Components\", keyFamilyNode.childNodes)));\r\n        //this.recurseDomChildren(keyFamilyNode, true);\r\n        return dst;\r\n    }\r\n    toDataStructureComponents(dsc: any): structure.DataStructureComponents {\r\n        if (dsc == null) return null;\r\n        var components: structure.DataStructureComponents = new structure.DataStructureComponents();\r\n        var dimensions = this.searchNodeName(\"Dimension\", dsc.childNodes);\r\n        var timedimension = this.findNodeName(\"TimeDimension\", dsc.childNodes);\r\n        // TimeDimension gets stuck in dimensions sometimes :)\r\n        collections.arrays.remove(dimensions, timedimension);\r\n        var primaryMeasure = this.findNodeName(\"PrimaryMeasure\", dsc.childNodes);\r\n        var attributes = this.searchNodeName(\"Attribute\", dsc.childNodes);\r\n        components.setDimensionList(this.toDimensionList(dimensions));\r\n        if (timedimension != null) {\r\n            this.toTimeDimension(components, timedimension);\r\n        }\r\n        this.toPrimaryMeasure(components, primaryMeasure);\r\n        components.setAttributeList(this.toAttributeList(attributes));\r\n        /*\r\n        for (var i: number = 0; i < dimensions.length; i++) {\r\n            this.recurseDomChildren(dimensions[i].childNodes, true);\r\n        }\r\n        this.recurseDomChildren(timedimension.childNodes, true);\r\n        this.recurseDomChildren(primaryMeasure.childNodes, true);\r\n        for (var i: number = 0; i < attributes.length; i++) {\r\n            this.recurseDomChildren(attributes[i].childNodes, true);\r\n        }\r\n        */\r\n        return components;\r\n    }\r\n    toDimensionList(dims: Array<any>): structure.DimensionList {\r\n        var dimList: structure.DimensionList = new structure.DimensionList();\r\n        var dimArray: Array<structure.Dimension> = [];\r\n        for (var i: number = 0; i < dims.length; i++) {\r\n            if (dims[i].getAttribute(\"isMeasureDimension\") == \"true\") {\r\n                dimList.setMeasureDimension(this.toMeasureDimension(dims[i]));\r\n            } else {\r\n                // Sometimes Time Dimension seems to get mistakenly sucked\r\n                // into this list too :(\r\n                if (dims[i].nodeName.indexOf(\"TimeDimension\") == -1) {\r\n                    dimArray.push(this.toDimension(dims[i]));\r\n                }\r\n            }\r\n        }\r\n        dimList.setDimensions(dimArray);\r\n        return dimList;\r\n    }\r\n    toAttributeList(dims: Array<any>): structure.AttributeList {\r\n        var dimList: structure.AttributeList = new structure.AttributeList();\r\n        var dimArray: Array<structure.Attribute> = [];\r\n        for (var i: number = 0; i < dims.length; i++) {\r\n            dimArray.push(this.toAttribute(dims[i]));\r\n        }\r\n        dimList.setAttributes(dimArray);\r\n        return dimList;\r\n    }\r\n    toTimeDimension(comps: structure.DataStructureComponents, dim: any) {\r\n        var dim2: structure.TimeDimension = new structure.TimeDimension();\r\n        var cs: structure.ConceptSchemeType = this.getConceptScheme(dim);\r\n        var cl: structure.Codelist = this.getCodelist(dim);\r\n        var con: structure.ConceptType = this.getConcept(cs, dim);\r\n        if (dim.getAttribute(\"conceptRef\") != null) {\r\n            dim2.setId(new commonreferences.ID(dim.getAttribute(\"conceptRef\")));\r\n        }\r\n        if (con != null) {\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setAgencyId(cs.getAgencyId());\r\n            ref.setMaintainableParentId(cs.getId());\r\n            ref.setVersion(cs.getVersion());\r\n            ref.setId(con.getId());\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            dim2.setConceptIdentity(reference);\r\n        }\r\n        if (cl != null) {\r\n            var ttf: structure.TextFormatType = this.toTextFormatType(this.findNodeName(\"TextFormat\", dim.childNodes));\r\n            dim2.setLocalRepresentation(this.toLocalRepresentation(cl, ttf));\r\n        } else {\r\n            var ttf: structure.TextFormatType = this.toTextFormatType(this.findNodeName(\"TextFormat\", dim.childNodes));\r\n            dim2.setLocalRepresentation(this.toLocalRepresentation(null, ttf));\r\n        }\r\n        comps.getDimensionList().setTimeDimension(dim2);\r\n    }\r\n    toPrimaryMeasure(comps: structure.DataStructureComponents, dim: any) {\r\n        var dim2: structure.PrimaryMeasure = new structure.PrimaryMeasure();\r\n        var cs: structure.ConceptSchemeType = this.getConceptScheme(dim);\r\n        var cl: structure.Codelist = this.getCodelist(dim);\r\n        var con: structure.ConceptType = this.getConcept(cs, dim);\r\n        if (dim.getAttribute(\"conceptRef\") != null) {\r\n            dim2.setId(new commonreferences.ID(dim.getAttribute(\"conceptRef\")));\r\n        }\r\n        if (con != null) {\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setAgencyId(cs.getAgencyId());\r\n            ref.setMaintainableParentId(cs.getId());\r\n            ref.setVersion(cs.getVersion());\r\n            ref.setId(con.getId());\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            dim2.setConceptIdentity(reference);\r\n        } else {\r\n            alert(\"con is null cs=\" + JSON.stringify(cs) + \"con=\" + JSON.stringify(con));\r\n\r\n        }\r\n        if (cl != null) {\r\n            var ttf: structure.TextFormatType = this.toTextFormatType(this.findNodeName(\"TextFormat\", dim.childNodes));\r\n            dim2.setLocalRepresentation(this.toLocalRepresentation(cl, ttf));\r\n        } else {\r\n            var ttf: structure.TextFormatType = this.toTextFormatType(this.findNodeName(\"TextFormat\", dim.childNodes));\r\n            dim2.setLocalRepresentation(this.toLocalRepresentation(null, ttf));\r\n        }\r\n        comps.getMeasureList().setPrimaryMeasure(dim2);\r\n    }\r\n    toDimension(dim: any): structure.Dimension {\r\n        var dim2: structure.Dimension = new structure.Dimension();\r\n        var cs: structure.ConceptSchemeType = this.getConceptScheme(dim);\r\n        var cl: structure.Codelist = this.getCodelist(dim);\r\n        var con: structure.ConceptType = this.getConcept(cs, dim);\r\n        if (dim.getAttribute(\"conceptRef\") != null) {\r\n            dim2.setId(new commonreferences.ID(dim.getAttribute(\"conceptRef\")));\r\n        }\r\n        if (con != null) {\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setAgencyId(cs.getAgencyId());\r\n            ref.setMaintainableParentId(cs.getId());\r\n            ref.setVersion(cs.getVersion());\r\n            ref.setId(con.getId());\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            dim2.setConceptIdentity(reference);\r\n        }\r\n        if (cl != null) {\r\n            var ttf: structure.TextFormatType = this.toTextFormatType(this.findNodeName(\"TextFormat\", dim.childNodes));\r\n            dim2.setLocalRepresentation(this.toLocalRepresentation(cl, ttf));\r\n        } else {\r\n            var ttf: structure.TextFormatType = this.toTextFormatType(this.findNodeName(\"TextFormat\", dim.childNodes));\r\n            dim2.setLocalRepresentation(this.toLocalRepresentation(null, ttf));\r\n        }\r\n        return dim2;\r\n    }\r\n    toAttribute(dim: any): structure.Attribute {\r\n        var dim2: structure.Attribute = new structure.Attribute();\r\n        var cs: structure.ConceptSchemeType = this.getConceptScheme(dim);\r\n        var cl: structure.Codelist = this.getCodelist(dim);\r\n        var con: structure.ConceptType = this.getConcept(cs, dim);\r\n        if (dim.getAttribute(\"conceptRef\") != null) {\r\n            dim2.setId(new commonreferences.ID(dim.getAttribute(\"conceptRef\")));\r\n        }\r\n        if (con != null) {\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setAgencyId(cs.getAgencyId());\r\n            ref.setMaintainableParentId(cs.getId());\r\n            ref.setVersion(cs.getVersion());\r\n            ref.setId(con.getId());\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            dim2.setConceptIdentity(reference);\r\n        }\r\n        if (cl != null) {\r\n            var ttf: structure.TextFormatType = this.toTextFormatType(this.findNodeName(\"TextFormat\", dim.childNodes));\r\n            dim2.setLocalRepresentation(this.toLocalRepresentation(cl, ttf));\r\n        } else {\r\n            var ttf: structure.TextFormatType = this.toTextFormatType(this.findNodeName(\"TextFormat\", dim.childNodes));\r\n            dim2.setLocalRepresentation(this.toLocalRepresentation(null, ttf));\r\n        }\r\n        return dim2;\r\n    }\r\n    public toTextFormatType(tft: any): structure.TextFormatType {\r\n        if (tft == null) {\r\n            return null;\r\n        }\r\n        var tft2: structure.TextFormatType = new structure.TextFormatType();\r\n        if (tft.getAttribute(\"decimals\") != null) {\r\n            tft2.setDecimals(parseInt(tft.getAttribute(\"decimals\")));\r\n        }\r\n        if (tft.getAttribute(\"endValue\") != null) { tft2.setEndValue(parseInt(tft.getAttribute(\"endValue\"))); }\r\n        if (tft.getAttribute(\"isSequence\") != null) {\r\n            tft2.setIsSequence(tft.getAttribute(\"isSequence\") == \"true\");\r\n            if (tft.getAttribute(\"interval\") != null) { tft2.setInterval(parseInt(tft.getAttribute(\"interval\"))); }\r\n        }\r\n        if (tft.getAttribute(\"maxLength\") != null) {\r\n            tft2.setMaxLength(parseInt(tft.getAttribute(\"maxLength\")));\r\n        }\r\n        if (tft.getAttribute(\"pattern\") != null) {\r\n            tft2.setPattern(tft.getAttribute(\"pattern\"));\r\n        }\r\n        if (tft.getAttribute(\"startValue\")) { tft2.setStartValue(parseInt(tft.getAttribute(\"startValue\"))); }\r\n        if (tft.getAttribute(\"textType\") != null) {\r\n            tft2.setTextType(common.DataType.fromStringWithException(tft.getAttribute(\"textType\")));\r\n        }\r\n        if (tft.getAttribute(\"timeInterval\") != null) {\r\n            // DO ME!!!!\r\n            tft2.setTimeInterval(null);\r\n        }\r\n        return tft2;\r\n    }\r\n    toLocalRepresentation(codelist: structure.Codelist, ttf: structure.TextFormatType): structure.RepresentationType {\r\n        var lr2: structure.RepresentationType = new structure.RepresentationType();\r\n        lr2.setTextFormat(ttf);\r\n        if (codelist != null) {\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setAgencyId(codelist.getAgencyId());\r\n            ref.setMaintainableParentId(codelist.getId());\r\n            ref.setVersion(codelist.getVersion());\r\n            var reference = new commonreferences.Reference(ref, null);\r\n            reference.setPack(commonreferences.PackageTypeCodelistType.CODELIST);\r\n            reference.setRefClass(commonreferences.ObjectTypeCodelistType.CODELIST);\r\n            lr2.setEnumeration(reference);\r\n        }\r\n        return lr2;\r\n    }\r\n    toLocalRepresentationConceptScheme(conceptScheme: structure.ConceptSchemeType, ttf: structure.TextFormatType): structure.RepresentationType {\r\n        var lr2: structure.RepresentationType = new structure.RepresentationType();\r\n        lr2.setTextFormat(ttf);\r\n        if (conceptScheme != null) {\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setAgencyId(conceptScheme.getAgencyId());\r\n            ref.setMaintainableParentId(conceptScheme.getId());\r\n            ref.setVersion(conceptScheme.getVersion());\r\n            var reference = new commonreferences.Reference(ref, null);\r\n            reference.setPack(commonreferences.PackageTypeCodelistType.CONCEPTSCHEME);\r\n            reference.setRefClass(commonreferences.ObjectTypeCodelistType.CONCEPTSCHEME)\r\n            lr2.setEnumeration(reference);\r\n        }\r\n        return lr2;\r\n    }\r\n    getCodelist(dim: any): structure.Codelist {\r\n        if (dim.getAttribute(\"codelist\") == null) {\r\n            return null;\r\n        }\r\n        var code: structure.Codelist = null;\r\n        if (dim.getAttribute(\"codelistAgency\") == null && dim.getAttribute(\"codelistVersion\") == null) {\r\n            // All we have is a codelist name\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setAgencyId(new commonreferences.NestedNCNameID(this.currentKeyFamilyAgency));\r\n            ref.setMaintainableParentId(new commonreferences.ID(dim.getAttribute(\"codelist\")));\r\n            ref.setVersion(null);\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            code = this.registry.findCodelist(reference);\r\n        } else if (dim.getAttribute(\"codelistAgency\") != null && dim.getAttribute(\"codelistVersion\") != null) {\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setAgencyId(new commonreferences.NestedNCNameID(dim.getAttribute(\"codelistAgency\")));\r\n            ref.setMaintainableParentId(new commonreferences.ID(dim.getAttribute(\"codelist\")));\r\n            ref.setVersion(new commonreferences.Version(dim.getAttribute(\"codelistVersion\")));\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            code = this.registry.findCodelist(reference);\r\n        } else if (dim.getAttribute(\"codelistAgency\") != null && dim.getAttribute(\"codelistVersion\") == null) {\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setAgencyId(new commonreferences.NestedNCNameID(dim.getAttribute(\"codelistAgency\")));\r\n            ref.setMaintainableParentId(new commonreferences.ID(dim.getAttribute(\"codelist\")));\r\n            ref.setVersion(null);\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            code = this.registry.findCodelist(reference);\r\n        }\r\n        return code;\r\n    }\r\n    getConceptScheme(dim: any): structure.ConceptSchemeType {\r\n        if ((dim.getAttribute(\"conceptSchemeAgency\") != null || dim.getAttribute(\"conceptAgency\") != null) && dim.getAttribute(\"conceptSchemeRef\") != null && dim.getAttribute(\"conceptRef\") != null) {\r\n            var csa: commonreferences.NestedNCNameID = new commonreferences.NestedNCNameID(dim.getAttribute(\"conceptSchemeAgency\") == null ? dim.getAttribute(\"conceptAgency\") : dim.getAttribute(\"conceptSchemeAgency\"));\r\n            var csi: commonreferences.ID = new commonreferences.ID(dim.getAttribute(\"conceptSchemeRef\"));\r\n            var vers: commonreferences.Version = dim.getAttribute(\"conceptVersion\") == null ? null : new commonreferences.Version(dim.getAttribute(\"conceptVersion\"));\r\n            var csref: commonreferences.Ref = new commonreferences.Ref();\r\n            csref.setAgencyId(csa);\r\n            csref.setMaintainableParentId(csi);\r\n            csref.setVersion(vers);\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(csref, null);\r\n            var cst: structure.ConceptSchemeType = null;\r\n            cst = this.struct.findConceptScheme(reference);\r\n            if (cst != null) return cst;\r\n            cst = this.registry.findConceptScheme(reference);\r\n            if (cst != null) return cst;\r\n        } else if (dim.getAttribute(\"conceptSchemeRef\") != null && dim.getAttribute(\"conceptRef\") != null) {\r\n            var csa: commonreferences.NestedNCNameID = new commonreferences.NestedNCNameID(this.currentKeyFamilyAgency);\r\n            var csi: commonreferences.ID = new commonreferences.ID(dim.getAttribute(\"conceptSchemeRef\"));\r\n            var vers: commonreferences.Version = dim.getAttribute(\"conceptVersion\") == null ? null : new commonreferences.Version(dim.getAttribute(\"conceptVersion\"));\r\n            var csref: commonreferences.Ref = new commonreferences.Ref();\r\n            csref.setAgencyId(csa);\r\n            csref.setMaintainableParentId(csi);\r\n            csref.setVersion(vers);\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(csref, null);\r\n            var cst: structure.ConceptSchemeType = null;\r\n            cst = this.struct.findConceptScheme(reference);\r\n            if (cst != null) return cst;\r\n            cst = this.registry.findConceptScheme(reference);\r\n            if (cst != null) return cst;\r\n        } else if (dim.getAttribute(\"conceptRef\") != null && dim.getAttribute(\"conceptAgency\") == null) {\r\n            var csa: commonreferences.NestedNCNameID = new commonreferences.NestedNCNameID(this.currentKeyFamilyAgency);\r\n            var csi: commonreferences.ID = new commonreferences.ID(\"STANDALONE_CONCEPT_SCHEME\");\r\n            var vers: commonreferences.Version = dim.getAttribute(\"conceptVersion\") == null ? null : new commonreferences.Version(dim.getAttribute(\"conceptVersion\"));\r\n            var csref: commonreferences.Ref = new commonreferences.Ref();\r\n            csref.setAgencyId(csa);\r\n            csref.setMaintainableParentId(csi);\r\n            csref.setVersion(vers);\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(csref, null);\r\n            var cst: structure.ConceptSchemeType = null;\r\n            cst = this.struct.findConceptScheme(reference);\r\n            if (cst != null) {\r\n                if (cst.findItemString(dim.getAttribute(\"conceptRef\")) != null) {\r\n                    return cst;\r\n                } else {\r\n                    //alert(\"can't find concpetscheme in currentKeyfamilyAgency:STANDALONE CS\");\r\n                }\r\n            }\r\n            cst = this.registry.findConceptScheme(reference);\r\n            if (cst != null) {\r\n                if (cst.findItemString(dim.getAttribute(\"conceptRef\")) != null) {\r\n                    return cst;\r\n                } else {\r\n                    //alert(\"can't find concpetscheme in registry:STANDALONE CS\");\r\n                }\r\n            }\r\n           \r\n            // \r\n            // This is a trick for ABS SDMX Documents, which have\r\n            // a Primary Measure and all it has is a conceptRef of \"OBS_VALUE\"\r\n            // this points to a Primary Measure Concept that belongs to the OECD Agency :(\r\n            // this code looks through the structure's conceptschemes, and finds a concept\r\n            // in the document that has the same ID as the conceptRef..\r\n            // this is really all i can do with this situation :(\r\n            var css = this.struct.getStructures().getConcepts().getConceptSchemes();\r\n            for (var i: number = 0; i < css.length; i++) {\r\n                for (var j: number = 0; j < css[i].size(); j++) {\r\n                    var concept = css[i].getItem(j);\r\n                    if (concept.getId().equalsString(dim.getAttribute(\"conceptRef\"))) {\r\n                        return css[i];\r\n                    }\r\n                }\r\n            }\r\n            alert(\"Can't find concept scheme for concept: \" + dim.getAttribute(\"conceptRef\"));\r\n            return null;\r\n        } else if (dim.getAttribute(\"conceptRef\")() != null && dim.getAttribute(\"conceptAgency\") != null) {\r\n            var csa: commonreferences.NestedNCNameID = new commonreferences.NestedNCNameID(dim.getAttribute(\"conceptAgency\"));\r\n            var csi: commonreferences.ID = new commonreferences.ID(\"STANDALONE_CONCEPT_SCHEME\");\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setAgencyId(csa);\r\n            ref.setId(csi);\r\n            ref.setVersion(commonreferences.Version.ONE);\r\n            var ref2: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            var cst: structure.ConceptSchemeType = null;\r\n            cst = this.struct.findConceptScheme(ref2);\r\n            if (cst != null) return cst;\r\n            cst = this.registry.findConceptScheme(ref2);\r\n            if (cst != null) return cst;\r\n        }\r\n        if (dim.getAttribute(\"conceptRef\") != null) {\r\n            // \r\n            // This is a trick for ABS SDMX Documents, which have\r\n            // a Primary Measure and all it has is a conceptRef of \"OBS_VALUE\"\r\n            // this points to a Primary Measure Concept that belongs to the OECD Agency :(\r\n            var css = this.struct.getStructures().getConcepts().getConceptSchemes();\r\n            for (var i: number = 0; i < css.length; i++) {\r\n                for (var j: number = 0; j < css[i].size(); j++) {\r\n                    var concept = css[i].getItem(j);\r\n                    if (concept.getId().equalsString(dim.getAttribute(\"conceptRef\"))) {\r\n                        return css[i];\r\n                    }\r\n                }\r\n            }\r\n            alert(\"Can't find concept scheme for concept: \" + dim.getAttribute(\"conceptRef\"));\r\n            return null;\r\n        }\r\n        alert(\"Falling through getConceptScheme\");\r\n        return null;\r\n    }\r\n    getConcept(cs: structure.ConceptSchemeType, dim: any) {\r\n        if (cs != null) {\r\n            var concept: structure.ConceptType = cs.findItemString(dim.getAttribute(\"conceptRef\"));\r\n            return concept;\r\n        } else return null;\r\n    }\r\n    findConcept(conceptRef: string): structure.ConceptType {\r\n        var csa: commonreferences.NestedNCNameID = new commonreferences.NestedNCNameID(this.currentKeyFamilyAgency);\r\n        var csi: commonreferences.ID = new commonreferences.ID(conceptRef);\r\n        var ref: commonreferences.Ref = new commonreferences.Ref();\r\n        ref.setAgencyId(csa);\r\n        ref.setId(csi);\r\n        var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n        var ct: structure.ConceptType = this.registry.findConcept(reference);\r\n        if (ct == null) {\r\n            var ref2: commonreferences.Ref = new commonreferences.Ref();\r\n            ref2.setId(csi);\r\n            var reference2: commonreferences.Reference = new commonreferences.Reference(ref2, null);\r\n            return this.registry.findConcept(reference2);\r\n        }\r\n        return ct;\r\n    }\r\n    toMeasureDimension(dim: any): structure.MeasureDimension {\r\n        var dim2: structure.MeasureDimension = new structure.MeasureDimension();\r\n        var cs: structure.ConceptSchemeType = this.getConceptScheme(dim);\r\n        var cl: structure.ConceptSchemeType = this.getCodelist(dim);\r\n        var con: structure.ConceptType = this.getConcept(cs, dim);\r\n        if (dim.getAttribute(\"conceptRef\") != null) {\r\n            dim2.setId(new commonreferences.ID(dim.getAttribute(\"conceptRef\")));\r\n        }\r\n        if (con != null) {\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setAgencyId(cs.getAgencyId());\r\n            ref.setMaintainableParentId(cs.getId());\r\n            ref.setVersion(cs.getVersion());\r\n            ref.setId(con.getId());\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            dim2.setConceptIdentity(reference);\r\n        }\r\n        // Sdmx 2.1 files have concept schemes\r\n        // for cross sectional measures...\r\n        var createdConceptScheme: structure.ConceptSchemeType = new structure.ConceptSchemeType();\r\n        createdConceptScheme.setAgencyId(cl.getAgencyId());\r\n        createdConceptScheme.setId(cl.getId());\r\n        createdConceptScheme.setVersion(cl.getVersion());\r\n        createdConceptScheme.setNames(cl.getNames());\r\n        createdConceptScheme.setDescriptions(cl.getDescriptions());\r\n        for (var i: number = 0; i < cl.size(); i++) {\r\n            var code: structure.ItemType = cl.getItem(i);\r\n            var concept: structure.ConceptType = new structure.ConceptType();\r\n            concept.setId(code.getId());\r\n            concept.setParent(code.getParent());\r\n            concept.setURN(code.getURN());\r\n            concept.setURI(code.getURI());\r\n            concept.setNames(code.getNames());\r\n            concept.setDescriptions(code.getDescriptions());\r\n            concept.setAnnotations(code.getAnnotations());\r\n            createdConceptScheme.addItem(concept);\r\n        }\r\n        if (this.struct.getStructures().getConcepts() == null) {\r\n            this.struct.getStructures().setConcepts(new structure.Concepts());\r\n        }\r\n        this.struct.getStructures().getConcepts().getConceptSchemes().push(createdConceptScheme);\r\n        if (cl != null) {\r\n            var ttf: structure.TextFormatType = this.toTextFormatType(this.findNodeName(\"TextFormat\", dim.childNodes));\r\n            dim2.setLocalRepresentation(this.toLocalRepresentationConceptScheme(cl, ttf))\r\n        } else {\r\n            var ttf: structure.TextFormatType = this.toTextFormatType(this.findNodeName(\"TextFormat\", dim.childNodes));\r\n            dim2.setLocalRepresentation(this.toLocalRepresentation(null, ttf))\r\n        }\r\n        return dim2;\r\n    }\r\n\r\n    getStructureType(): message.StructureType {\r\n        return this.struct;\r\n    }\r\n    findNodeName(s: string, childNodes: any) {\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                return childNodes[i];\r\n            }\r\n        }\r\n        //console.log(\"can't find node:\"+s);\r\n        return null;\r\n    }\r\n    searchNodeName(s: string, childNodes: any): Array<any> {\r\n        var result: Array<any> = [];\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                result.push(childNodes[i]);\r\n            }\r\n        }\r\n        if (result.length == 0) {\r\n            //alert(\"cannot find any \" + s + \" in node\");\r\n            //console.log(\"can't search node:\"+s);\r\n        }\r\n        return result;\r\n    }\r\n    findTextNode(node: any): string {\r\n        if (node == null) return \"\";\r\n        var childNodes = node.childNodes;\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nodeType = childNodes[i].nodeType;\r\n            if (nodeType == 3) {\r\n                return childNodes[i].nodeValue;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    recurseDomChildren(start: any, output: any) {\r\n        var nodes;\r\n        if (start.childNodes) {\r\n            nodes = start.childNodes;\r\n            this.loopNodeChildren(nodes, output);\r\n        }\r\n    }\r\n\r\n    loopNodeChildren(nodes: Array<any>, output: any) {\r\n        var node;\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            node = nodes[i];\r\n            if (output) {\r\n                this.outputNode(node);\r\n            }\r\n            if (node.childNodes) {\r\n                this.recurseDomChildren(node, output);\r\n            }\r\n        }\r\n    }\r\n    outputNode(node: any) {\r\n        var whitespace = /^\\s+$/g;\r\n        if (node.nodeType === 1) {\r\n            console.log(\"element: \" + node.tagName);\r\n        } else if (node.nodeType === 3) {\r\n            //clear whitespace text nodes\r\n            node.data = node.data.replace(whitespace, \"\");\r\n            if (node.data) {\r\n                console.log(\"text: \" + node.data);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}