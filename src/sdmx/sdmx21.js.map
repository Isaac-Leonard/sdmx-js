{"version":3,"sources":["sdmx/sdmx21.ts"],"names":[],"mappings":"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","file":"sdmx21.js","sourcesContent":["/*\r\n    This file is part of sdmx-js.\r\n\r\n    sdmx-js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    sdmx-js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\r\n    Copyright (C) 2016 James Gardner\r\n*/\r\n/// <amd-module name='sdmx/sdmx21'/>\r\n///<reference path=\"../collections.ts\"/>\r\nimport commonreferences = require(\"sdmx/commonreferences\");\r\nimport structure = require(\"sdmx/structure\");\r\nimport message = require(\"sdmx/message\");\r\nimport interfaces = require(\"sdmx/interfaces\");\r\nimport registry = require(\"sdmx/registry\");\r\nimport xml = require(\"sdmx/xml\");\r\nimport common = require(\"sdmx/common\");\r\nimport data = require(\"sdmx/data\");\r\nimport sdmx = require(\"sdmx\");\r\n\r\nexport function parseXml(s: string): any {\r\n    var parseXml: DOMParser;\r\n    parseXml = new DOMParser();\r\n    var xmlDoc = parseXml.parseFromString(s, \"text/xml\");\r\n    return xmlDoc;\r\n}\r\n\r\nexport class Sdmx21StructureParser implements interfaces.SdmxParserProvider {\r\n    constructor() {\r\n\r\n    }\r\n    getVersionIdentifier(): number {\r\n        return 2.1;\r\n    }\r\n    canParse(input: string): boolean {\r\n        if (input == null) return false;\r\n        if (this.isStructure(input)) return true;\r\n        if (this.isData(input)) return true;\r\n    }\r\n    isStructure(input: string): boolean {\r\n        if (input.indexOf(\"Structure\") != -1 && input.indexOf(\"http://www.sdmx.org/resources/sdmxml/schemas/v2_1/message\") != -1) {\r\n            return true;\r\n        } else return false;\r\n    }\r\n    isData(input: string): boolean {\r\n        if (this.isStructureSpecificData(input)) {\r\n            return true;\r\n        } else if (this.isGenericData(input)) { return true; }\r\n        else return false;\r\n    }\r\n    public isGenericData(input: string) {\r\n        if (input.indexOf(\"GenericData\") != -1 && input.indexOf(\"http://www.sdmx.org/resources/sdmxml/schemas/v2_1/message\") != -1) {\r\n            return true;\r\n        } else return false;\r\n    }\r\n    public isStructureSpecificData(input: string) {\r\n        if (input.indexOf(\"StructureSpecificData\") != -1 && input.indexOf(\"http://www.sdmx.org/resources/sdmxml/schemas/v2_1/message\") != -1) {\r\n            return true;\r\n        } else return false;\r\n    }\r\n    isMetadata(header: string): boolean {\r\n        return false;\r\n    }\r\n    parseStructureWithRegistry(input: string, reg: interfaces.LocalRegistry): message.StructureType {\r\n        var srt: Sdmx21StructureReaderTools = new Sdmx21StructureReaderTools(input, reg);\r\n        return srt.getStructureType();\r\n\r\n    }\r\n    parseStructure(input: string): message.StructureType {\r\n        var srt: Sdmx21StructureReaderTools = new Sdmx21StructureReaderTools(input, null);\r\n        return srt.getStructureType();\r\n\r\n    }\r\n    parseData(input: string): message.DataMessage {\r\n        if (this.isGenericData(input)) {\r\n            var parser: Sdmx21GenericDataReaderTools = new Sdmx21GenericDataReaderTools(input);\r\n            return parser.getDataMessage();\r\n        } else if (this.isStructureSpecificData(input)) {\r\n            var parser2: Sdmx21StructureSpecificDataReaderTools = new Sdmx21StructureSpecificDataReaderTools(input);\r\n            return parser2.getDataMessage();\r\n        }\r\n\r\n    }\r\n}\r\nexport class Sdmx21StructureSpecificDataReaderTools {\r\n    private msg: message.DataMessage = null;\r\n    private dw: data.FlatDataSetWriter = new data.FlatDataSetWriter();\r\n\r\n    constructor(s: string) {\r\n        //console.log(\"sdmx20 parsing data\");\r\n        var dom: any = parseXml(s);\r\n        //console.log(\"sdmx20 creating DataMessage\");\r\n        this.msg = this.toDataMessage(dom.documentElement);\r\n    }\r\n\r\n    getDataMessage(): message.DataMessage { return this.msg; }\r\n    toDataMessage(dm: any): message.DataMessage {\r\n        var msg: message.DataMessage = new message.DataMessage();\r\n        var childNodes = dm.childNodes;\r\n        msg.setHeader(this.toHeader(this.findNodeName(\"Header\", childNodes)));\r\n        var dss = this.toDataSets(this.searchNodeName(\"DataSet\", childNodes));\r\n        for (var i: number = 0; i < dss.length; i++) {\r\n            msg.addDataSet(dss[i]);\r\n        }\r\n        return msg;\r\n    }\r\n    toDataSets(dm: Array<any>): Array<data.FlatDataSet> {\r\n        var dss: Array<data.FlatDataSet> = [];\r\n        for (var i: number = 0; i < dm.length; i++) {\r\n            dss.push(this.toDataSet(dm[i].childNodes));\r\n        }\r\n        return dss;\r\n    }\r\n    toDataSet(ds: any): data.FlatDataSet {\r\n        this.dw.newDataSet();\r\n        var series: Array<any> = this.searchNodeName(\"Series\", ds);\r\n        if (series.length == 0) {\r\n            var obsArray: Array<any> = this.searchNodeName(\"Obs\", ds);\r\n            for (var i: number = 0; i < obsArray.length; i++) {\r\n                this.dw.newObservation();\r\n                var atts = obsArray[i].attributes;\r\n            }\r\n        } else {\r\n            for (var i: number = 0; i < series.length; i++) {\r\n                this.dw.newSeries();\r\n                var satts: Array<any> = series[i].attributes;\r\n                for (var av: number = 0; av < satts.length; av++) {\r\n                    this.dw.writeSeriesComponent(satts[av].nodeName, satts[av].value);\r\n                }\r\n                var obsArray: Array<any> = this.searchNodeName(\"Obs\", series[i].childNodes);\r\n                for (var j: number = 0; j < obsArray.length; j++) {\r\n                    this.dw.newObservation();\r\n                    var atts = obsArray[j].attributes;\r\n                    for (var av: number = 0; av < atts.length; av++) {\r\n                        this.dw.writeObservationComponent(atts[av].nodeName, atts[av].value);\r\n                    }\r\n                    this.dw.finishObservation();\r\n                }\r\n                this.dw.finishSeries();\r\n            }\r\n\r\n        }\r\n        return this.dw.finishDataSet();\r\n    }\r\n\r\n    toHeader(headerNode: any) {\r\n        var header: message.Header = new message.Header();\r\n        header.setId(this.findNodeName(\"ID\", headerNode.childNodes).childNodes[0].nodeValue);\r\n        var test: string = this.findNodeName(\"Test\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        header.setTest(test == \"true\");\r\n        // truncated not in sdmx 2.1\r\n        //var truncated:string= this.findNodeName(\"Truncated\",headerNode.childNodes).childNodes[0].nodeValue;\r\n        //header.setTruncated(truncated==\"true\");\r\n        var prepared: string = this.findNodeName(\"Prepared\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        var prepDate: xml.DateTime = xml.DateTime.fromString(prepared);\r\n        header.setPrepared(new message.HeaderTimeType(prepDate));\r\n        header.setSender(this.toSender(this.findNodeName(\"Sender\", headerNode.childNodes)));\r\n        return header;\r\n    }\r\n    toSender(senderNode: any): message.Sender {\r\n        var sender: string = senderNode.childNodes[0].nodeValue;\r\n\r\n        var senderType: message.Sender = new message.Sender();\r\n        var senderId: string = senderNode.getAttribute(\"id\");\r\n        var senderID: commonreferences.ID = new commonreferences.ID(senderId);\r\n        senderType.setId(senderID);\r\n        return senderType;\r\n    }\r\n    toNames(node: any): Array<common.Name> {\r\n        var names: Array<common.Name> = [];\r\n        var senderNames = this.searchNodeName(\"Name\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toName(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toName(node: any): common.Name {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var name: common.Name = new common.Name(lang, text);\r\n        return name;\r\n    }\r\n    toDescriptions(node: any): Array<common.Description> {\r\n        var names: Array<common.Description> = [];\r\n        var senderNames = this.searchNodeName(\"Description\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toDescription(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toDescription(node: any): common.Description {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var desc: common.Description = new common.Description(lang, text);\r\n        return desc;\r\n    }\r\n    toTextType(node: any): common.TextType {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var textType: common.TextType = new common.TextType(lang, text);\r\n        return textType;\r\n    }\r\n    toPartyType(node: any): message.PartyType {\r\n        var pt = new message.PartyType();\r\n        return pt;\r\n    }\r\n    findNodeName(s: string, childNodes: any) {\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                return childNodes[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    searchNodeName(s: string, childNodes: any): Array<any> {\r\n        var result: Array<any> = [];\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                result.push(childNodes[i]);\r\n            }\r\n        }\r\n        if (result.length == 0) {\r\n            //alert(\"cannot find any \" + s + \" in node\");\r\n        }\r\n        return result;\r\n    }\r\n    findTextNode(node: any): string {\r\n        if (node == null) return \"\";\r\n        var childNodes = node.childNodes;\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nodeType = childNodes[i].nodeType;\r\n            if (nodeType == 3) {\r\n                return childNodes[i].nodeValue;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    recurseDomChildren(start: any, output: any) {\r\n        var nodes;\r\n        if (start.childNodes) {\r\n            nodes = start.childNodes;\r\n            this.loopNodeChildren(nodes, output);\r\n        }\r\n    }\r\n\r\n    loopNodeChildren(nodes: Array<any>, output: any) {\r\n        var node;\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            node = nodes[i];\r\n            if (output) {\r\n                this.outputNode(node);\r\n            }\r\n            if (node.childNodes) {\r\n                this.recurseDomChildren(node, output);\r\n            }\r\n        }\r\n    }\r\n    outputNode(node: any) {\r\n        var whitespace = /^\\s+$/g;\r\n        if (node.nodeType === 1) {\r\n            console.log(\"element: \" + node.tagName);\r\n        } else if (node.nodeType === 3) {\r\n            //clear whitespace text nodes\r\n            node.data = node.data.replace(whitespace, \"\");\r\n            if (node.data) {\r\n                console.log(\"text: \" + node.data);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class Sdmx21GenericDataReaderTools {\r\n    private msg: message.DataMessage = null;\r\n    private dw: data.FlatDataSetWriter = new data.FlatDataSetWriter();\r\n    private dimensionAtObservation = \"TIME_PERIOD\";\r\n\r\n    constructor(s: string) {\r\n        //console.log(\"sdmx20 parsing data\");\r\n        var dom: any = parseXml(s);\r\n        //console.log(\"sdmx20 creating DataMessage\");\r\n        this.msg = this.toDataMessage(dom.documentElement);\r\n    }\r\n\r\n    getDataMessage(): message.DataMessage { return this.msg; }\r\n    toDataMessage(dm: any): message.DataMessage {\r\n        var msg: message.DataMessage = new message.DataMessage();\r\n        var childNodes = dm.childNodes;\r\n        msg.setHeader(this.toHeader(this.findNodeName(\"Header\", childNodes)));\r\n        var dss = this.toDataSets(this.searchNodeName(\"DataSet\", childNodes));\r\n        for (var i: number = 0; i < dss.length; i++) {\r\n            msg.addDataSet(dss[i]);\r\n        }\r\n        return msg;\r\n    }\r\n    toDataSets(dm: Array<any>): Array<data.FlatDataSet> {\r\n        var dss: Array<data.FlatDataSet> = [];\r\n        for (var i: number = 0; i < dm.length; i++) {\r\n            dss.push(this.toDataSet(dm[i].childNodes));\r\n        }\r\n        return dss;\r\n    }\r\n    toDataSet(ds: any): data.FlatDataSet {\r\n        this.dw.newDataSet();\r\n        var series: Array<any> = this.searchNodeName(\"Series\", ds);\r\n        if (series.length == 0) {\r\n            var obsArray: Array<any> = this.searchNodeName(\"Obs\", ds);\r\n            for (var i: number = 0; i < obsArray.length; i++) {\r\n                this.dw.newObservation();\r\n                var atts = obsArray[i].attributes;\r\n            }\r\n        } else {\r\n            for (var i: number = 0; i < series.length; i++) {\r\n                this.dw.newSeries();\r\n                var satts: Array<any> = series[i].attributes;\r\n                var seriesKeysNode = this.findNodeName(\"SeriesKey\", series[i].childNodes);\r\n                var keyNodes = this.searchNodeName(\"Value\", seriesKeysNode.childNodes);\r\n                for (var av: number = 0; av < keyNodes.length; av++) {\r\n                    this.dw.writeSeriesComponent(keyNodes[av].getAttribute(\"id\"), keyNodes[av].getAttribute(\"value\"));\r\n                }\r\n                var obsArray: Array<any> = this.searchNodeName(\"Obs\", series[i].childNodes);\r\n                for (var j: number = 0; j < obsArray.length; j++) {\r\n                    this.dw.newObservation();\r\n                    var obsDimensionNode = this.findNodeName(\"ObsDimension\", obsArray[j].childNodes);\r\n                    this.dw.writeObservationComponent(this.dimensionAtObservation, obsDimensionNode.getAttribute(\"value\"));\r\n                    var obsValueNode = this.findNodeName(\"ObsValue\", obsArray[j].childNodes);\r\n                    // \"OBS_VALUE is hard coded into SDMX 2.1\r\n                    this.dw.writeObservationComponent(\"OBS_VALUE\", obsValueNode.getAttribute(\"value\"));\r\n                    var attNode = this.findNodeName(\"Attributes\", obsArray[j].childNodes);\r\n                    if (attNode != null) {\r\n                        var attNodes = this.searchNodeName(\"Value\", attNode.childNodes);\r\n                        for (var av: number = 0; av < attNodes.length; av++) {\r\n                            this.dw.writeObservationComponent(attNodes[av].getAttribute(\"id\"), attNodes[av].getAttribute(\"value\"));\r\n                        }\r\n                    }\r\n                    this.dw.finishObservation();\r\n                }\r\n                this.dw.finishSeries();\r\n            }\r\n\r\n        }\r\n        return this.dw.finishDataSet();\r\n    }\r\n\r\n    toHeader(headerNode: any) {\r\n        var header: message.Header = new message.Header();\r\n        header.setId(this.findNodeName(\"ID\", headerNode.childNodes).childNodes[0].nodeValue);\r\n        var test: string = this.findNodeName(\"Test\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        header.setTest(test == \"true\");\r\n        // truncated not in sdmx 2.1\r\n        //var truncated:string= this.findNodeName(\"Truncated\",headerNode.childNodes).childNodes[0].nodeValue;\r\n        //header.setTruncated(truncated==\"true\");\r\n        var prepared: string = this.findNodeName(\"Prepared\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        var prepDate: xml.DateTime = xml.DateTime.fromString(prepared);\r\n        header.setPrepared(new message.HeaderTimeType(prepDate));\r\n        header.setSender(this.toSender(this.findNodeName(\"Sender\", headerNode.childNodes)));\r\n        header.setStructures([this.toStructure(this.findNodeName(\"Structure\", headerNode.childNodes))]);\r\n        return header;\r\n    }\r\n    toStructure(structureNode: any): common.PayloadStructureType {\r\n        this.dimensionAtObservation = structureNode.getAttribute(\"dimensionAtObservation\");\r\n        var refNode = this.findNodeName(\"Ref\", structureNode.childNodes);\r\n        var ref: commonreferences.Ref = new commonreferences.Ref();\r\n        ref.setMaintainableParentId(this.toID(refNode));\r\n        ref.setAgencyId(this.toNestedNCNameID(refNode));\r\n        ref.setVersion(this.toVersion(refNode));\r\n        var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n        var payload: common.PayloadStructureType = new common.PayloadStructureType();\r\n        payload.setStructure(reference);\r\n        return payload;\r\n    }\r\n    toSender(senderNode: any): message.Sender {\r\n        var sender: string = senderNode.childNodes[0].nodeValue;\r\n\r\n        var senderType: message.Sender = new message.Sender();\r\n        var senderId: string = senderNode.getAttribute(\"id\");\r\n        var senderID: commonreferences.ID = new commonreferences.ID(senderId);\r\n        senderType.setId(senderID);\r\n        return senderType;\r\n    }\r\n    toNames(node: any): Array<common.Name> {\r\n        var names: Array<common.Name> = [];\r\n        var senderNames = this.searchNodeName(\"Name\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toName(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toName(node: any): common.Name {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var name: common.Name = new common.Name(lang, text);\r\n        return name;\r\n    }\r\n    toDescriptions(node: any): Array<common.Description> {\r\n        var names: Array<common.Description> = [];\r\n        var senderNames = this.searchNodeName(\"Description\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toDescription(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toDescription(node: any): common.Description {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var desc: common.Description = new common.Description(lang, text);\r\n        return desc;\r\n    }\r\n    toTextType(node: any): common.TextType {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var textType: common.TextType = new common.TextType(lang, text);\r\n        return textType;\r\n    }\r\n    toPartyType(node: any): message.PartyType {\r\n        var pt = new message.PartyType();\r\n        return pt;\r\n    }\r\n    findNodeName(s: string, childNodes: any) {\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                return childNodes[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    searchNodeName(s: string, childNodes: any): Array<any> {\r\n        var result: Array<any> = [];\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                result.push(childNodes[i]);\r\n            }\r\n        }\r\n        if (result.length == 0) {\r\n            //alert(\"cannot find any \" + s + \" in node\");\r\n        }\r\n        return result;\r\n    }\r\n    findTextNode(node: any): string {\r\n        if (node == null) return \"\";\r\n        var childNodes = node.childNodes;\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nodeType = childNodes[i].nodeType;\r\n            if (nodeType == 3) {\r\n                return childNodes[i].nodeValue;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    recurseDomChildren(start: any, output: any) {\r\n        var nodes;\r\n        if (start.childNodes) {\r\n            nodes = start.childNodes;\r\n            this.loopNodeChildren(nodes, output);\r\n        }\r\n    }\r\n\r\n    loopNodeChildren(nodes: Array<any>, output: any) {\r\n        var node;\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            node = nodes[i];\r\n            if (output) {\r\n                this.outputNode(node);\r\n            }\r\n            if (node.childNodes) {\r\n                this.recurseDomChildren(node, output);\r\n            }\r\n        }\r\n    }\r\n    outputNode(node: any) {\r\n        var whitespace = /^\\s+$/g;\r\n        if (node.nodeType === 1) {\r\n            console.log(\"element: \" + node.tagName);\r\n        } else if (node.nodeType === 3) {\r\n            //clear whitespace text nodes\r\n            node.data = node.data.replace(whitespace, \"\");\r\n            if (node.data) {\r\n                console.log(\"text: \" + node.data);\r\n            }\r\n        }\r\n    }\r\n    toID(node: any): commonreferences.ID {\r\n        if (node == null) return null;\r\n        return new commonreferences.ID(node.getAttribute(\"id\"));\r\n    }\r\n    toMaintainableParentID(node: any): commonreferences.ID {\r\n        if (node == null) return null;\r\n        return new commonreferences.ID(node.getAttribute(\"maintainableParentID\"));\r\n    }\r\n    toNestedID(node: any): commonreferences.NestedID {\r\n        if (node == null) return null;\r\n        return new commonreferences.NestedID(node.getAttribute(\"id\"));\r\n    }\r\n    toNestedNCNameID(node: any): commonreferences.NestedNCNameID {\r\n        if (node == null) return null;\r\n        return new commonreferences.NestedNCNameID(node.getAttribute(\"agencyID\"));\r\n    }\r\n    toVersion(node: any): commonreferences.Version {\r\n        if (node == null) return null;\r\n        if (node.getAttribute(\"version\") == \"\" || node.getAttribute(\"version\") == null) {\r\n            return commonreferences.Version.ONE;\r\n        }\r\n        return new commonreferences.Version(node.getAttribute(\"version\"));\r\n    }\r\n}\r\nexport class Sdmx21StructureReaderTools {\r\n    private registry: interfaces.LocalRegistry = null;\r\n    private struct: message.StructureType = null;\r\n    private currentKeyFamilyAgency: string = null;\r\n\r\n    constructor(s: string, reg: interfaces.LocalRegistry) {\r\n        this.registry = reg;\r\n        var dom: any = parseXml(s);\r\n        this.struct = this.toStructureType(dom.documentElement);\r\n    }\r\n    toStructureType(structureNode: any): message.StructureType {\r\n        this.struct = new message.StructureType();\r\n        var structures: structure.Structures = new structure.Structures();\r\n        this.struct.setStructures(structures);\r\n        if (this.registry == null) {\r\n            this.registry = this.struct;\r\n        } else {\r\n            this.registry = new registry.DoubleRegistry(this.registry, this.struct);\r\n        }\r\n        var childNodes = structureNode.childNodes;\r\n        this.struct.setHeader(this.toHeader(this.findNodeName(\"Header\", childNodes)));\r\n        var structuresNode: any = this.findNodeName(\"Structures\", childNodes);\r\n        childNodes = structuresNode.childNodes;\r\n        structures.setCodeLists(this.toCodelists(this.findNodeName(\"Codelists\", childNodes)));\r\n        structures.setConcepts(this.toConcepts(this.findNodeName(\"Concepts\", childNodes)));\r\n        structures.setDataStructures(this.toDataStructures(this.findNodeName(\"DataStructures\", childNodes)));\r\n        structures.setDataflows(this.toDataflows(this.findNodeName(\"Dataflows\", childNodes)));\r\n        return this.struct;\r\n    }\r\n    toHeader(headerNode: any) {\r\n        var header: message.Header = new message.Header();\r\n        header.setId(this.findNodeName(\"ID\", headerNode.childNodes).childNodes[0].nodeValue);\r\n        var test: string = this.findNodeName(\"Test\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        header.setTest(test == \"true\");\r\n        // truncated not in sdmx 2.1\r\n        //var truncated:string= this.findNodeName(\"Truncated\",headerNode.childNodes).childNodes[0].nodeValue;\r\n        //header.setTruncated(truncated==\"true\");\r\n        var prepared: string = this.findNodeName(\"Prepared\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        var prepDate: xml.DateTime = xml.DateTime.fromString(prepared);\r\n        header.setPrepared(new message.HeaderTimeType(prepDate));\r\n        header.setSender(this.toSender(this.findNodeName(\"Sender\", headerNode.childNodes)));\r\n        var receivers = [];\r\n        for (var i: number = 0; i < this.searchNodeName(\"Receiver\", headerNode.childNodes).length; i++) {\r\n            receivers.push(this.toReceiver(this.searchNodeName(\"Receiver\", headerNode.childNodes)[i]));\r\n        }\r\n        header.setReceivers(receivers);\r\n        return header;\r\n    }\r\n    toSender(senderNode: any): message.Sender {\r\n        //var sender: string = senderNode.childNodes[0].nodeValue;\r\n        var senderType: message.Sender = new message.Sender();\r\n        var senderId: string = senderNode.getAttribute(\"id\");\r\n        var senderID: commonreferences.ID = new commonreferences.ID(senderId);\r\n        senderType.setId(senderID);\r\n        return senderType;\r\n    }\r\n    toReceiver(receiverNode: any): message.PartyType {\r\n        //var sender: string = receiverNode.childNodes[0].nodeValue;\r\n        var receiverType: message.PartyType = new message.PartyType();\r\n        var senderId: string = receiverNode.getAttribute(\"id\");\r\n        var senderID: commonreferences.ID = new commonreferences.ID(senderId);\r\n        receiverType.setId(senderID);\r\n        return receiverType;\r\n    }\r\n    toNames(node: any): Array<common.Name> {\r\n        var names: Array<common.Name> = [];\r\n        var senderNames = this.searchNodeName(\"Name\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toName(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toName(node: any): common.Name {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var name: common.Name = new common.Name(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return name;\r\n    }\r\n    toDescriptions(node: any): Array<common.Description> {\r\n        var names: Array<common.Description> = [];\r\n        var senderNames = this.searchNodeName(\"Description\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toDescription(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toDescription(node: any): common.Description {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        if (node.childNodes.length == 0) {\r\n            // <structure:Description xml:lang=\"en\" />\r\n            return new common.Description(lang, \"\");\r\n        }\r\n        var text = node.childNodes[0].nodeValue;\r\n        var desc: common.Description = new common.Description(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return desc;\r\n    }\r\n    toTextType(node: any): common.TextType {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var textType: common.TextType = new common.TextType(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return textType;\r\n    }\r\n    toPartyType(node: any): message.PartyType {\r\n        var pt = new message.PartyType();\r\n        return pt;\r\n    }\r\n    toDataflows(dataflowsNode: any): structure.DataflowList {\r\n        if (dataflowsNode == null) return null;\r\n        var dl: structure.DataflowList = new structure.DataflowList();\r\n        var dfs = this.searchNodeName(\"Dataflow\", dataflowsNode.childNodes);\r\n        var dataflows = [];\r\n        for (var i: number = 0; i < dfs.length; i++) {\r\n            dataflows.push(this.toDataflow(dfs[i]));\r\n        }\r\n        dl.setDataflowList(dataflows);\r\n        return dl;\r\n    }\r\n    toDataflow(dataflowNode: any): structure.Dataflow {\r\n        var df: structure.Dataflow = new structure.Dataflow();\r\n        df.setNames(this.toNames(dataflowNode));\r\n        df.setId(this.toID(dataflowNode));\r\n        df.setAgencyId(this.toNestedNCNameID(dataflowNode));\r\n        df.setVersion(this.toVersion(dataflowNode));\r\n        var struct = this.findNodeName(\"Structure\", dataflowNode.childNodes);\r\n        var refNode = this.findNodeName(\"Ref\", struct.childNodes);\r\n        var ref: commonreferences.Ref = new commonreferences.Ref();\r\n        ref.setAgencyId(this.toNestedNCNameID(refNode));\r\n        ref.setMaintainableParentId(this.toID(refNode));\r\n        ref.setVersion(this.toVersion(refNode));\r\n        var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n        df.setStructure(reference);\r\n        return df;\r\n    }\r\n    toCodelists(codelistsNode: any) {\r\n        if (codelistsNode == null) return null;\r\n        var codelists: structure.CodeLists = new structure.CodeLists();\r\n        var codes = this.searchNodeName(\"Codelist\", codelistsNode.childNodes);\r\n        for (var i: number = 0; i < codes.length; i++) {\r\n            codelists.getCodelists().push(this.toCodelist(codes[i]));\r\n        }\r\n        return codelists;\r\n    }\r\n    toID(node: any): commonreferences.ID {\r\n        if (node == null) return null;\r\n        return new commonreferences.ID(node.getAttribute(\"id\"));\r\n    }\r\n    toMaintainableParentID(node: any): commonreferences.ID {\r\n        if (node == null) return null;\r\n        return new commonreferences.ID(node.getAttribute(\"maintainableParentID\"));\r\n    }\r\n    toNestedID(node: any): commonreferences.NestedID {\r\n        if (node == null) return null;\r\n        return new commonreferences.NestedID(node.getAttribute(\"id\"));\r\n    }\r\n    toNestedNCNameID(node: any): commonreferences.NestedNCNameID {\r\n        if (node == null) return null;\r\n        return new commonreferences.NestedNCNameID(node.getAttribute(\"agencyID\"));\r\n    }\r\n    toVersion(node: any): commonreferences.Version {\r\n        if (node == null) return null;\r\n        if (node.getAttribute(\"version\") == \"\" || node.getAttribute(\"version\") == null) {\r\n            return commonreferences.Version.ONE;\r\n        }\r\n        return new commonreferences.Version(node.getAttribute(\"version\"));\r\n    }\r\n    toCodelist(codelistNode: any) {\r\n        var cl: structure.Codelist = new structure.Codelist();\r\n        cl.setNames(this.toNames(codelistNode));\r\n        cl.setId(this.toID(codelistNode));\r\n        cl.setAgencyId(this.toNestedNCNameID(codelistNode));\r\n        cl.setVersion(this.toVersion(codelistNode));\r\n        var codeNodes = this.searchNodeName(\"Code\", codelistNode.childNodes);\r\n        for (var i: number = 0; i < codeNodes.length; i++) {\r\n            cl.getItems().push(this.toCode(codeNodes[i]));\r\n        }\r\n        return cl;\r\n    }\r\n    toCode(codeNode: any): structure.CodeType {\r\n        var c: structure.CodeType = new structure.CodeType();\r\n        c.setNames(this.toNames(codeNode));\r\n        c.setDescriptions(this.toDescriptions(codeNode));\r\n        c.setId(this.toID(codeNode));\r\n        if (codeNode.getAttribute(\"parentCode\") != null) {\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setMaintainableParentId(new commonreferences.ID(codeNode.getAttribute(\"parentCode\")));\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            c.setParent(reference);\r\n        }\r\n        return c;\r\n    }\r\n    getParentCode(codeNode: any): commonreferences.ID {\r\n        var id = codeNode.getAttribute(\"parentCode\");\r\n        if (id == null) { return null; }\r\n        else {\r\n            return new commonreferences.ID(id);\r\n        }\r\n    }\r\n    toValue(codeNode: any): commonreferences.ID {\r\n        if (codeNode == null) return null;\r\n        var id = codeNode.getAttribute(\"value\");\r\n        return new commonreferences.ID(id);\r\n    }\r\n    toConcepts(conceptsNode: any) {\r\n        if (conceptsNode == null) return null;\r\n        var concepts: structure.Concepts = new structure.Concepts();\r\n        this.struct.getStructures().setConcepts(concepts);\r\n        var conNodes = this.searchNodeName(\"ConceptScheme\", conceptsNode.childNodes);\r\n        var conceptSchemes = [];\r\n        for (var i: number = 0; i < conNodes.length; i++) {\r\n            conceptSchemes.push(this.toConceptScheme(conNodes[i]));\r\n        }\r\n        concepts.setConceptSchemes(conceptSchemes);\r\n        return concepts;\r\n    }\r\n    toConceptScheme(conceptSchemeNode: any) {\r\n        if (conceptSchemeNode == null) return null;\r\n        var cs: structure.ConceptSchemeType = new structure.ConceptSchemeType();\r\n        cs.setNames(this.toNames(conceptSchemeNode))\r\n        cs.setId(this.toID(conceptSchemeNode));\r\n        cs.setAgencyId(this.toNestedNCNameID(conceptSchemeNode));\r\n        cs.setVersion(this.toVersion(conceptSchemeNode));\r\n        var conNodes = this.searchNodeName(\"Concept\", conceptSchemeNode.childNodes);\r\n        var concepts = [];\r\n        for (var i: number = 0; i < conNodes.length; i++) {\r\n            cs.getItems().push(this.toConcept(conNodes[i]));\r\n        }\r\n        return cs;\r\n    }\r\n    toConcept(conceptNode: any): structure.ConceptType {\r\n        var c = new structure.ConceptType();\r\n        c.setURN(conceptNode.getAttribute(\"urn\"));\r\n        c.setId(this.toID(conceptNode));\r\n        c.setNames(this.toNames(conceptNode))\r\n        c.setDescriptions(this.toDescriptions(conceptNode));\r\n        return c;\r\n    }\r\n    toDataStructures(dsNode: any) {\r\n        if (dsNode == null) return null;\r\n        var dst: structure.DataStructures = new structure.DataStructures();\r\n        var dsNodes = this.searchNodeName(\"DataStructure\", dsNode.childNodes);\r\n        for (var i: number = 0; i < dsNodes.length; i++) {\r\n            dst.getDataStructures().push(this.toDataStructure(dsNodes[i]));\r\n        }\r\n        return dst;\r\n    }\r\n    toDataStructure(dsNode: any): structure.DataStructure {\r\n        var dst: structure.DataStructure = new structure.DataStructure();\r\n        dst.setNames(this.toNames(dsNode));\r\n        dst.setId(this.toID(dsNode));\r\n        dst.setVersion(this.toVersion(dsNode));\r\n        dst.setFinal(dsNode.getAttribute(\"isFinal\") == \"true\" ? true : false);\r\n        this.currentKeyFamilyAgency = dsNode.getAttribute(\"agencyID\");\r\n        dst.setAgencyId(this.toNestedNCNameID(dsNode));\r\n        dst.setVersion(this.toVersion(dsNode));\r\n\r\n        dst.setDataStructureComponents(this.toDataStructureComponents(this.findNodeName(\"DataStructureComponents\", dsNode.childNodes)));\r\n        //this.recurseDomChildren(keyFamilyNode, true);\r\n        return dst;\r\n    }\r\n    toDataStructureComponents(dsc: any): structure.DataStructureComponents {\r\n        if (dsc == null) return null;\r\n        var components: structure.DataStructureComponents = new structure.DataStructureComponents();\r\n        var dimListNode = this.findNodeName(\"DimensionList\", dsc.childNodes);\r\n        var attListNode = this.findNodeName(\"AttributeList\", dsc.childNodes);\r\n        var measListNode = this.findNodeName(\"MeasureList\", dsc.childNodes);\r\n        components.setDimensionList(this.toDimensionList(dimListNode));\r\n        components.setAttributeList(this.toAttributeList(this.searchNodeName(\"Attribute\", attListNode.childNodes)));\r\n        components.setMeasureList(this.toMeasureList(measListNode));\r\n        return components;\r\n    }\r\n    toMeasureList(measListNode: any): structure.MeasureList {\r\n        var ml: structure.MeasureList = new structure.MeasureList();\r\n        var pm: any = this.findNodeName(\"PrimaryMeasure\", measListNode.childNodes);\r\n        var dim: structure.PrimaryMeasure = this.toPrimaryMeasure(pm);\r\n        ml.setPrimaryMeasure(dim);\r\n        return ml;\r\n    }\r\n    toDimensionList(dimListNode: any): structure.DimensionList {\r\n        var dimensionList = new structure.DimensionList();\r\n        var dimList = this.searchNodeName(\"Dimension\", dimListNode.childNodes);\r\n        var dimensions = [];\r\n        for (var i: number = 0; i < dimList.length; i++) {\r\n            if (dimList[i].nodeName.indexOf(\"TimeDimension\") == -1) {\r\n                var dim = this.toDimension(dimList[i]);\r\n                dimensions.push(dim);\r\n            }\r\n        }\r\n        dimensionList.setDimensions(dimensions);\r\n        var time = this.findNodeName(\"TimeDimension\", dimListNode.childNodes);\r\n        dimensionList.setTimeDimension(this.toTimeDimension(time));\r\n        var meas = this.findNodeName(\"MeasureDimension\",dimListNode.childNodes);\r\n        if( meas != null ) {\r\n            dimensionList.setMeasureDimension(this.toMeasureDimension(meas));\r\n        }\r\n        return dimensionList;\r\n    }\r\n    toAttributeList(dims: Array<any>): structure.AttributeList {\r\n        var dimList: structure.AttributeList = new structure.AttributeList();\r\n        var dimArray: Array<structure.Attribute> = [];\r\n        for (var i: number = 0; i < dims.length; i++) {\r\n            dimArray.push(this.toAttribute(dims[i]));\r\n        }\r\n        dimList.setAttributes(dimArray);\r\n        return dimList;\r\n    }\r\n    toAttribute(dim: any): structure.Attribute {\r\n        var dim2: structure.Attribute = new structure.Attribute();\r\n        dim2.setId(this.toID(dim));\r\n        dim2.setConceptIdentity(this.getConceptIdentity(dim));\r\n        dim2.setLocalRepresentation(this.getLocalRepresentation(dim));\r\n        return dim2;\r\n    }\r\n    toTimeDimension(dim: any): structure.TimeDimension {\r\n        var dim2: structure.TimeDimension = new structure.TimeDimension();\r\n        dim2.setId(this.toID(dim));\r\n        dim2.setConceptIdentity(this.getConceptIdentity(dim));\r\n        dim2.setLocalRepresentation(this.getLocalRepresentation(dim));\r\n        return dim2;\r\n    }\r\n    toMeasureDimension(dim: any): structure.TimeDimension {\r\n        var dim2: structure.MeasureDimension = new structure.MeasureDimension();\r\n        dim2.setId(this.toID(dim));\r\n        dim2.setConceptIdentity(this.getConceptIdentity(dim));\r\n        dim2.setLocalRepresentation(this.getLocalRepresentationCrossSectional(dim));\r\n        return dim2;\r\n    }\r\n    toPrimaryMeasure(dim: any): structure.PrimaryMeasure {\r\n        var dim2: structure.PrimaryMeasure = new structure.PrimaryMeasure();\r\n        dim2.setId(this.toID(dim));\r\n        dim2.setConceptIdentity(this.getConceptIdentity(dim));\r\n        dim2.setLocalRepresentation(this.getLocalRepresentation(dim));\r\n        return dim2;\r\n    }\r\n    getLocalRepresentation(dim: any): structure.RepresentationType {\r\n        var localRepNode = this.findNodeName(\"LocalRepresentation\", dim.childNodes);\r\n        if (localRepNode == null) {\r\n            return new structure.RepresentationType();\r\n        }\r\n        var enumeration = this.findNodeName(\"Enumeration\", localRepNode.childNodes);\r\n        if (enumeration != null) {\r\n            var refNode = this.findNodeName(\"Ref\", enumeration.childNodes);\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setMaintainableParentId(this.toID(refNode));\r\n            ref.setAgencyId(this.toNestedNCNameID(refNode));\r\n            ref.setVersion(this.toVersion(refNode));\r\n            ref.setRefClass(commonreferences.ObjectTypeCodelistType.CODELIST);\r\n            ref.setPackage(commonreferences.PackageTypeCodelistType.CODELIST);\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            var rep: structure.RepresentationType = new structure.RepresentationType();\r\n            rep.setEnumeration(reference);\r\n        }\r\n        return rep;\r\n    }\r\n    getLocalRepresentationCrossSectional(dim: any): structure.RepresentationType {\r\n        var localRepNode = this.findNodeName(\"LocalRepresentation\", dim.childNodes);\r\n        if (localRepNode == null) {\r\n            return new structure.RepresentationType();\r\n        }\r\n        var enumeration = this.findNodeName(\"Enumeration\", localRepNode.childNodes);\r\n        if (enumeration != null) {\r\n            var refNode = this.findNodeName(\"Ref\", enumeration.childNodes);\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setMaintainableParentId(this.toID(refNode));\r\n            ref.setAgencyId(this.toNestedNCNameID(refNode));\r\n            ref.setVersion(this.toVersion(refNode));\r\n            ref.setRefClass(commonreferences.ObjectTypeCodelistType.CONCEPTSCHEME);\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            var rep: structure.RepresentationType = new structure.RepresentationType();\r\n            rep.setEnumeration(reference);\r\n        }\r\n        return rep;\r\n    }\r\n    getConceptIdentity(dim: any): commonreferences.Reference {\r\n        var conceptIdentityNode = this.findNodeName(\"ConceptIdentity\", dim.childNodes);\r\n        var refNode = this.findNodeName(\"Ref\", conceptIdentityNode.childNodes);\r\n        var ref: commonreferences.Ref = new commonreferences.Ref();\r\n        ref.setMaintainableParentId(this.toMaintainableParentID(refNode));\r\n        ref.setId(this.toID(refNode));\r\n        ref.setAgencyId(this.toNestedNCNameID(refNode));\r\n        ref.setVersion(this.toVersion(refNode));\r\n        var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n        return reference;\r\n    }\r\n    toDimension(dim: any): structure.Dimension {\r\n        var dim2: structure.Dimension = new structure.Dimension();\r\n        dim2.setPosition(parseInt(dim.getAttribute(\"position\")));\r\n        dim2.setId(this.toID(dim));\r\n        dim2.setConceptIdentity(this.getConceptIdentity(dim));\r\n        dim2.setLocalRepresentation(this.getLocalRepresentation(dim));\r\n        return dim2;\r\n    }\r\n    public toTextFormatType(tft: any): structure.TextFormatType {\r\n        if (tft == null) {\r\n            return null;\r\n        }\r\n        var tft2: structure.TextFormatType = new structure.TextFormatType();\r\n        if (tft.getAttribute(\"decimals\") != null) {\r\n            tft2.setDecimals(parseInt(tft.getAttribute(\"decimals\")));\r\n        }\r\n        if (tft.getAttribute(\"endValue\") != null) { tft2.setEndValue(parseInt(tft.getAttribute(\"endValue\"))); }\r\n        if (tft.getAttribute(\"isSequence\") != null) {\r\n            tft2.setIsSequence(tft.getAttribute(\"isSequence\") == \"true\");\r\n            if (tft.getAttribute(\"interval\") != null) { tft2.setInterval(parseInt(tft.getAttribute(\"interval\"))); }\r\n        }\r\n        if (tft.getAttribute(\"maxLength\") != null) {\r\n            tft2.setMaxLength(parseInt(tft.getAttribute(\"maxLength\")));\r\n        }\r\n        if (tft.getAttribute(\"pattern\") != null) {\r\n            tft2.setPattern(tft.getAttribute(\"pattern\"));\r\n        }\r\n        if (tft.getAttribute(\"startValue\")) { tft2.setStartValue(parseInt(tft.getAttribute(\"startValue\"))); }\r\n        if (tft.getAttribute(\"textType\") != null) {\r\n            tft2.setTextType(common.DataType.fromStringWithException(tft.getAttribute(\"textType\")));\r\n        }\r\n        if (tft.getAttribute(\"timeInterval\") != null) {\r\n            // DO ME!!!!\r\n            tft2.setTimeInterval(null);\r\n        }\r\n        return tft2;\r\n    }\r\n    getStructureType(): message.StructureType {\r\n        return this.struct;\r\n    }\r\n    findNodeName(s: string, childNodes: any) {\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                return childNodes[i];\r\n            }\r\n        }\r\n        //console.log(\"can't find node:\"+s);\r\n        return null;\r\n    }\r\n    searchNodeName(s: string, childNodes: any): Array<any> {\r\n        var result: Array<any> = [];\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                result.push(childNodes[i]);\r\n            }\r\n        }\r\n        if (result.length == 0) {\r\n            //alert(\"cannot find any \" + s + \" in node\");\r\n            //console.log(\"can't search node:\"+s);\r\n        }\r\n        return result;\r\n    }\r\n    findTextNode(node: any): string {\r\n        if (node == null) return \"\";\r\n        var childNodes = node.childNodes;\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nodeType = childNodes[i].nodeType;\r\n            if (nodeType == 3) {\r\n                return childNodes[i].nodeValue;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    recurseDomChildren(start: any, output: any) {\r\n        var nodes;\r\n        if (start.childNodes) {\r\n            nodes = start.childNodes;\r\n            this.loopNodeChildren(nodes, output);\r\n        }\r\n    }\r\n\r\n    loopNodeChildren(nodes: Array<any>, output: any) {\r\n        var node;\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            node = nodes[i];\r\n            if (output) {\r\n                this.outputNode(node);\r\n            }\r\n            if (node.childNodes) {\r\n                this.recurseDomChildren(node, output);\r\n            }\r\n        }\r\n    }\r\n    outputNode(node: any) {\r\n        var whitespace = /^\\s+$/g;\r\n        if (node.nodeType === 1) {\r\n            console.log(\"element: \" + node.tagName);\r\n        } else if (node.nodeType === 3) {\r\n            //clear whitespace text nodes\r\n            node.data = node.data.replace(whitespace, \"\");\r\n            if (node.data) {\r\n                console.log(\"text: \" + node.data);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}