{"version":3,"sources":["sdmx/sdmx21.ts"],"names":["parseXml","Sdmx21StructureParser","Sdmx21StructureParser.constructor","Sdmx21StructureParser.getVersionIdentifier","Sdmx21StructureParser.canParse","Sdmx21StructureParser.isStructure","Sdmx21StructureParser.isData","Sdmx21StructureParser.isMetadata","Sdmx21StructureParser.parseStructureWithRegistry","Sdmx21StructureParser.parseStructure","Sdmx21StructureParser.parseData","Sdmx21DataReaderTools","Sdmx21DataReaderTools.constructor","Sdmx21DataReaderTools.getDataMessage","Sdmx21DataReaderTools.toDataMessage","Sdmx21DataReaderTools.toDataSets","Sdmx21DataReaderTools.toDataSet","Sdmx21DataReaderTools.toHeader","Sdmx21DataReaderTools.toSender","Sdmx21DataReaderTools.toNames","Sdmx21DataReaderTools.toName","Sdmx21DataReaderTools.toDescriptions","Sdmx21DataReaderTools.toDescription","Sdmx21DataReaderTools.toTextType","Sdmx21DataReaderTools.toPartyType","Sdmx21DataReaderTools.findNodeName","Sdmx21DataReaderTools.searchNodeName","Sdmx21DataReaderTools.findTextNode","Sdmx21DataReaderTools.recurseDomChildren","Sdmx21DataReaderTools.loopNodeChildren","Sdmx21DataReaderTools.outputNode","Sdmx21StructureReaderTools","Sdmx21StructureReaderTools.constructor","Sdmx21StructureReaderTools.toStructureType","Sdmx21StructureReaderTools.toHeader","Sdmx21StructureReaderTools.toSender","Sdmx21StructureReaderTools.toReceiver","Sdmx21StructureReaderTools.toNames","Sdmx21StructureReaderTools.toName","Sdmx21StructureReaderTools.toDescriptions","Sdmx21StructureReaderTools.toDescription","Sdmx21StructureReaderTools.toTextType","Sdmx21StructureReaderTools.toPartyType","Sdmx21StructureReaderTools.toDataflows","Sdmx21StructureReaderTools.toDataflow","Sdmx21StructureReaderTools.toCodelists","Sdmx21StructureReaderTools.toID","Sdmx21StructureReaderTools.toMaintainableParentID","Sdmx21StructureReaderTools.toNestedID","Sdmx21StructureReaderTools.toNestedNCNameID","Sdmx21StructureReaderTools.toVersion","Sdmx21StructureReaderTools.toCodelist","Sdmx21StructureReaderTools.toCode","Sdmx21StructureReaderTools.getParentCode","Sdmx21StructureReaderTools.toValue","Sdmx21StructureReaderTools.toConcepts","Sdmx21StructureReaderTools.toConceptScheme","Sdmx21StructureReaderTools.toConcept","Sdmx21StructureReaderTools.toDataStructures","Sdmx21StructureReaderTools.toDataStructure","Sdmx21StructureReaderTools.toDataStructureComponents","Sdmx21StructureReaderTools.toMeasureList","Sdmx21StructureReaderTools.toDimensionList","Sdmx21StructureReaderTools.toAttributeList","Sdmx21StructureReaderTools.toAttribute","Sdmx21StructureReaderTools.toTimeDimension","Sdmx21StructureReaderTools.toPrimaryMeasure","Sdmx21StructureReaderTools.getLocalRepresentation","Sdmx21StructureReaderTools.getConceptIdentity","Sdmx21StructureReaderTools.toDimension","Sdmx21StructureReaderTools.toTextFormatType","Sdmx21StructureReaderTools.getStructureType","Sdmx21StructureReaderTools.findNodeName","Sdmx21StructureReaderTools.searchNodeName","Sdmx21StructureReaderTools.findTextNode","Sdmx21StructureReaderTools.recurseDomChildren","Sdmx21StructureReaderTools.loopNodeChildren","Sdmx21StructureReaderTools.outputNode"],"mappings":"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,CAACA;YACxCA,EAAEA,CAACA,KAAKA,CAACA,IAAIA,CAACA,IAAIA,CAACA,YAAYA,CAACA,CAACA,CAACA;YAClCA,EAAEA,CAACA,WAAWA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA,YAAYA,CAACA,CAACA,CAACA;YACpDA,EAAEA,CAACA,UAAUA,CAACA,IAAIA,CAACA,SAASA,CAACA,YAAYA,CAACA,CAACA,CAACA;YAC5CA,IAAIA,SAASA,GAAGA,IAAIA,CAACA,cAAcA,CAACA,MAAMA,EAAEA,YAAYA,CAACA,UAAUA,CAACA,CAACA;YACrEA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,SAASA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBAChDA,EAAEA,CAACA,QAAQA,EAAEA,CAACA,IAAIA,CAACA,IAAIA,CAACA,MAAMA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;YAClDA,CAACA;YACDA,MAAMA,CAACA,EAAEA,CAACA;QACdA,CAACA;QACDpB,2CAAMA,GAANA,UAAOA,QAAaA;YAChBqB,IAAIA,CAACA,GAAuBA,IAAIA,SAASA,CAACA,QAAQA,EAAEA,CAACA;YACrDA,CAACA,CAACA,QAAQA,CAACA,IAAIA,CAACA,OAAOA,CAACA,QAAQA,CAACA,CAACA,CAACA;YACnCA,CAACA,CAACA,eAAeA,CAACA,IAAIA,CAACA,cAAcA,CAACA,QAAQA,CAACA,CAACA,CAACA;YACjDA,CAACA,CAACA,KAAKA,CAACA,IAAIA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA;YAC7BA,EAAEA,CAACA,CAACA,QAAQA,CAACA,YAAYA,CAACA,YAAYA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;gBAC9CA,IAAIA,GAAGA,GAAyBA,IAAIA,gBAAgBA,CAACA,GAAGA,EAAEA,CAACA;gBAC3DA,GAAGA,CAACA,uBAAuBA,CAACA,IAAIA,gBAAgBA,CAACA,EAAEA,CAACA,QAAQA,CAACA,YAAYA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,YAAYA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA;YAACA,CAACA;YACvGA,EAAEA,CAACA,CAACA,GAAGA,CAACA,YAAYA,CAACA,YAAYA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;gBACzCA,IAAIA,CAACA,aAAaA,CAACA,GAAGA,CAACA,YAAYA,CAACA,YAAYA,CAACA,IAAIA,MAAMA,CAACA,CAACA;gBAC7DA,EAAEA,CAACA,CAACA,GAAGA,CAACA,YAAYA,CAACA,UAAUA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;oBAACA,IAAIA,CAACA,WAAWA,CAACA,QAAQA,CAACA,GAAGA,CAACA,YAAYA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA;gBAACA,CAACA;YAC3GA,CAACA;YACDA,EAAEA,CAACA,CAACA,GAAGA,CAACA,YAAYA,CAACA,WAAWA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;gBACxCA,IAAIA,CAACA,YAAYA,CAACA,QAAQA,CAACA,GAAGA,CAACA,YAAYA,CAACA,WAAWA,CAACA,CAACA,CAACA,CAACA;YAC/DA,CAACA;YACDA,EAAEA,CAACA,CAACA,GAAGA,CAACA,YAAYA,CAACA,SAASA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;gBACtCA,IAAIA,CAACA,UAAUA,CAACA,GAAGA,CAACA,YAAYA,CAACA,SAASA,CAACA,CAACA,CAACA;YACjDA,CAACA;YACDA,EAAEA,CAACA,CAACA,GAAGA,CAACA,YAAYA,CAACA,YAAYA,CAACA,CAACA,CAACA,CAACA;gBAACA,IAAIA,CAACA,aAAaA,CAACA,QAAQA,CAACA,GAAGA,CAACA,YAAYA,CAACA,YAAYA,CAACA,CAACA,CAACA,CAACA;YAACA,CAACA;YACrGA,EAAEA,CAACA,CAACA,GAAGA,CAACA,YAAYA,CAACA,UAAUA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;gBACvCA,IAAIA,CAACA,WAAWA,CAACA,MAAMA,CAACA,QAAQA,CAACA,uBAAuBA,CAACA,GAAGA,CAACA,YAAYA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA;YAC5FA,CAACA;YACDA,EAAEA,CAACA,CAACA,GAAGA,CAACA,YAAYA,CAACA,cAAcA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;gBAC3CA,YAAYA;gBACZA,IAAIA,CAACA,eAAeA,CAACA,IAAIA,CAACA,CAACA;YAC/BA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDvC,qDAAgBA,GAAhBA;YACIwC,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA;QACvBA,CAACA;QACDxC,iDAAYA,GAAZA,UAAaA,CAASA,EAAEA,UAAeA;YACnCyC,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,UAAUA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACjDA,IAAIA,EAAEA,GAAWA,UAAUA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA;gBACxCA,2DAA2DA;gBAC3DA,EAAEA,CAACA,CAACA,EAAEA,CAACA,OAAOA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA;oBACtBA,yBAAyBA;oBACzBA,MAAMA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA;gBACzBA,CAACA;YACLA,CAACA;YACDA,oCAAoCA;YACpCA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDzC,mDAAcA,GAAdA,UAAeA,CAASA,EAAEA,UAAeA;YACrC0C,IAAIA,MAAMA,GAAeA,EAAEA,CAACA;YAC5BA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,UAAUA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACjDA,IAAIA,EAAEA,GAAWA,UAAUA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA;gBACxCA,2DAA2DA;gBAC3DA,EAAEA,CAACA,CAACA,EAAEA,CAACA,OAAOA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA;oBACtBA,yBAAyBA;oBACzBA,MAAMA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAC/BA,CAACA;YACLA,CAACA;YACDA,EAAEA,CAACA,CAACA,MAAMA,CAACA,MAAMA,IAAIA,CAACA,CAACA,CAACA,CAACA;YAGzBA,CAACA;YACDA,MAAMA,CAACA,MAAMA,CAACA;QAClBA,CAACA;QACD1C,iDAAYA,GAAZA,UAAaA,IAASA;YAClB2C,EAAEA,CAACA,CAACA,IAAIA,IAAIA,IAAIA,CAACA;gBAACA,MAAMA,CAACA,EAAEA,CAACA;YAC5BA,IAAIA,UAAUA,GAAGA,IAAIA,CAACA,UAAUA,CAACA;YACjCA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,UAAUA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACjDA,IAAIA,QAAQA,GAAGA,UAAUA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA;gBACtCA,EAAEA,CAACA,CAACA,QAAQA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAChBA,MAAMA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA,SAASA,CAACA;gBACnCA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,EAAEA,CAACA;QACdA,CAACA;QACD3C,uDAAkBA,GAAlBA,UAAmBA,KAAUA,EAAEA,MAAWA;YACtC4C,IAAIA,KAAKA,CAACA;YACVA,EAAEA,CAACA,CAACA,KAAKA,CAACA,UAAUA,CAACA,CAACA,CAACA;gBACnBA,KAAKA,GAAGA,KAAKA,CAACA,UAAUA,CAACA;gBACzBA,IAAIA,CAACA,gBAAgBA,CAACA,KAAKA,EAAEA,MAAMA,CAACA,CAACA;YACzCA,CAACA;QACLA,CAACA;QAED5C,qDAAgBA,GAAhBA,UAAiBA,KAAiBA,EAAEA,MAAWA;YAC3C6C,IAAIA,IAAIA,CAACA;YACTA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,KAAKA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACpCA,IAAIA,GAAGA,KAAKA,CAACA,CAACA,CAACA,CAACA;gBAChBA,EAAEA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA;oBACTA,IAAIA,CAACA,UAAUA,CAACA,IAAIA,CAACA,CAACA;gBAC1BA,CAACA;gBACDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;oBAClBA,IAAIA,CAACA,kBAAkBA,CAACA,IAAIA,EAAEA,MAAMA,CAACA,CAACA;gBAC1CA,CAACA;YACLA,CAACA;QACLA,CAACA;QACD7C,+CAAUA,GAAVA,UAAWA,IAASA;YAChB8C,IAAIA,UAAUA,GAAGA,QAAQA,CAACA;YAC1BA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,KAAKA,CAACA,CAACA,CAACA,CAACA;gBACtBA,OAAOA,CAACA,GAAGA,CAACA,WAAWA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,CAACA;YAC5CA,CAACA;YAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,KAAKA,CAACA,CAACA,CAACA,CAACA;gBAC7BA,6BAA6BA;gBAC7BA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA,IAAIA,CAACA,OAAOA,CAACA,UAAUA,EAAEA,EAAEA,CAACA,CAACA;gBAC9CA,EAAEA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA;oBACZA,OAAOA,CAACA,GAAGA,CAACA,QAAQA,GAAGA,IAAIA,CAACA,IAAIA,CAACA,CAACA;gBACtCA,CAACA;YACLA,CAACA;QACLA,CAACA;QACL9C,iCAACA;IAADA,CAjdA,AAidCA,IAAA;IAjdY,kCAA0B,6BAidtC,CAAA","file":"sdmx/sdmx21.js","sourcesContent":["/*\r\n    This file is part of sdmx-js.\r\n\r\n    sdmx-js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    sdmx-js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\r\n    Copyright (C) 2016 James Gardner\r\n*/\r\n/// <amd-module name='sdmx/sdmx21'/>\r\n///<reference path=\"../collections.ts\"/>\r\nimport commonreferences = require(\"sdmx/commonreferences\");\r\nimport structure = require(\"sdmx/structure\");\r\nimport message = require(\"sdmx/message\");\r\nimport interfaces = require(\"sdmx/interfaces\");\r\nimport registry = require(\"sdmx/registry\");\r\nimport xml = require(\"sdmx/xml\");\r\nimport common = require(\"sdmx/common\");\r\nimport data = require(\"sdmx/data\");\r\nimport sdmx = require(\"sdmx\");\r\n\r\nexport function parseXml(s: string): any {\r\n    var parseXml: DOMParser;\r\n    parseXml = new DOMParser();\r\n    var xmlDoc = parseXml.parseFromString(s, \"text/xml\");\r\n    return xmlDoc;\r\n}\r\n\r\nexport class Sdmx21StructureParser implements interfaces.SdmxParserProvider {\r\n    constructor() {\r\n\r\n    }\r\n    getVersionIdentifier(): number {\r\n        return 2.1;\r\n    }\r\n    canParse(input: string): boolean {\r\n        if (input == null) return false;\r\n        if (this.isStructure(input)) return true;\r\n        if (this.isData(input)) return true;\r\n    }\r\n    isStructure(input: string): boolean {\r\n        if (input.indexOf(\"Structure\") != -1 && input.indexOf(\"http://www.sdmx.org/resources/sdmxml/schemas/v2_1/message\") != -1) {\r\n            return true;\r\n        } else return false;\r\n    }\r\n    isData(input: string): boolean {\r\n        if (input.indexOf(\"StructureSpecificData\") != -1 && input.indexOf(\"http://www.sdmx.org/resources/sdmxml/schemas/v2_1/message\") != -1) {\r\n            return true;\r\n        } else if (input.indexOf(\"GenericData\") != -1 && input.indexOf(\"http://www.sdmx.org/resources/sdmxml/schemas/v2_1/message\") != -1) {\r\n            return true;\r\n        } else return false;\r\n    }\r\n    isMetadata(header: string): boolean {\r\n        return false;\r\n    }\r\n    parseStructureWithRegistry(input: string, reg: interfaces.LocalRegistry): message.StructureType {\r\n        var srt: Sdmx21StructureReaderTools = new Sdmx21StructureReaderTools(input, reg);\r\n        return srt.getStructureType();\r\n\r\n    }\r\n    parseStructure(input: string): message.StructureType {\r\n        var srt: Sdmx21StructureReaderTools = new Sdmx21StructureReaderTools(input, null);\r\n        return srt.getStructureType();\r\n\r\n    }\r\n    parseData(input: string): message.DataMessage {\r\n        var parser: Sdmx21DataReaderTools = new Sdmx21DataReaderTools(input);\r\n        return parser.getDataMessage();\r\n\r\n    }\r\n}\r\nexport class Sdmx21DataReaderTools {\r\n    private msg: message.DataMessage = null;\r\n    private dw: data.FlatDataSetWriter = new data.FlatDataSetWriter();\r\n\r\n    constructor(s: string) {\r\n        //console.log(\"sdmx20 parsing data\");\r\n        var dom: any = parseXml(s);\r\n        //console.log(\"sdmx20 creating DataMessage\");\r\n        this.msg = this.toDataMessage(dom.documentElement);\r\n    }\r\n\r\n    getDataMessage(): message.DataMessage { return this.msg; }\r\n    toDataMessage(dm: any): message.DataMessage {\r\n        var msg: message.DataMessage = new message.DataMessage();\r\n        var childNodes = dm.childNodes;\r\n        msg.setHeader(this.toHeader(this.findNodeName(\"Header\", childNodes)));\r\n        var dss = this.toDataSets(this.searchNodeName(\"DataSet\", childNodes));\r\n        for (var i: number = 0; i < dss.length; i++) {\r\n            msg.addDataSet(dss[i]);\r\n        }\r\n        return msg;\r\n    }\r\n    toDataSets(dm: Array<any>): Array<data.FlatDataSet> {\r\n        var dss: Array<data.FlatDataSet> = [];\r\n        for (var i: number = 0; i < dm.length; i++) {\r\n            dss.push(this.toDataSet(dm[i].childNodes));\r\n        }\r\n        return dss;\r\n    }\r\n    toDataSet(ds: any): data.FlatDataSet {\r\n        this.dw.newDataSet();\r\n        var series: Array<any> = this.searchNodeName(\"Series\", ds);\r\n        if (series.length == 0) {\r\n            var obsArray: Array<any> = this.searchNodeName(\"Obs\", ds);\r\n            for (var i: number = 0; i < obsArray.length; i++) {\r\n                this.dw.newObservation();\r\n                var atts = obsArray[i].attributes;\r\n            }\r\n        } else {\r\n            for (var i: number = 0; i < series.length; i++) {\r\n                this.dw.newSeries();\r\n                var satts: Array<any> = series[i].attributes;\r\n                for (var av: number = 0; av < satts.length; av++) {\r\n                    this.dw.writeSeriesComponent(satts[av].nodeName, satts[av].value);\r\n                }\r\n                var obsArray: Array<any> = this.searchNodeName(\"Obs\", series[i].childNodes);\r\n                for (var j: number = 0; j < obsArray.length; j++) {\r\n                    this.dw.newObservation();\r\n                    var atts = obsArray[j].attributes;\r\n                    for (var av: number = 0; av < atts.length; av++) {\r\n                        this.dw.writeObservationComponent(atts[av].nodeName, atts[av].value);\r\n                    }\r\n                    this.dw.finishObservation();\r\n                }\r\n                this.dw.finishSeries();\r\n            }\r\n\r\n        }\r\n        return this.dw.finishDataSet();\r\n    }\r\n\r\n    toHeader(headerNode: any) {\r\n        var header: message.Header = new message.Header();\r\n        header.setId(this.findNodeName(\"ID\", headerNode.childNodes).childNodes[0].nodeValue);\r\n        var test: string = this.findNodeName(\"Test\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        header.setTest(test == \"true\");\r\n        // truncated not in sdmx 2.1\r\n        //var truncated:string= this.findNodeName(\"Truncated\",headerNode.childNodes).childNodes[0].nodeValue;\r\n        //header.setTruncated(truncated==\"true\");\r\n        var prepared: string = this.findNodeName(\"Prepared\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        var prepDate: xml.DateTime = xml.DateTime.fromString(prepared);\r\n        header.setPrepared(new message.HeaderTimeType(prepDate));\r\n        header.setSender(this.toSender(this.findNodeName(\"Sender\", headerNode.childNodes)));\r\n        return header;\r\n    }\r\n    toSender(senderNode: any): message.Sender {\r\n        var sender: string = senderNode.childNodes[0].nodeValue;\r\n\r\n        var senderType: message.Sender = new message.Sender();\r\n        var senderId: string = senderNode.getAttribute(\"id\");\r\n        var senderID: commonreferences.ID = new commonreferences.ID(senderId);\r\n        senderType.setId(senderID);\r\n        return senderType;\r\n    }\r\n    toNames(node: any): Array<common.Name> {\r\n        var names: Array<common.Name> = [];\r\n        var senderNames = this.searchNodeName(\"Name\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toName(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toName(node: any): common.Name {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var name: common.Name = new common.Name(lang, text);\r\n        return name;\r\n    }\r\n    toDescriptions(node: any): Array<common.Description> {\r\n        var names: Array<common.Description> = [];\r\n        var senderNames = this.searchNodeName(\"Description\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toDescription(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toDescription(node: any): common.Description {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var desc: common.Description = new common.Description(lang, text);\r\n        return desc;\r\n    }\r\n    toTextType(node: any): common.TextType {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var textType: common.TextType = new common.TextType(lang, text);\r\n        return textType;\r\n    }\r\n    toPartyType(node: any): message.PartyType {\r\n        var pt = new message.PartyType();\r\n        return pt;\r\n    }\r\n    findNodeName(s: string, childNodes: any) {\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                return childNodes[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    searchNodeName(s: string, childNodes: any): Array<any> {\r\n        var result: Array<any> = [];\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                result.push(childNodes[i]);\r\n            }\r\n        }\r\n        if (result.length == 0) {\r\n            //alert(\"cannot find any \" + s + \" in node\");\r\n        }\r\n        return result;\r\n    }\r\n    findTextNode(node: any): string {\r\n        if (node == null) return \"\";\r\n        var childNodes = node.childNodes;\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nodeType = childNodes[i].nodeType;\r\n            if (nodeType == 3) {\r\n                return childNodes[i].nodeValue;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    recurseDomChildren(start: any, output: any) {\r\n        var nodes;\r\n        if (start.childNodes) {\r\n            nodes = start.childNodes;\r\n            this.loopNodeChildren(nodes, output);\r\n        }\r\n    }\r\n\r\n    loopNodeChildren(nodes: Array<any>, output: any) {\r\n        var node;\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            node = nodes[i];\r\n            if (output) {\r\n                this.outputNode(node);\r\n            }\r\n            if (node.childNodes) {\r\n                this.recurseDomChildren(node, output);\r\n            }\r\n        }\r\n    }\r\n    outputNode(node: any) {\r\n        var whitespace = /^\\s+$/g;\r\n        if (node.nodeType === 1) {\r\n            console.log(\"element: \" + node.tagName);\r\n        } else if (node.nodeType === 3) {\r\n            //clear whitespace text nodes\r\n            node.data = node.data.replace(whitespace, \"\");\r\n            if (node.data) {\r\n                console.log(\"text: \" + node.data);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class Sdmx21StructureReaderTools {\r\n    private registry: interfaces.LocalRegistry = null;\r\n    private struct: message.StructureType = null;\r\n    private currentKeyFamilyAgency: string = null;\r\n\r\n    constructor(s: string, reg: interfaces.LocalRegistry) {\r\n        this.registry = reg;\r\n        var dom: any = parseXml(s);\r\n        this.struct = this.toStructureType(dom.documentElement);\r\n    }\r\n    toStructureType(structureNode: any): message.StructureType {\r\n        this.struct = new message.StructureType();\r\n        var structures: structure.Structures = new structure.Structures();\r\n        this.struct.setStructures(structures);\r\n        if (this.registry == null) {\r\n            this.registry = this.struct;\r\n        } else {\r\n            this.registry = new registry.DoubleRegistry(this.registry, this.struct);\r\n        }\r\n        var childNodes = structureNode.childNodes;\r\n        this.struct.setHeader(this.toHeader(this.findNodeName(\"Header\", childNodes)));\r\n        var structuresNode: any = this.findNodeName(\"Structures\", childNodes);\r\n        childNodes = structuresNode.childNodes;\r\n        structures.setCodeLists(this.toCodelists(this.findNodeName(\"Codelists\", childNodes)));\r\n        structures.setConcepts(this.toConcepts(this.findNodeName(\"Concepts\", childNodes)));\r\n        structures.setDataStructures(this.toDataStructures(this.findNodeName(\"DataStructures\", childNodes)));\r\n        structures.setDataflows(this.toDataflows(this.findNodeName(\"Dataflows\", childNodes)));\r\n        return this.struct;\r\n    }\r\n    toHeader(headerNode: any) {\r\n        var header: message.Header = new message.Header();\r\n        header.setId(this.findNodeName(\"ID\", headerNode.childNodes).childNodes[0].nodeValue);\r\n        var test: string = this.findNodeName(\"Test\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        header.setTest(test == \"true\");\r\n        // truncated not in sdmx 2.1\r\n        //var truncated:string= this.findNodeName(\"Truncated\",headerNode.childNodes).childNodes[0].nodeValue;\r\n        //header.setTruncated(truncated==\"true\");\r\n        var prepared: string = this.findNodeName(\"Prepared\", headerNode.childNodes).childNodes[0].nodeValue;\r\n        var prepDate: xml.DateTime = xml.DateTime.fromString(prepared);\r\n        header.setPrepared(new message.HeaderTimeType(prepDate));\r\n        header.setSender(this.toSender(this.findNodeName(\"Sender\", headerNode.childNodes)));\r\n        var receivers = [];\r\n        for (var i: number = 0; i < this.searchNodeName(\"Receiver\", headerNode.childNodes).length; i++) {\r\n            receivers.push(this.toReceiver(this.searchNodeName(\"Receiver\", headerNode.childNodes)[i]));\r\n        }\r\n        header.setReceivers(receivers);\r\n        return header;\r\n    }\r\n    toSender(senderNode: any): message.Sender {\r\n        //var sender: string = senderNode.childNodes[0].nodeValue;\r\n        var senderType: message.Sender = new message.Sender();\r\n        var senderId: string = senderNode.getAttribute(\"id\");\r\n        var senderID: commonreferences.ID = new commonreferences.ID(senderId);\r\n        senderType.setId(senderID);\r\n        return senderType;\r\n    }\r\n    toReceiver(receiverNode: any): message.PartyType {\r\n        //var sender: string = receiverNode.childNodes[0].nodeValue;\r\n        var receiverType: message.PartyType = new message.PartyType();\r\n        var senderId: string = receiverNode.getAttribute(\"id\");\r\n        var senderID: commonreferences.ID = new commonreferences.ID(senderId);\r\n        receiverType.setId(senderID);\r\n        return receiverType;\r\n    }\r\n    toNames(node: any): Array<common.Name> {\r\n        var names: Array<common.Name> = [];\r\n        var senderNames = this.searchNodeName(\"Name\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toName(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toName(node: any): common.Name {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var name: common.Name = new common.Name(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return name;\r\n    }\r\n    toDescriptions(node: any): Array<common.Description> {\r\n        var names: Array<common.Description> = [];\r\n        var senderNames = this.searchNodeName(\"Description\", node.childNodes);\r\n        for (var i: number = 0; i < senderNames.length; i++) {\r\n            names.push(this.toDescription(senderNames[i]));\r\n        }\r\n        return names;\r\n    }\r\n    toDescription(node: any): common.Description {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        if (node.childNodes.length == 0) {\r\n            // <structure:Description xml:lang=\"en\" />\r\n            return new common.Description(lang, \"\");\r\n        }\r\n        var text = node.childNodes[0].nodeValue;\r\n        var desc: common.Description = new common.Description(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return desc;\r\n    }\r\n    toTextType(node: any): common.TextType {\r\n        var lang = node.getAttribute(\"xml:lang\");\r\n        var text = node.childNodes[0].nodeValue;\r\n        var textType: common.TextType = new common.TextType(lang, text);\r\n        sdmx.SdmxIO.registerLanguage(lang);\r\n        return textType;\r\n    }\r\n    toPartyType(node: any): message.PartyType {\r\n        var pt = new message.PartyType();\r\n        return pt;\r\n    }\r\n    toDataflows(dataflowsNode: any): structure.DataflowList {\r\n        if (dataflowsNode == null) return null;\r\n        var dl: structure.DataflowList = new structure.DataflowList();\r\n        var dfs = this.searchNodeName(\"Dataflow\", dataflowsNode.childNodes);\r\n        var dataflows = [];\r\n        for (var i: number = 0; i < dfs.length; i++) {\r\n            dataflows.push(this.toDataflow(dfs[i]));\r\n        }\r\n        dl.setDataflowList(dataflows);\r\n        return dl;\r\n    }\r\n    toDataflow(dataflowNode: any): structure.Dataflow {\r\n        var df: structure.Dataflow = new structure.Dataflow();\r\n        df.setNames(this.toNames(dataflowNode));\r\n        df.setId(this.toID(dataflowNode));\r\n        df.setAgencyId(this.toNestedNCNameID(dataflowNode));\r\n        df.setVersion(this.toVersion(dataflowNode));\r\n        var struct = this.findNodeName(\"Structure\", dataflowNode.childNodes);\r\n        var refNode = this.findNodeName(\"Ref\", struct.childNodes);\r\n        var ref: commonreferences.Ref = new commonreferences.Ref();\r\n        ref.setAgencyId(this.toNestedNCNameID(refNode));\r\n        ref.setMaintainableParentId(this.toID(refNode));\r\n        ref.setVersion(this.toVersion(refNode));\r\n        var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n        df.setStructure(reference);\r\n        return df;\r\n    }\r\n    toCodelists(codelistsNode: any) {\r\n        if (codelistsNode == null) return null;\r\n        var codelists: structure.CodeLists = new structure.CodeLists();\r\n        var codes = this.searchNodeName(\"Codelist\", codelistsNode.childNodes);\r\n        for (var i: number = 0; i < codes.length; i++) {\r\n            codelists.getCodelists().push(this.toCodelist(codes[i]));\r\n        }\r\n        return codelists;\r\n    }\r\n    toID(node: any): commonreferences.ID {\r\n        if (node == null) return null;\r\n        return new commonreferences.ID(node.getAttribute(\"id\"));\r\n    }\r\n    toMaintainableParentID(node: any): commonreferences.ID {\r\n        if (node == null) return null;\r\n        return new commonreferences.ID(node.getAttribute(\"maintainableParentID\"));\r\n    }\r\n    toNestedID(node: any): commonreferences.NestedID {\r\n        if (node == null) return null;\r\n        return new commonreferences.NestedID(node.getAttribute(\"id\"));\r\n    }\r\n    toNestedNCNameID(node: any): commonreferences.NestedNCNameID {\r\n        if (node == null) return null;\r\n        return new commonreferences.NestedNCNameID(node.getAttribute(\"agencyID\"));\r\n    }\r\n    toVersion(node: any): commonreferences.Version {\r\n        if (node == null) return null;\r\n        if (node.getAttribute(\"version\") == \"\" || node.getAttribute(\"version\") == null) {\r\n            return commonreferences.Version.ONE;\r\n        }\r\n        return new commonreferences.Version(node.getAttribute(\"version\"));\r\n    }\r\n    toCodelist(codelistNode: any) {\r\n        var cl: structure.Codelist = new structure.Codelist();\r\n        cl.setNames(this.toNames(codelistNode));\r\n        cl.setId(this.toID(codelistNode));\r\n        cl.setAgencyId(this.toNestedNCNameID(codelistNode));\r\n        cl.setVersion(this.toVersion(codelistNode));\r\n        var codeNodes = this.searchNodeName(\"Code\", codelistNode.childNodes);\r\n        for (var i: number = 0; i < codeNodes.length; i++) {\r\n            cl.getItems().push(this.toCode(codeNodes[i]));\r\n        }\r\n        return cl;\r\n    }\r\n    toCode(codeNode: any): structure.CodeType {\r\n        var c: structure.CodeType = new structure.CodeType();\r\n        c.setNames(this.toNames(codeNode));\r\n        c.setDescriptions(this.toDescriptions(codeNode));\r\n        c.setId(this.toID(codeNode));\r\n        if (codeNode.getAttribute(\"parentCode\") != null) {\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setMaintainableParentId(new commonreferences.ID(codeNode.getAttribute(\"parentCode\")));\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            c.setParent(reference);\r\n        }\r\n        return c;\r\n    }\r\n    getParentCode(codeNode: any): commonreferences.ID {\r\n        var id = codeNode.getAttribute(\"parentCode\");\r\n        if (id == null) { return null; }\r\n        else {\r\n            return new commonreferences.ID(id);\r\n        }\r\n    }\r\n    toValue(codeNode: any): commonreferences.ID {\r\n        if (codeNode == null) return null;\r\n        var id = codeNode.getAttribute(\"value\");\r\n        return new commonreferences.ID(id);\r\n    }\r\n    toConcepts(conceptsNode: any) {\r\n        if (conceptsNode == null) return null;\r\n        var concepts: structure.Concepts = new structure.Concepts();\r\n        this.struct.getStructures().setConcepts(concepts);\r\n        var conNodes = this.searchNodeName(\"ConceptScheme\", conceptsNode.childNodes);\r\n        var conceptSchemes = [];\r\n        for (var i: number = 0; i < conNodes.length; i++) {\r\n            conceptSchemes.push(this.toConceptScheme(conNodes[i]));\r\n        }\r\n        concepts.setConceptSchemes(conceptSchemes);\r\n        return concepts;\r\n    }\r\n    toConceptScheme(conceptSchemeNode: any) {\r\n        if (conceptSchemeNode == null) return null;\r\n        var cs: structure.ConceptSchemeType = new structure.ConceptSchemeType();\r\n        cs.setNames(this.toNames(conceptSchemeNode))\r\n        cs.setId(this.toID(conceptSchemeNode));\r\n        cs.setAgencyId(this.toNestedNCNameID(conceptSchemeNode));\r\n        cs.setVersion(this.toVersion(conceptSchemeNode));\r\n        var conNodes = this.searchNodeName(\"Concept\", conceptSchemeNode.childNodes);\r\n        var concepts = [];\r\n        for (var i: number = 0; i < conNodes.length; i++) {\r\n            cs.getItems().push(this.toConcept(conNodes[i]));\r\n        }\r\n        return cs;\r\n    }\r\n    toConcept(conceptNode: any): structure.ConceptType {\r\n        var c = new structure.ConceptType();\r\n        c.setURN(conceptNode.getAttribute(\"urn\"));\r\n        c.setId(this.toID(conceptNode));\r\n        c.setNames(this.toNames(conceptNode))\r\n        c.setDescriptions(this.toDescriptions(conceptNode));\r\n        return c;\r\n    }\r\n    toDataStructures(dsNode: any) {\r\n        if (dsNode == null) return null;\r\n        var dst: structure.DataStructures = new structure.DataStructures();\r\n        var dsNodes = this.searchNodeName(\"DataStructure\", dsNode.childNodes);\r\n        for (var i: number = 0; i < dsNodes.length; i++) {\r\n            dst.getDataStructures().push(this.toDataStructure(dsNodes[i]));\r\n        }\r\n        return dst;\r\n    }\r\n    toDataStructure(dsNode: any): structure.DataStructure {\r\n        var dst: structure.DataStructure = new structure.DataStructure();\r\n        dst.setNames(this.toNames(dsNode));\r\n        dst.setId(this.toID(dsNode));\r\n        dst.setVersion(this.toVersion(dsNode));\r\n        dst.setFinal(dsNode.getAttribute(\"isFinal\") == \"true\" ? true : false);\r\n        this.currentKeyFamilyAgency = dsNode.getAttribute(\"agencyID\");\r\n        dst.setAgencyId(this.toNestedNCNameID(dsNode));\r\n        dst.setVersion(this.toVersion(dsNode));\r\n\r\n        dst.setDataStructureComponents(this.toDataStructureComponents(this.findNodeName(\"DataStructureComponents\", dsNode.childNodes)));\r\n        //this.recurseDomChildren(keyFamilyNode, true);\r\n        return dst;\r\n    }\r\n    toDataStructureComponents(dsc: any): structure.DataStructureComponents {\r\n        if (dsc == null) return null;\r\n        var components: structure.DataStructureComponents = new structure.DataStructureComponents();\r\n        var dimListNode = this.findNodeName(\"DimensionList\", dsc.childNodes);\r\n        var attListNode = this.findNodeName(\"AttributeList\", dsc.childNodes);\r\n        var measListNode = this.findNodeName(\"MeasureList\", dsc.childNodes);\r\n        components.setDimensionList(this.toDimensionList(dimListNode));\r\n        components.setAttributeList(this.toAttributeList(attListNode));\r\n        components.setMeasureList(this.toMeasureList(measListNode));\r\n        return components;\r\n    }\r\n    toMeasureList(measListNode: any): structure.MeasureList {\r\n        var ml: structure.MeasureList = new structure.MeasureList();\r\n        var pm: any = this.findNodeName(\"PrimaryMeasure\", measListNode.childNodes);\r\n        var dim: structure.PrimaryMeasure = this.toPrimaryMeasure(pm);\r\n        ml.setPrimaryMeasure(dim);\r\n        return ml;\r\n    }\r\n    toDimensionList(dimListNode: any): structure.DimensionList {\r\n        var dimensionList = new structure.DimensionList();\r\n        var dimList = this.searchNodeName(\"Dimension\", dimListNode.childNodes);\r\n        var dimensions = [];\r\n        for (var i: number = 0; i < dimList.length; i++) {\r\n            if (dimList[i].nodeName.indexOf(\"TimeDimension\") == -1) {\r\n                var dim = this.toDimension(dimList[i]);\r\n                dimensions.push(dim);\r\n            }\r\n        }\r\n        dimensionList.setDimensions(dimensions);\r\n        var time = this.findNodeName(\"TimeDimension\", dimListNode.childNodes);\r\n        dimensionList.setTimeDimension(this.toTimeDimension(time));\r\n        return dimensionList;\r\n    }\r\n    toAttributeList(dims: Array<any>): structure.AttributeList {\r\n        var dimList: structure.AttributeList = new structure.AttributeList();\r\n        var dimArray: Array<structure.Attribute> = [];\r\n        for (var i: number = 0; i < dims.length; i++) {\r\n            dimArray.push(this.toAttribute(dims[i]));\r\n        }\r\n        dimList.setAttributes(dimArray);\r\n        return dimList;\r\n    }\r\n    toAttribute(dim: any) {\r\n        var dim2: structure.Attribute = new structure.Attribute();\r\n        dim2.setId(this.toID(dim));\r\n        dim2.setConceptIdentity(this.getConceptIdentity(dim));\r\n        dim2.setLocalRepresentation(this.getLocalRepresentation(dim));\r\n        return dim2;\r\n    }\r\n    toTimeDimension(dim: any): structure.TimeDimension {\r\n        var dim2: structure.TimeDimension = new structure.TimeDimension();\r\n        dim2.setId(this.toID(dim));\r\n        dim2.setConceptIdentity(this.getConceptIdentity(dim));\r\n        dim2.setLocalRepresentation(this.getLocalRepresentation(dim));\r\n        return dim2;\r\n    }\r\n    toPrimaryMeasure(dim: any): structure.PrimaryMeasure {\r\n        var dim2: structure.PrimaryMeasure = new structure.PrimaryMeasure();\r\n        dim2.setId(this.toID(dim));\r\n        dim2.setConceptIdentity(this.getConceptIdentity(dim));\r\n        dim2.setLocalRepresentation(this.getLocalRepresentation(dim));\r\n        return dim2;\r\n    }\r\n    getLocalRepresentation(dim: any): structure.RepresentationType {\r\n        var localRepNode = this.findNodeName(\"LocalRepresentation\", dim.childNodes);\r\n        if (localRepNode == null) {\r\n            return new structure.RepresentationType();\r\n        }\r\n        var enumeration = this.findNodeName(\"Enumeration\", localRepNode.childNodes);\r\n        if (enumeration != null) {\r\n            var refNode = this.findNodeName(\"Ref\", enumeration.childNodes);\r\n            var ref: commonreferences.Ref = new commonreferences.Ref();\r\n            ref.setMaintainableParentId(this.toID(refNode));\r\n            ref.setAgencyId(this.toNestedNCNameID(refNode));\r\n            ref.setVersion(this.toVersion(refNode));\r\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n            var rep: structure.RepresentationType = new structure.RepresentationType();\r\n            rep.setEnumeration(reference);\r\n        }\r\n        return rep;\r\n    }\r\n    getConceptIdentity(dim: any): commonreferences.Reference {\r\n        var conceptIdentityNode = this.findNodeName(\"ConceptIdentity\", dim.childNodes);\r\n        var refNode = this.findNodeName(\"Ref\", conceptIdentityNode.childNodes);\r\n        var ref: commonreferences.Ref = new commonreferences.Ref();\r\n        ref.setMaintainableParentId(this.toMaintainableParentID(refNode));\r\n        ref.setId(this.toID(refNode));\r\n        ref.setAgencyId(this.toNestedNCNameID(refNode));\r\n        ref.setVersion(this.toVersion(refNode));\r\n        var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n        return reference;\r\n    }\r\n    toDimension(dim: any): structure.Dimension {\r\n        var dim2: structure.Dimension = new structure.Dimension();\r\n        dim2.setPosition(parseInt(dim.getAttribute(\"position\")));\r\n        dim2.setId(this.toID(dim));\r\n        dim2.setConceptIdentity(this.getConceptIdentity(dim));\r\n        dim2.setLocalRepresentation(this.getLocalRepresentation(dim));\r\n        return dim2;\r\n    }\r\n    public toTextFormatType(tft: any): structure.TextFormatType {\r\n        if (tft == null) {\r\n            return null;\r\n        }\r\n        var tft2: structure.TextFormatType = new structure.TextFormatType();\r\n        if (tft.getAttribute(\"decimals\") != null) {\r\n            tft2.setDecimals(parseInt(tft.getAttribute(\"decimals\")));\r\n        }\r\n        if (tft.getAttribute(\"endValue\") != null) { tft2.setEndValue(parseInt(tft.getAttribute(\"endValue\"))); }\r\n        if (tft.getAttribute(\"isSequence\") != null) {\r\n            tft2.setIsSequence(tft.getAttribute(\"isSequence\") == \"true\");\r\n            if (tft.getAttribute(\"interval\") != null) { tft2.setInterval(parseInt(tft.getAttribute(\"interval\"))); }\r\n        }\r\n        if (tft.getAttribute(\"maxLength\") != null) {\r\n            tft2.setMaxLength(parseInt(tft.getAttribute(\"maxLength\")));\r\n        }\r\n        if (tft.getAttribute(\"pattern\") != null) {\r\n            tft2.setPattern(tft.getAttribute(\"pattern\"));\r\n        }\r\n        if (tft.getAttribute(\"startValue\")) { tft2.setStartValue(parseInt(tft.getAttribute(\"startValue\"))); }\r\n        if (tft.getAttribute(\"textType\") != null) {\r\n            tft2.setTextType(common.DataType.fromStringWithException(tft.getAttribute(\"textType\")));\r\n        }\r\n        if (tft.getAttribute(\"timeInterval\") != null) {\r\n            // DO ME!!!!\r\n            tft2.setTimeInterval(null);\r\n        }\r\n        return tft2;\r\n    }\r\n    getStructureType(): message.StructureType {\r\n        return this.struct;\r\n    }\r\n    findNodeName(s: string, childNodes: any) {\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                return childNodes[i];\r\n            }\r\n        }\r\n        //console.log(\"can't find node:\"+s);\r\n        return null;\r\n    }\r\n    searchNodeName(s: string, childNodes: any): Array<any> {\r\n        var result: Array<any> = [];\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nn: string = childNodes[i].nodeName;\r\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\r\n            if (nn.indexOf(s) != -1) {\r\n                //alert(\"found node:\"+s);\r\n                result.push(childNodes[i]);\r\n            }\r\n        }\r\n        if (result.length == 0) {\r\n            //alert(\"cannot find any \" + s + \" in node\");\r\n            //console.log(\"can't search node:\"+s);\r\n        }\r\n        return result;\r\n    }\r\n    findTextNode(node: any): string {\r\n        if (node == null) return \"\";\r\n        var childNodes = node.childNodes;\r\n        for (var i: number = 0; i < childNodes.length; i++) {\r\n            var nodeType = childNodes[i].nodeType;\r\n            if (nodeType == 3) {\r\n                return childNodes[i].nodeValue;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    recurseDomChildren(start: any, output: any) {\r\n        var nodes;\r\n        if (start.childNodes) {\r\n            nodes = start.childNodes;\r\n            this.loopNodeChildren(nodes, output);\r\n        }\r\n    }\r\n\r\n    loopNodeChildren(nodes: Array<any>, output: any) {\r\n        var node;\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            node = nodes[i];\r\n            if (output) {\r\n                this.outputNode(node);\r\n            }\r\n            if (node.childNodes) {\r\n                this.recurseDomChildren(node, output);\r\n            }\r\n        }\r\n    }\r\n    outputNode(node: any) {\r\n        var whitespace = /^\\s+$/g;\r\n        if (node.nodeType === 1) {\r\n            console.log(\"element: \" + node.tagName);\r\n        } else if (node.nodeType === 3) {\r\n            //clear whitespace text nodes\r\n            node.data = node.data.replace(whitespace, \"\");\r\n            if (node.data) {\r\n                console.log(\"text: \" + node.data);\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}