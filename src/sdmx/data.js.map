{"version":3,"sources":["sdmx/data.ts"],"names":[],"mappings":"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","file":"data.js","sourcesContent":["/*\n    This file is part of sdmx-js.\n\n    sdmx-js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    sdmx-js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\n    Copyright (C) 2016 James Gardner\n*/\n/// <amd-module name='sdmx/data'/>\n///<reference path=\"../collections.ts\"/>\nimport interfaces = require(\"sdmx/interfaces\");\nimport common = require(\"sdmx/common\");\nimport commonreferences = require(\"sdmx/commonreferences\");\nimport structure = require(\"sdmx/structure\");\nimport message = require(\"sdmx/message\");\nimport moment = require(\"moment\");\nimport sdmx = require(\"sdmx\");\nimport timepack = require(\"sdmx/time\");\nexport class Query {\n    private flow: structure.Dataflow = null;\n    private structRef: commonreferences.Reference = null;\n    private registry: interfaces.LocalRegistry = null;\n    private query: Array<QueryKey> = [];\n    private startDate: Date = new Date();\n    private endDate: Date = new Date();\n    private updatedAfter: Date = null;\n    private firstNObservations: number = null;\n    private lastNObservations: number = null;\n    private dimensionAtObservation: string = null;\n    private detail: string = null;\n    private includeHistory: boolean = null;\n    private providerRef: string = null;\n\n    constructor(flow: structure.Dataflow, registry: interfaces.LocalRegistry) {\n        this.flow = flow;\n        this.structRef = flow.getStructure();\n        this.registry = registry;\n        var kns = this.getKeyNames();\n        for (var i: number = 0; i < kns.length; i++) {\n            this.query.push(new QueryKey(this.structRef, registry, kns[i]));\n        }\n        this.startDate.setFullYear(2000);\n        this.endDate.setFullYear(2016);\n    }\n    public getQueryKey(id: string) {\n        for (var i: number = 0; i < this.query.length; i++) {\n            if (this.query[i].getName() == id) return this.query[i];\n        }\n        return null;\n    }\n    public getKeyNames(): Array<string> {\n        var struct: structure.DataStructure = this.registry.findDataStructure(this.structRef);\n        var keynames = [];\n        for (var i: number = 0; i < struct.getDataStructureComponents().getDimensionList().getDimensions().length; i++) {\n            var dim1: structure.Dimension = struct.getDataStructureComponents().getDimensionList().getDimensions()[i];\n            keynames.push(dim1.getId().toString());\n        }\n        if (struct.getDataStructureComponents().getDimensionList().getMeasureDimension() != null) {\n            var dim2: structure.MeasureDimension = struct.getDataStructureComponents().getDimensionList().getMeasureDimension();\n            keynames.push(dim2.getId().toString());\n        }\n        return keynames;\n    }\n    getDataflow(): structure.Dataflow {\n        return this.flow;\n    }\n    getRegistry(): interfaces.LocalRegistry {\n        return this.registry;\n    }\n    getStartDate(): Date {\n        return this.startDate;\n    }\n    getEndDate(): Date {\n        return this.endDate;\n    }\n    setStartDate(d: Date) {\n        this.startDate = d;\n    }\n    setEndDate(d: Date) {\n        this.endDate = d;\n    }\n    getQueryString() {\n        var qString: string = \"\";\n        var keyNames = this.getKeyNames();\n        for (var i: number = 0; i < keyNames.length; i++) {\n            qString += this.getQueryKey(keyNames[i]).getQueryString();\n            if (i < (keyNames.length - 1)) {\n                qString += \".\";\n            }\n        }\n        return qString;\n    }\n    getUpdatedAfter(): Date { return this.updatedAfter; }\n    setUpdatedAfter(d: Date) { this.updatedAfter = d; }\n    getFirstNObservations(): number {\n        return this.firstNObservations;\n    }\n    setFirstNObservations(n: number) {\n        this.firstNObservations = n;\n    }\n    getLastNObservations(): number {\n        return this.lastNObservations;\n    }\n    setLastNObservations(n: number) {\n        this.lastNObservations = n;\n    }\n    getDimensionAtObservation(): string {\n        return this.dimensionAtObservation;\n    }\n    setDimensionAtObservation(s: string) {\n        this.dimensionAtObservation = s;\n    }\n    setDetail(s: string) { this.detail = s; }\n    getDetail(): string { return this.detail; }\n    getIncludeHistory(): boolean { return this.includeHistory; }\n    setIncludeHistory(b: boolean) { this.includeHistory = b; }\n    setProviderRef(s: string) { this.providerRef = s; }\n    getProviderRef(): string {\n        return this.providerRef;\n    }\n}\nexport class QueryKey {\n    private all: boolean = false;\n    private structRef: commonreferences.Reference = null;\n    private registry: interfaces.LocalRegistry = null;\n    private name: string = null;\n    private values: Array<string> = [];\n    constructor(structRef: commonreferences.Reference, registry: interfaces.LocalRegistry, s: string) {\n        this.structRef = structRef;\n        this.registry = registry;\n        this.name = s;\n    }\n    public getName(): string { return this.name; }\n    public getValues(): Array<string> {\n        return this.values;\n    }\n    public setName(s: string) { this.name = s; }\n    public setValue(a: Array<string>) {\n        this.values = a;\n    }\n    public addValue(s: string) {\n        for (var i: number = 0; i < this.values.length; i++) {\n            // already in here\n            if (this.values[i] == s) return;\n        }\n        this.values.push(s);\n    }\n    public removeValue(s: string) {\n        collections.arrays.remove(this.values, s);\n    }\n    public getItemScheme(): structure.ItemSchemeType {\n        var comp: structure.Component = this.registry.findDataStructure(this.structRef).findComponentString(this.name);\n        var lr = comp.getLocalRepresentation();\n        if (lr == null || lr.getEnumeration() == null) {\n            var conceptScheme: structure.ConceptSchemeType = this.registry.findConceptScheme(comp.getConceptIdentity());\n            return conceptScheme;\n        } else {\n            if (lr != null) {\n                var codelist = this.registry.findCodelist(lr.getEnumeration());\n                return codelist;\n            }\n            // lr == null\n            return null;\n        }\n    }\n    public isAll(): boolean {\n        return this.all;\n    }\n    public setAll(b: boolean) {\n        this.all = b;\n    }\n    public possibleValues(): Array<string> {\n        var result = [];\n        var itemScheme: structure.ItemSchemeType = this.getItemScheme();\n        for (var i: number = 0; i < itemScheme.size(); i++) {\n            var itm: structure.ItemType = itemScheme.getItem(i);\n            result.push(itm.getId().toString());\n        }\n        return result;;\n    }\n    getQueryString() {\n        if (this.isAll()) {\n            return \"\";\n        } else {\n            var s: string = \"\";\n            for (var i: number = 0; i < this.values.length; i++) {\n                s += this.values[i];\n                if (i < (this.values.length - 1)) {\n                    s += \"+\";\n                }\n            }\n            return s;\n        }\n    }\n}\n\nexport class FlatObs {\n    private values: Array<string> = [];\n    constructor(vals: Array<string>) {\n        this.values = vals;\n        if (vals == null) {\n            this.values = [];\n        }\n    }\n    setValue(i: number, o: string) {\n        if (this.values.length <= i) {\n            for (var j: number = this.values.length; (j - 1) < i; j++) {\n                this.values.push(null);\n            }\n        }\n        this.values[i] = o;\n    }\n    getValue(i: number): string {\n        if (i >= this.values.length) { return null; }\n        return this.values[i];\n    }\n    dump() {\n        var s: string = \"\";\n        for (var i: number = 0; i < this.values.length; i++) {\n            s += this.values[i];\n            if (i < this.values.length) s += \" \";\n        }\n        console.log(s);\n    }\n    size(): number {\n        return this.values.length;\n    }\n\n}\n\n\nexport class AttachmentLevel {\n    private static LIST: Array<AttachmentLevel> = [];\n\n    public static ATTACHMENT_DATASET: number = 0;\n    public static ATTACHMENT_SERIES: number = 1;\n    public static ATTACHMENT_OBSERVATION: number = 2;\n    public static ATTACHMENT_GROUP: number = 3;\n    public static ATTACHMENT_DATASET_STRING: string = \"DataSet\";\n    public static ATTACHMENT_SERIES_STRING: string = \"Series\";\n    public static ATTACHMENT_OBSERVATION_STRING: string = \"Observation\";\n    public static ATTACHMENT_GROUP_STRING: string = \"Group\";\n    public static DATASET: AttachmentLevel = new AttachmentLevel(AttachmentLevel.ATTACHMENT_DATASET_STRING, AttachmentLevel.ATTACHMENT_DATASET);\n    public static SERIES: AttachmentLevel = new AttachmentLevel(AttachmentLevel.ATTACHMENT_SERIES_STRING, AttachmentLevel.ATTACHMENT_SERIES);\n    public static OBSERVATION: AttachmentLevel = new AttachmentLevel(AttachmentLevel.ATTACHMENT_OBSERVATION_STRING, AttachmentLevel.ATTACHMENT_OBSERVATION);\n    public static GROUP: AttachmentLevel = new AttachmentLevel(AttachmentLevel.ATTACHMENT_GROUP_STRING, AttachmentLevel.ATTACHMENT_GROUP);\n\n    private name: string = null;\n    private id: number = 0;\n\n\n\n    constructor(s: string, id: number) {\n        this.name = s;\n        this.id = id;\n        AttachmentLevel.LIST.push(this);\n    }\n    public getName(): string { return this.name; }\n    public getId(): number { return this.id; }\n    public static fromString(s: string): AttachmentLevel {\n        for (var i: number = 0; i < AttachmentLevel.LIST.length; i++) {\n            if (AttachmentLevel.LIST[i].getName() == s) return AttachmentLevel.LIST[i];\n        }\n        return null;\n    }\n    public static fromId(id: number): AttachmentLevel {\n        for (var i: number = 0; i < AttachmentLevel.LIST.length; i++) {\n            if (AttachmentLevel.LIST[i].getId() == id) return AttachmentLevel.LIST[i];\n        }\n        return null;\n    }\n\n\n}\nexport class AbstractKey {\n    getComponent(s: string): string {\n        return \"\";\n    }\n}\nexport class PartialKey extends AbstractKey {\n}\nexport class FullKey extends AbstractKey {\n}\n\n\nexport class Group {\n    private groupName: string = null;\n    private groupKey: collections.Dictionary<string, any> = new collections.Dictionary<string, any>();\n    private groupAttributes: collections.Dictionary<string, any> = new collections.Dictionary<string, any>();\n\n    private map: collections.Dictionary<string, any> = new collections.Dictionary<string, any>();\n\n    constructor() {\n\n    }\n\n    public static Group(groupValues: collections.Dictionary<string, any>): Group {\n        var g: Group = new Group();\n        g.map = groupValues;\n        return g;\n    }\n\n    putGroupValue(concept: string, value: any) {\n        this.map.setValue(concept, value);\n    }\n\n    getGroupValue(concept: string): any {\n        return this.groupAttributes.getValue(concept);\n    }\n\n    processGroupValues(ds: interfaces.DataSet) {\n        this.groupAttributes = new collections.Dictionary<string, any>();\n        var keys: Array<string> = this.map.keys();\n        for (var i = 0; i < keys.length; i++) {\n            var s: string = keys[i];\n            if (ds.getColumnMapper().getColumnIndex(s) == -1 || ds.getColumnMapper().isAttachedToGroupString(s)) {\n                this.groupAttributes.setValue(s, this.map.getValue(s));\n                if (!ds.getColumnMapper().isAttachedToGroupString(s)) {\n                    ds.getColumnMapper().registerColumn(s, AttachmentLevel.GROUP);\n                }\n            } else {\n                this.groupKey.setValue(s, this.map.getValue(s));\n                collections.arrays.remove(keys, s);\n            }\n        }\n        this.map = null;\n    }\n\n    getGroupKey(): collections.Dictionary<string, any> {\n        return this.groupKey;\n    }\n    public matches(key: FullKey): boolean {\n        var keys: Array<string> = this.getGroupKey().keys();\n        for (var i = 0; i < keys.length; i++) {\n            var s: string = keys[i];\n            var gv: any = this.getGroupKey().getValue(s);\n            if (gv != null) {\n                if (!(key.getComponent(s) == gv)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    getGroupAttributes(): collections.Dictionary<string, any> {\n        return this.groupAttributes;\n    }\n    getGroupName(): string {\n        return this.groupName;\n    }\n\n    setGroupName(groupName: string) {\n        this.groupName = groupName;\n    }\n\n    setGroupValue(columnName: string, val: string) {\n        this.groupAttributes.setValue(columnName, val);\n    }\n}\nexport class FlatColumnMapper implements interfaces.ColumnMapper {\n\n    private columns: Array<string> = [];\n    private groupColumns: Array<string> = [];\n\n    registerColumn(s: string, attach: AttachmentLevel): number {\n        if (collections.arrays.contains(this.columns, s) || collections.arrays.contains(this.groupColumns, s)) {\n            throw new Error(\"Attempt to Register already registered Column!!\");\n        }\n        if (attach == AttachmentLevel.GROUP) {\n            this.groupColumns.push(s);\n            this.columns.push(s);\n            return this.columns.indexOf(s);\n        } else {\n            this.columns.push(s);\n            return this.columns.indexOf(s);\n        }\n    }\n\n    getColumnIndex(s: string): number {\n        return this.columns.indexOf(s);\n    }\n\n    getColumnName(i: number): string {\n        return this.columns[i];\n    }\n\n    size(): number {\n        return this.columns.length;\n    }\n\n    containsColumn(name: string): boolean {\n        for (var i: number = 0; i < this.columns.length; i++) {\n            if (this.columns[i] == name) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getAllColumns(): Array<string> {\n        var result: Array<string> = [];\n        for (var i: number = 0; i < this.columns.length; i++) {\n            result.push(this.columns[i]);\n        }\n        return result;\n    }\n\n    getObservationColumns(): Array<string> {\n        var result: Array<string> = [];\n        for (var i: number = 0; i < this.columns.length; i++) {\n            result.push(this.columns[i]);\n        }\n        return result;\n\n    }\n\n    getSeriesColumns(): Array<string> {\n        return [];\n    }\n\n    getDataSetColumns(): Array<string> {\n        return [];\n    }\n\n    getGroupColumns(): Array<string> {\n        return [];\n    }\n\n    isAttachedToDataSetString(s: string): boolean {\n        return false;\n    }\n\n    isAttachedToDataSetInt(i: number): boolean {\n        return false;\n    }\n\n    isAttachedToSeriesString(s: string): boolean {\n        return false;\n    }\n\n    isAttachedToSeriesInt(i: number): boolean {\n        return false;\n    }\n\n    isAttachedToObservationString(s: string): boolean {\n        return collections.arrays.contains(this.columns, s);\n    }\n\n    isAttachedToObservationInt(i: number): boolean {\n        return true;\n    }\n\n    isAttachedToGroupString(s: string): boolean {\n        return collections.arrays.contains(this.groupColumns, s);\n    }\n\n    isAttachedToGroupInt(i: number): boolean {\n        return this.isAttachedToGroupString(this.getColumnName(i));\n    }\n\n    dump() {\n        console.log(\"Column Mapper\");\n        for (var i: number = 0; i < this.size(); i++) {\n            console.log(i + \" = \" + this.getColumnName(i));\n        }\n\n    }\n}\n\nexport class FlatDataSet implements interfaces.DataSet {\n\n    private groups: Array<Group> = [];\n    private mapper: FlatColumnMapper = new FlatColumnMapper();\n    private observations: Array<FlatObs> = [];\n\n    private dimensionAtObservation: string = \"AllDimensions\";\n\n    public FlatDataSet() {\n    }\n\n    getColumnIndex(name: string): number {\n        return this.mapper.getColumnIndex(name);\n    }\n\n    getValue(row: number, col: number): string {\n        if (this.observations[row] == null) {\n            console.log(\"null obs!\");\n        }\n        return this.observations[row].getValue(col);\n    }\n\n    setValueStringCol(row: number, col: string, val: string) {\n        this.setValue(row, this.mapper.getColumnIndex(col), val);\n    }\n\n    setValue(row: number, col: number, val: string) {\n        this.observations[row].setValue(col, val);\n    }\n\n    addObservation(o: FlatObs) {\n        this.observations.push(o);\n    }\n\n    removeObservation(o: FlatObs) {\n        collections.arrays.remove(this.observations, o);\n    }\n\n    getObservations() {\n        return this.observations;\n    }\n    size(): number {\n        return this.observations.length;\n    }\n\n    getColumnMapper(): FlatColumnMapper {\n        return this.mapper;\n    }\n\n    dump() {\n        var s: string = \"\";\n        for (var i: number = 0; i < this.mapper.size(); i++) {\n            s += this.getColumnMapper().getColumnName(i);\n            s += \"\\t\";\n        }\n        console.log(s);\n        for (var i: number = 0; i < this.observations.length; i++) {\n            var o: FlatObs = this.getFlatObs(i);\n            var s: string = \"\";\n            for (var j: number = 0; j < this.mapper.size(); j++) {\n                s = s + o.getValue(j);\n                if (j < this.mapper.size()) s = s + \"\\t\";\n            }\n            console.log(s);\n        }\n    }\n    getFlatObs(i: number): FlatObs {\n        return this.observations[i];\n    }\n    registerColumn(s: string) {\n        var col: number = this.mapper.registerColumn(s, AttachmentLevel.OBSERVATION);\n        for (var i: number = 0; i < this.observations.length; i++) {\n            this.observations[i].setValue(col, null);\n        }\n        return col;\n    }\n\n    getColumnName(i: number): string {\n        return this.mapper.getColumnName(i);\n    }\n\n    getColumnSize(): number {\n        return this.mapper.size();\n    }\n\n    getGroups() {\n        return [];\n    }\n\n    groupSize(): number {\n        return 0;\n    }\n\n    applyGroupKey(key: PartialKey, column: string, value: string) {\n    }\n\n    setGroups(groups: Array<Group>) {\n    }\n\n    query(cube: Cube, order: Array<string>): Cube {\n        var time: number = new Date().getTime();\n        for (var i: number = 0; i < this.size(); i++) {\n            cube.putObservation(order, this.mapper, this.getFlatObs(i));\n        }\n        return cube;\n    }\n\n    find(key: FullKey): FlatObs {\n        var found: boolean = true;\n        for (var i: number = 0; i < this.size(); i++) {\n            var obs: FlatObs = this.getFlatObs(i);\n            found = true;\n            for (var j: number = 0; j < this.mapper.size() && !found; j++) {\n                if (!(key.getComponent(this.mapper.getColumnName(j)) == obs.getValue(j))) {\n                    found = false;\n                }\n            }\n            if (found) {\n                return obs;\n            }\n        }\n        return null;\n    }\n    getDimensionAtObservation(reg: interfaces.LocalRegistry, dsref: commonreferences.Reference) {\n        return \"AllDimensions\";\n    }\n\n    setDimensionAtObservationString(s: string) {\n        this.dimensionAtObservation = s;\n    }\n\n    getDimensionAtObservationString(): string {\n        return this.dimensionAtObservation;\n    }\n}\nexport class FlatDataSetWriter implements interfaces.DataSetWriter {\n\n    private mapper: FlatColumnMapper = new FlatColumnMapper();\n    private dataSet: FlatDataSet = null;\n    private dataSetValues: Array<string> = null;\n    private seriesValues: Array<string> = null;\n    private obsValues: Array<string> = null;\n    private groups: Array<Group> = null;\n\n    constructor() {\n    }\n\n    newDataSet() {\n        this.dataSet = new FlatDataSet();\n        this.dataSetValues = [];\n        this.mapper = this.dataSet.getColumnMapper();\n    }\n\n    newSeries() {\n        this.seriesValues = [];\n        for (var i: number = 0; i < this.dataSetValues.length; i++) {\n            this.seriesValues.push(this.dataSetValues[i]);\n        }\n    }\n\n    newObservation() {\n        this.obsValues = [];\n        if (this.seriesValues != null) {\n            for (var i: number = 0; i < this.seriesValues.length; i++) {\n                this.obsValues.push(this.seriesValues[i]);\n            }\n        }\n    }\n\n    writeDataSetComponent(name: string, val: string) {\n        if (!this.dataSet.getColumnMapper().containsColumn(name)) {\n            this.dataSet.registerColumn(name);\n        }\n        this.dataSetValues.push(val);\n    }\n\n    writeSeriesComponent(name: string, val: string) {\n        if (!this.dataSet.getColumnMapper().containsColumn(name)) {\n            this.dataSet.registerColumn(name);\n        }\n        this.seriesValues.push(val);\n    }\n\n    writeObservationComponent(name: string, val: string) {\n        if (!this.dataSet.getColumnMapper().containsColumn(name)) {\n            this.dataSet.registerColumn(name);\n        }\n        if (this.obsValues.length <= this.dataSet.getColumnMapper().getColumnIndex(name)) {\n            for (var j: number = this.obsValues.length; (j - 1) < this.dataSet.getColumnIndex(name); j++) {\n                this.obsValues.push(null);\n            }\n        }\n        this.obsValues[this.dataSet.getColumnIndex(name)] = val;\n    }\n\n    finishSeries() {\n\n    }\n\n    finishObservation() {\n        this.dataSet.addObservation(new FlatObs(this.obsValues));\n    }\n\n    finishDataSet(): FlatDataSet {\n        var ds: FlatDataSet = this.dataSet;\n        ds.setGroups(this.groups);\n        this.dataSet = null;\n        return ds;\n    }\n\n    getColumnMapper(): FlatColumnMapper {\n        return this.mapper;\n    }\n\n    writeGroupValues(name: string, groupValues: collections.Dictionary<string, any>) {\n        var group: Group = Group.Group(groupValues);\n        group.setGroupName(name);\n        if (this.groups == null) {\n            this.groups = [];\n        }\n        this.groups.push(group);\n    }\n}\nexport class StructuredDataMessage {\n\n    private dataMessage: message.DataMessage = null;\n    private registry: interfaces.LocalRegistry = null;\n    private dataflow: structure.Dataflow = null;\n\n    private list: Array<StructuredDataSet> = [];\n\n    constructor(dm: message.DataMessage, reg: interfaces.LocalRegistry) {\n        this.dataMessage = dm;\n        this.registry = reg;\n        for (var i: number = 0; i < this.dataMessage.size(); i++) {\n            this.list.push(this.buildStructuredDataSet(i));\n        }\n    }\n\n    public size(): number {\n        return this.getDataMessage().size();\n    }\n\n    public getStructuredDataSet(i: number): StructuredDataSet {\n        return this.list[i];\n    }\n\n    public buildStructuredDataSet(i: number): StructuredDataSet {\n        //dataMessage.getHeader().getStructures().get(0).getStructure().dump();\n        //NestedNCNameID agency = dataMessage.getHeader().getStructures().get(0).getStructure().getAgencyId();\n        //IDType id = dataMessage.getHeader().getStructures().get(0).getStructure().getMaintainableParentId();\n        //Version vers = dataMessage.getHeader().getStructures().get(0).getStructure().getMaintainedParentVersion();\n        //System.out.println(\"Ref=\"+agency+\":\"+id+\":\"+vers);\n        var structure: structure.DataStructure = this.getRegistry().findDataStructure(this.getDataMessage().getHeader().getStructures()[0].getStructure());\n        //System.out.println(\"Structure=\"+structure);\n        if (this.dataflow == null) {\n            this.setDataflow(structure.asDataflow());\n        }\n        return new StructuredDataSet(this.getDataMessage().getDataSet(i), this.getRegistry(), structure);\n    }\n\n    /**\n     * @return the dataMessage\n     */\n    public getDataMessage(): message.DataMessage {\n        return this.dataMessage;\n    }\n\n    /**\n     * @return the registry\n     */\n    public getRegistry(): interfaces.LocalRegistry {\n        return this.registry;\n    }\n\n    /**\n     * @return the dataflow\n     */\n    public getDataflow(): structure.Dataflow {\n        return this.dataflow;\n    }\n\n    /**\n     * @param dataflow the dataflow to set\n     */\n    public setDataflow(dataflow: structure.Dataflow) {\n        this.dataflow = dataflow;\n    }\n}\nexport class StructuredDataSet {\n    private dataSet: interfaces.DataSet = null;\n    private registry: interfaces.LocalRegistry = null;\n    private structure: structure.DataStructure = null;\n\n    constructor(ds: interfaces.DataSet, reg: interfaces.LocalRegistry, struct: structure.DataStructure) {\n        this.dataSet = ds;\n        this.registry = reg;\n        this.structure = struct;\n    }\n\n    public getStructuredValue(row: number, column: number): StructuredValue {\n        return new StructuredValue(this.getDataSet().getColumnName(column), this.getDataSet().getValue(row, column), this.registry, this.getStructure());\n    }\n\n    public getColumnName(i: number): string {\n        var conceptString: string = this.getDataSet().getColumnName(i);\n        //System.out.println(\"Concept=\"+conceptString);\n        //System.out.println(\"ds=\"+getStructure());\n        var c: structure.Component = this.getStructure().findComponentString(conceptString);\n        if (c == null && conceptString == \"type\") {\n            // \"type\" represents sdmx 2.0 cross sectional document \n            c = this.getStructure().getDataStructureComponents().getDimensionList().getMeasureDimension();\n        }\n        if (c == null) {\n            console.log(\"Component is null conceptRef:\" + conceptString);\n            return conceptString;\n        }\n        var conceptRef = c.getConceptIdentity();\n        var concept: structure.ConceptType = null;\n        if (conceptRef != null) {\n            concept = this.registry.findConcept(conceptRef);\n            return structure.NameableType.toString(concept);\n        } else {\n            return conceptString;\n        }\n    }\n\n    public size(): number {\n        return this.getDataSet().size();\n    }\n\n    public getColumnCount(): number {\n        return this.getDataSet().getColumnSize();\n    }\n\n    /**\n     * @return the dataSet\n     */\n    public getDataSet(): interfaces.DataSet {\n        return this.dataSet;\n    }\n\n    /**\n     * @return the structure\n     */\n    public getStructure(): structure.DataStructure {\n        return this.structure;\n    }\n    public getColumnIndexes(): Array<number> {\n        var result = [];\n        for (var i: number = 0; i < this.getColumnCount(); i++) {\n            result.push(i);\n        }\n        return result;\n    }\n    getPivotUIData(): Array<Array<string>> {\n        var data = [];\n        var cols = [];\n        for (var i = 0; i < this.getColumnCount(); i++) {\n            if (!this.structure.isAttribute(this.dataSet.getColumnName(i))) {\n                cols.push(this.getColumnName(i));\n            }\n        }\n        data.push(cols);\n        for (var i = 0; i < this.size(); i++) {\n            var row = [];\n            for (var j = 0; j < this.getColumnCount(); j++) {\n                var sv: StructuredValue = this.getStructuredValue(i, j);\n                var dimension = false;\n                for (var k = 0; k < this.structure.getDataStructureComponents().getDimensionList().getDimensions().length; k++) {\n                    if (this.structure.getDataStructureComponents().getDimensionList().getDimensions()[k].getId().toString() == sv.getConcept().getId().toString()) {\n                        if (sv.getCodelist() != null) {\n                            row.push(structure.NameableType.toString(sv.getCode()))\n                        }\n                    }\n                }\n                if (this.structure.isTimeDimension(this.dataSet.getColumnName(j))) {\n                    row.push(sv.getCode().getId().toString());\n\n                }\n                if (this.structure.getDataStructureComponents().getMeasureList().getPrimaryMeasure().getId().toString() == sv.getConcept().getId().toString()) {\n                    row.push(parseFloat(sv.getValue()));\n                }\n            }\n            data.push(row);\n            row = [];\n        }\n        return data;\n    }\n}\nexport class StructuredValue {\n    public getRepresentation(reg: interfaces.LocalRegistry, c: structure.Component): structure.RepresentationType {\n        var rep: structure.RepresentationType = c.getLocalRepresentation();\n        if (rep == null) {\n            var concept: structure.ConceptType = reg.findConcept(c.getConceptIdentity());\n            //return concept.getCoreRepresentation();\n        }\n        return c.getLocalRepresentation();\n    }\n    public getLocalRepresentation(c: structure.Component): structure.RepresentationType {\n        if (c == null) return null;\n        return c.getLocalRepresentation();\n    }\n    private concept: string = null;\n    private value: string = null;\n    private registry: interfaces.LocalRegistry = null;\n    private structure: structure.DataStructure = null;\n\n    public constructor(concept: string, value: string, registry: interfaces.LocalRegistry, struct: structure.DataStructure) {\n        this.concept = concept;\n        this.value = value;\n        this.registry = registry;\n        this.structure = struct;\n    }\n\n    public isCoded(): boolean {\n        var comp: structure.Component = this.structure.findComponentString(this.concept);\n        if (\"type\" == this.concept) {\n            comp = this.structure.getDataStructureComponents().getDimensionList().getMeasureDimension();\n        }\n        if (comp == null) {\n            console.log(\"Comp is NUll!\" + this.concept);\n            return false;\n        }\n        var localRep: structure.RepresentationType = this.getRepresentation(this.registry, comp);\n        if (localRep.getEnumeration() != null) {\n            return true;\n        }\n        else return false;\n    }\n\n    public getCode(): structure.ItemType {\n        //System.out.println(\"Concept:\"+ concept+\" Value:\" + value);\n        //Locale loc = Locale.getDefault();\n        //ItemType item = ValueTypeResolver.resolveCode(registry, structure, concept, value);\n        //System.out.println(\"Item=\" + item.toString());\n        //System.out.println(\"Item=\" + item.findName(loc.getLanguage()));\n        return ValueTypeResolver.resolveCode(this.registry, this.structure, this.concept, this.getValue());\n    }\n\n    public getCodelist(): structure.ItemSchemeType {\n        return ValueTypeResolver.getPossibleCodes(this.registry, this.structure, this.concept);\n    }\n\n    public toString(): string {\n        if (this.isCoded()) {\n            var code: structure.ItemType = this.getCode();\n            if (code == null) {\n                return this.getValue();\n            }\n            return structure.NameableType.toString(code);\n        }\n        return this.getValue();\n    }\n\n    /**\n     * @return the concept\n     */\n    public getConcept(): structure.ConceptType {\n        return this.registry.findConcept(this.structure.findComponentString(this.concept).getConceptIdentity());\n    }\n\n    /**\n     * @return the value\n     */\n    public getValue(): string {\n        return this.value;\n    }\n}\nexport class ValueTypeResolver {\n\n    public static resolveCode(registry: interfaces.LocalRegistry, struct: structure.DataStructure, column: string, value: string): structure.ItemType {\n        if (value == null) {\n            return null;\n        }\n        var dim: structure.Component = struct.findComponentString(column);\n        // Cross Sectional Measures somtimes come in a a 'type' column..\n        // see SDMX 2.0 example cross sectional file\n        if (\"type\" == column) {\n            dim = struct.getDataStructureComponents().getDimensionList().getMeasureDimension();\n        }\n        if (dim == null) {\n            var itm: structure.CodeType = new structure.CodeType();\n            var name: common.Name = new common.Name(sdmx.SdmxIO.getLocale(), value);\n            var names: Array<common.Name> = [name];\n            itm.setNames(names);\n            return itm;\n        }\n        var conceptRef = dim.getConceptIdentity();\n        var rep: structure.RepresentationType = null;\n        var concept: structure.ConceptType = null;\n        if (conceptRef != null) {\n            concept = registry.findConcept(conceptRef);\n            if (concept == null) {\n                console.log(\"Cant find concept:\" + dim.getConceptIdentity().getId());\n                console.log(conceptRef.getAgencyId() + \":\" + conceptRef.getMaintainableParentId() + \":\" + conceptRef.getId() + \":\" + conceptRef.getVersion());\n                var ct: structure.CodeType = new structure.CodeType();\n                ct.setId(new commonreferences.ID(value));\n                var name: common.Name = new common.Name(\"en\", value);\n                ct.setNames([name]);\n                return ct;\n            }\n            rep = dim.getLocalRepresentation();\n        }\n        if (rep != null) {\n            if (rep.getEnumeration() != null) {\n                if (rep.getEnumeration().getRefClass().toInt() == commonreferences.ObjectTypeCodelistType.CODELIST.toInt()) {\n                    var codelist: structure.Codelist = registry.findCodelist(rep.getEnumeration());\n                    var id: commonreferences.ID = null;\n                    try {\n                        id = new commonreferences.ID(value);\n                    } catch (err) {\n                        // Ignore\n                    }\n                    if (codelist == null) {\n                        throw new Error(\"Codelist is null Representation=\" + rep.getEnumeration().toString());\n                    }\n                    var ct: structure.CodeType = null;\n                    if (id != null) {\n                        ct = codelist.findItemId(id);\n                    }\n                    if (ct == null) {\n                        var ct2: structure.CodeType = new structure.CodeType();\n                        ct2.setId(id);\n                        var name: common.Name = new common.Name(\"en\", \"Missing Code:\" + value);\n                        var names: Array<common.Name> = [];\n                        names.push(name);\n                        ct2.setNames(names);\n                        return ct2;\n                    } else {\n                        return ct;\n                    }\n                } else {\n                    var cs: structure.ConceptSchemeType = registry.findConceptScheme(rep.getEnumeration());\n                    var conceptMeasure: structure.ConceptType = null;\n                    for (var i: number = 0; i < cs.size() && conceptMeasure == null; i++) {\n                        var tempConcept: structure.ConceptType = cs.getItem(i);\n                        if (tempConcept.getId() != null && tempConcept.getId().toString() == value) {\n                            conceptMeasure = cs.getItem(i);\n                        } else if (tempConcept.getId().toString() == value) {\n                            conceptMeasure = tempConcept;\n                        }\n                    }\n                    if (conceptMeasure != null) {\n                        //System.out.println(\"ConceptMeasure:\"+conceptMeasure);\n                        return conceptMeasure;\n\n                    }\n                    return null;\n                }\n            }\n            else {\n                var itm: structure.CodeType = new structure.CodeType();\n                var name: common.Name = new common.Name(sdmx.SdmxIO.getLocale(), value);\n                var names: Array<common.Name> = [name];\n                itm.setNames(names);\n                return itm;\n            }\n        }\n        var itm: structure.CodeType = new structure.CodeType();\n        var name: common.Name = new common.Name(sdmx.SdmxIO.getLocale(), value);\n        var names: Array<common.Name> = [name];\n        itm.setNames(names);\n        return itm;\n    }\n\n    public static getPossibleCodes(registry: interfaces.LocalRegistry, struct: structure.DataStructure, column: string): structure.ItemSchemeType {\n        var dim: structure.Component = struct.findComponentString(column);\n        if (dim == null || \"type\" == column) {\n            dim = struct.getDataStructureComponents().getDimensionList().getMeasureDimension();\n        }\n        var conceptRef = dim.getConceptIdentity();\n        var rep: structure.RepresentationType = null;\n        var concept: structure.ConceptType = null;\n        if (conceptRef != null) {\n            concept = registry.findConcept(conceptRef);\n            rep = dim.getLocalRepresentation();\n        }\n        if (rep != null) {\n            if (rep.getEnumeration() != null) {\n                if (rep.getEnumeration().getRefClass().toInt() == commonreferences.ObjectTypeCodelistType.CODELIST.toInt()) {\n                    var codelist: structure.Codelist = registry.findCodelist(rep.getEnumeration());\n                    return codelist;\n                } else {\n                    var cs: structure.ConceptSchemeType = registry.findConceptScheme(rep.getEnumeration());\n                    return cs;\n                }\n            }\n        }\n        return null;\n    }\n}\n\nexport class Cube {\n\n    private size: number = 0;\n    private order: Array<string> = [];\n    private struct: structure.DataStructure = null;\n    private reg: interfaces.LocalRegistry = null;\n    private mapper: FlatColumnMapper = new FlatColumnMapper();\n\n    private validCodes: collections.Dictionary<string, Array<string>> = new collections.Dictionary<string, Array<string>>();\n\n    constructor(struct: structure.DataStructure, reg: interfaces.LocalRegistry) {\n        this.struct = struct;\n        this.reg = reg;\n    }\n\n    public getStructure(): structure.DataStructure {\n        return this.struct;\n    }\n\n    public getStructureReference(): commonreferences.Reference {\n        return this.struct.asReference();\n    }\n\n    private root: RootCubeDimension = new RootCubeDimension();\n\n    public getRootCubeDimension(): RootCubeDimension {\n        return this.root;\n    }\n\n    public putObservation(order: Array<string>, mapper: interfaces.ColumnMapper, obs: FlatObs) {\n        var dim: CubeDimension = this.getRootCubeDimension();\n        this.order = order;\n        var time: TimeCubeDimension = null;\n        var cubeobs: CubeObservation = null;\n        for (var i: number = 0; i < this.struct.getDataStructureComponents().getDimensionList().getDimensions().length; i++) {\n            //if( struct.getDataStructureComponents().getDimensionList().getDimension(i).)\n            // This line goes through the components in their datastructure order\n            //IDType dimId = struct.getDataStructureComponents().getDimensionList().getDimension(i).getId();\n            // This line goes through the components in their specified order\n            var dimId: commonreferences.ID = null;\n            if (order != null) {\n                dimId = new commonreferences.ID(order[i]);\n            } else {\n                dimId = this.struct.getDataStructureComponents().getDimensionList().getDimensions()[i].getId();\n            }\n            if (this.validCodes[dimId.toString()] == null) {\n                this.validCodes[dimId.toString()] = [];\n                this.mapper.registerColumn(dimId.toString(), AttachmentLevel.OBSERVATION);\n            }\n            /*\n                If the data you are trying to make a cube from does not have a complete key\n                with values for all dimensions, mapper.getColumnIndex(dimId.toString()) returns -1\n                here (because there is no dimension of that name in the FlatObservation)\n                this filters down into FlatObservation.getValue(-1) which causes an array index\n                out of bounds exception!\n             */\n            var myDim: CubeDimension = dim.getSubCubeDimension(obs.getValue(mapper.getColumnIndex(dimId.toString())));\n            if (myDim == null) {\n                myDim = new ListCubeDimension(dimId.toString(), obs.getValue(mapper.getColumnIndex(dimId.toString())));\n                dim.putSubDimension(myDim);\n                if (!collections.arrays.contains(this.validCodes[dimId.toString()], myDim.getValue())) {\n                    this.validCodes[dimId.toString()].push(myDim.getValue());\n                }\n            }\n            dim = myDim;\n        }\n        var myDim: CubeDimension = null;\n        var dimId: commonreferences.ID = this.struct.getDataStructureComponents().getDimensionList().getTimeDimension().getId();\n        if (this.validCodes[dimId.toString()] == null) {\n            this.validCodes[dimId.toString()] = [];\n        }\n        var i: number = this.mapper.getColumnIndex(dimId.toString());\n        var s: string = obs.getValue(i);\n        myDim = dim.getSubCubeDimension(obs.getValue(mapper.getColumnIndex(dimId.toString())));\n        if (myDim == null) {\n            myDim = new TimeCubeDimension(dimId.toString(), obs.getValue(mapper.getColumnIndex(dimId.toString())));\n            dim.putSubDimension(myDim);\n            if (!collections.arrays.contains(this.validCodes[dimId.toString()], myDim.getValue())) {\n                this.validCodes[dimId.toString()].push(myDim.getValue());\n            }\n        }\n        time = <TimeCubeDimension>myDim;\n        var cross: string = null;\n        var dimId2: commonreferences.ID = null;\n        if (this.struct.getDataStructureComponents().getDimensionList().getMeasureDimension() != null) {\n            dimId2 = this.struct.getDataStructureComponents().getDimensionList().getMeasureDimension().getId();\n            if (this.validCodes[dimId2.toString()] == null) {\n                this.validCodes[dimId2.toString()] = [];\n            }\n            cross = obs.getValue(mapper.getColumnIndex(dimId2.toString()));\n            if (!collections.arrays.contains(this.validCodes[dimId2.toString()], cross)) {\n                this.validCodes[dimId2.toString()].push(cross);\n            }\n\n        }\n        var dimId3: commonreferences.ID = this.struct.getDataStructureComponents().getMeasureList().getPrimaryMeasure().getId();\n        if (dimId2 != null) {\n            cubeobs = new CubeObservation(dimId2.toString(), cross, dimId3.toString(), obs.getValue(mapper.getColumnIndex(dimId3.toString())));\n        } else {\n            cubeobs = new CubeObservation(null, null, dimId3.toString(), obs.getValue(mapper.getColumnIndex(dimId3.toString())));\n        }\n\n        time.putObservation(cubeobs);\n\n        for (var k: number = 0; k < this.struct.getDataStructureComponents().getAttributeList().getAttributes().length; k++) {\n            var name: string = this.struct.getDataStructureComponents().getAttributeList().getAttributes()[i].getId().toString();\n            var value: string = null;\n            if (mapper.getColumnIndex(name) != -1) {\n                value = obs.getValue(mapper.getColumnIndex(name));\n                cubeobs.putAttribute(new CubeAttribute(name, value));\n            }\n        }\n        // Increment Size counter\n        this.size++;\n    }\n    public getColumnMapper(): interfaces.ColumnMapper {\n        return this.mapper;\n    }\n    public find(key: FullKey): CubeObs {\n        return this.findLatest(key, false);\n    }\n\n    public findLatest(key: FullKey, latest: boolean): CubeObs {\n        var dim: CubeDimension = this.getRootCubeDimension();\n        var oldDim: CubeDimension = dim;\n        for (var i: number = 0; i < this.struct.getDataStructureComponents().getDimensionList().getDimensions().length; i++) {\n            dim = dim.getSubCubeDimension(key.getComponent(dim.getSubDimension()));\n            if (dim == null) {\n                //System.out.println(\"Can't find dim:\"+key.getComponent(order.get(i))+\":\"+oldDim.getSubDimension());\n                return null;\n            }\n            oldDim = dim;\n        }\n        var time: structure.TimeDimension = this.struct.getDataStructureComponents().getDimensionList().getTimeDimension();\n        if (time == null) {\n            throw new Error(\"Time Dimension Is Null\");\n        } else if (latest) {\n            var timesList: Array<string> = dim.listDimensionValues();\n            for (var i: number = 0; i < timesList.length; i++) {\n                for (var j: number = 0; j < timesList.length - i; j++) {\n                    var t1 = timepack.TimeUtil.parseTime(timesList[i], null);\n                    var t2 = timepack.TimeUtil.parseTime(timesList[j], null);\n                    if (t1.getStart() > t2.getStart()) {\n                        collections.arrays.swap(timesList, i, j);\n                    }\n                }\n            }\n            var timeValue: string = timesList[timesList.length - 1];\n            var tcd: TimeCubeDimension = <TimeCubeDimension>dim.getSubCubeDimension(timeValue);\n            if (tcd == null) {\n                //System.out.println(\"TCD null:\"+key.getComponent(time.getId().toString()+\":\"+timeValue));\n                //dim.dump();\n                return null;\n            }\n            if (this.struct.getDataStructureComponents().getDimensionList().getMeasureDimension() != null) {\n                var measure: string = key.getComponent(this.struct.getDataStructureComponents().getDimensionList().getMeasureDimension().getId().toString());\n                //tcd.dump();\n                //System.out.println(\"Measure=\"+measure);\n                return tcd.getObservation(measure).toCubeObs(key, this.mapper);\n            } else {\n                var co: CubeObservation = tcd.getObservation(null);\n                return co.toCubeObs(key, this.mapper);;\n            }\n        } else {\n            var timeValue: string = key.getComponent(time.getId().toString());\n            var tcd: TimeCubeDimension = <TimeCubeDimension>dim.getSubCubeDimension(timeValue);\n            if (tcd == null) {\n                //System.out.println(\"TCD null:\"+key.getComponent(time.getId().toString()+\":\"+timeValue));\n                //dim.dump();\n                return null;\n            }\n            if (this.struct.getDataStructureComponents().getDimensionList().getMeasureDimension() != null) {\n                var measure: string = key.getComponent(this.struct.getDataStructureComponents().getDimensionList().getMeasureDimension().getId().toString());\n                //tcd.dump();\n                //System.out.println(\"Measure=\"+measure);\n                return tcd.getObservation(measure).toCubeObs(key, this.mapper);\n            } else {\n                var co: CubeObservation = tcd.getObservation(null);\n                return co.toCubeObs(key, this.mapper);\n            }\n        }\n    }\n\n    public getValues(col: string): Array<string> {\n        var list = this.validCodes[col];\n        if (list == null) {\n            return [];\n        }\n        return list;\n    }\n\n    /**\n     * @return the size\n     */\n    public getSize(): number {\n        return this.size;\n    }\n\n    public getObservationCount(): number {\n        return this.size;\n    }\n\n    public getAllItems(col: string): Array<structure.ItemType> {\n        var com: structure.Component = this.getStructure().findComponentString(col);\n        return this.reg.findItemType(com.getLocalRepresentation().getEnumeration()).getItems();\n    }\n\n    public getAllValues(col: string): Array<string> {\n        var items = this.getAllItems(col);\n        var result = [];\n        for (var i: number = 0; i < items.length; i++) {\n            result.push(items[i].getId().toString());\n        }\n        return result;\n    }\n    public getSparsity(): number {\n        return (this.getObservationCount() / this.getCellCount()) * 100;\n    }\n    public getItems(col: string): Array<structure.ItemType> {\n        var com: structure.Component = this.getStructure().findComponentString(col);\n        var result = [];\n        var items = this.reg.findItemType(com.getLocalRepresentation().getEnumeration()).getItems();\n        var codes = this.getValues(col);\n        for (var i: number = 0; i < items.length; i++) {\n            for (var j: number = 0; j < codes.length; j++) {\n                if (codes[j] == items[i].getId().getString()) {\n                    result.push(items[i]);\n                }\n            }\n        }\n        return result;\n    }\n    public getCellCount(): number {\n        var c: number = this.getValues(this.mapper.getColumnName(0)).length;\n        for (var i: number = 1; i < this.mapper.size(); i++) {\n            c *= this.getValues(this.mapper.getColumnName(i)).length;\n        }\n        return c;\n    }\n}\n\nexport class CubeDimension {\n\n    private concept: string = null;\n    private value: string = null;\n\n    private subDimension: string = null;\n\n    constructor(concept: string, value: string) {\n        this.concept = concept;\n        this.value = value;\n    }\n    \n    /**\n     * @return the concept\n     */\n    public getConcept(): string {\n        return this.concept;\n    }\n\n    /**\n     * @param concept the concept to set\n     */\n    public setConcept(concept: string) {\n        this.concept = concept;\n    }\n\n    public getSubCubeDimension(id: string): CubeDimension { return null; }\n\n    public putSubDimension(sub: CubeDimension) { }\n\n    public listSubDimensions(): Array<CubeDimension> { return []; }\n    public listDimensionValues(): Array<string> { return []; }\n\n    /**\n     * @return the value\n     */\n    public getValue(): string {\n        return this.value;\n    }\n\n    /**\n     * @param value the value to set\n     */\n    public setValue(value: string) {\n        this.value = value;\n    }\n    public dump() {\n    }\n\n    /**\n     * @return the subDimension\n     */\n    public getSubDimension(): string {\n        return this.subDimension;\n    }\n\n    /**\n     * @param subDimension the subDimension to set\n     */\n    public setSubDimension(subDimension: string) {\n        this.subDimension = subDimension;\n    }\n}\n\nexport class RootCubeDimension extends CubeDimension {\n    constructor() {\n        super(null, null);\n    }\n}\n\nexport class ListCubeDimension extends CubeDimension {\n    private list: Array<CubeDimension> = [];\n    constructor(concept: string, value: string) {\n        super(concept, value);\n        if (concept == null) {\n            console.log(\"concept is null:ListCubeDimension\");\n        }\n    }\n\n    public getSubCubeDimension(id: string): CubeDimension {\n        for (var i: number = 0; i < this.list.length; i++) {\n            var cd: CubeDimension = this.list[i];\n            if (cd.getValue() == id) { return cd; }\n        }\n        return null;\n    }\n\n    public putSubCubeDimension(sub: CubeDimension) {\n        var old: CubeDimension = this.getSubCubeDimension(sub.getValue());\n        if (old != null) {\n            this.list.splice(this.list.indexOf(old), 1);\n        }\n        this.list.push(sub);\n        this.setSubDimension(sub.getConcept());\n    }\n\n    public listSubDimensions(): Array<CubeDimension> {\n        return this.list;\n    }\n\n    public listDimensionValues(): Array<string> {\n        var set: Array<string> = [];\n        for (var i: number = 0; i < this.list.length; i++) {\n            set.push(this.list[i].getValue());\n        }\n        return set;\n    }\n}\n\nexport class TimeCubeDimension extends CubeDimension {\n\n    private obs: Array<CubeObservation> = [];\n\n    constructor(concept: string, value: string) {\n        super(concept, value);\n    }\n\n    public listObservations(): Array<CubeObservation> {\n        return this.obs;\n    }\n\n    public putObservation(sub: CubeObservation) {\n        this.obs.push(sub);\n    }\n\n    public getObservation(id: string): CubeObservation {\n        for (var i: number = 0; i < this.obs.length; i++) {\n            var c: CubeObservation = this.obs[i];\n            if (c.getCrossSection() == null) { return c; }\n            if (c.getCrossSection() == id) { return c; }\n        }\n        return null;\n    }\n\n    public listObservationValues(): Array<string> {\n        // TO DO\n        return [];\n    }\n\n    public listSubDimensions(): Array<CubeDimension> {\n        return [];\n    }\n\n    public listDimensionValues(): Array<string> {\n        return [];\n    }\n}\n\nexport class CubeObservation {\n    private map: collections.Dictionary<string, CubeAttribute> = new collections.Dictionary<string, CubeAttribute>();\n\n    private concept: string = null;\n    private cross: string = null;\n    private observationConcept: string = null;\n    private value: string = null;\n\n    constructor(crossSectionalMeasureConcept: string, crossSection: string, primaryMeasureConcept: string, value: string) {\n        this.concept = crossSectionalMeasureConcept;\n        this.cross = crossSection;\n        this.observationConcept = primaryMeasureConcept\n        this.value = value;\n    }\n\n    public getAttribute(id: string): CubeAttribute {\n        return this.map.getValue(id);\n    }\n\n    public putAttribute(sub: CubeAttribute) {\n        this.map.setValue(sub.getConcept(), sub);\n    }\n\n    public listAttributes(): Array<CubeAttribute> {\n        return this.map.values();\n    }\n\n    public listAttributeNames(): Array<string> {\n        return this.map.keys();\n    }\n\n    /**\n     * @return the concept\n     */\n    public getCrossSection(): string {\n        return this.cross;\n    }\n\n    /**\n     * @param concept the concept to set\n     */\n    public setCrossSection(concept: string) {\n        this.cross = concept;\n    }\n\n    /**\n     * @return the value\n     */\n    public getValue(): string {\n        return this.value;\n    }\n\n    /**\n     * @param value the value to set\n     */\n    public setValue(value: string) {\n        this.value = value;\n    }\n\n    /**\n     * @return the concept\n     */\n    public getConcept(): string {\n        return this.concept;\n    }\n\n    /**\n     * @param concept the concept to set\n     */\n    public setConcept(concept: string) {\n        this.concept = concept;\n    }\n\n    /**\n     * @return the observationConcept\n     */\n    public getObservationConcept(): string {\n        return this.observationConcept;\n    }\n\n    /**\n     * @param observationConcept the observationConcept to set\n     */\n    public setObservationConcept(observationConcept: string) {\n        this.observationConcept = observationConcept;\n    }\n\n    public toCubeObs(key: FullKey, mapper: interfaces.ColumnMapper): CubeObs {\n        var f: CubeObs = new CubeObs();\n        for (var i: number = 0; i < mapper.size(); i++) {\n            var s: string = mapper.getColumnName(i);\n            var v: string = key.getComponent(s);\n            f.addValue(s, v);\n        }\n        // Cross Sectional Data\n        if (this.concept != null) { f.addValue(this.concept, this.cross); }\n        f.addValue(this.observationConcept, this.value);\n        for (var i: number = 0; i < this.map.keys().length; i++) {\n            var s: string = this.map.keys()[i];\n            var v2: CubeAttribute = this.map.getValue(s);\n            f.addValue(s, v2.getValue());\n        }\n        return f;\n    }\n}\n\nexport class CubeAttribute {\n    constructor(concept: string, value: string) {\n\n    }\n    public getConcept(): string {\n        return \"\";\n    }\n    public getValue(): string {\n        return \"\";\n    }\n}\n\nexport class CubeObs {\n    public addValue(c: string, v: string) {\n\n    }\n}\n\n"]}