{"version":3,"sources":["sdmx/message.ts"],"names":[],"mappings":"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","file":"message.js","sourcesContent":["/*\r\n    This file is part of sdmx-js.\r\n\r\n    sdmx-js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    sdmx-js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\r\n    Copyright (C) 2016 James Gardner\r\n*/\r\n/// <amd-module name='sdmx/message'/>\r\n///<reference path=\"../collections.ts\"/>\r\nimport interfaces = require(\"sdmx/interfaces\");\r\nimport structure = require(\"sdmx/structure\");\r\nimport commonreferences = require(\"sdmx/commonreferences\");\r\nimport xml = require(\"sdmx/xml\");\r\nimport common = require(\"sdmx/common\");\r\nimport data = require(\"sdmx/data\");\r\nexport class DataMessage {\r\n    private header: Header = null;\r\n    private dataSets: Array<data.FlatDataSet> = [];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    getHeader() { return this.header; }\r\n    setHeader(h: Header) { this.header = h; }\r\n    getDataSet(i: number): data.FlatDataSet { return this.dataSets[i]; }\r\n    setDataSet(i: number, ds: data.FlatDataSet) { this.dataSets[i] = ds; }\r\n    addDataSet(ds: data.FlatDataSet): number {\r\n        this.dataSets.push(ds);\r\n        return collections.arrays.indexOf(this.dataSets, ds);\r\n    }\r\n    removeDataSet(ds: data.FlatDataSet) {\r\n        collections.arrays.remove(this.dataSets, ds);\r\n    }\r\n    size():number {\r\n        return this.dataSets.length;\r\n    }\r\n}\r\n\r\nexport class DataQuery {\r\n\r\n}\r\nexport class StructureType implements interfaces.LocalRegistry {\r\n    private header: Header = null;\r\n    private structures: structure.Structures = null;\r\n\r\n    constructor() {\r\n\r\n    }\r\n    getHeader() { return this.header; }\r\n    setHeader(h: Header) { this.header = h; }\r\n    getStructures() {\r\n        return this.structures;\r\n    }\r\n    setStructures(s: structure.Structures) {\r\n        this.structures = s;\r\n    }\r\n    // Registry\r\n    listDataflows(): Array<structure.Dataflow> {\r\n        return this.structures.listDataflows();\r\n    }\r\n    clear(): void {\r\n\r\n    }\r\n    load(struct: StructureType): void {\r\n\r\n    }\r\n    unload(struct: StructureType): void {\r\n\r\n    }\r\n    findDataStructure(ref: commonreferences.Reference): structure.DataStructure {\r\n        return this.structures.findDataStructure(ref);\r\n    }\r\n    findDataflow(ref: commonreferences.Reference): structure.Dataflow {\r\n        return this.structures.findDataflow(ref);\r\n    }\r\n    findCode(ref: commonreferences.Reference): structure.CodeType {\r\n        return this.structures.findCode(ref);\r\n    }\r\n    findCodelist(ref: commonreferences.Reference): structure.Codelist {\r\n        return this.structures.findCodelist(ref);\r\n    }\r\n    findItemType(item: commonreferences.Reference): structure.ItemType {\r\n        return this.structures.findItemType(item);\r\n    }\r\n    findConcept(ref: commonreferences.Reference): structure.ConceptType {\r\n        return this.structures.findConcept(ref);\r\n    }\r\n    findConceptScheme(ref: commonreferences.Reference): structure.ConceptSchemeType {\r\n        return this.structures.findConceptScheme(ref);\r\n    }\r\n    searchDataStructure(ref: commonreferences.Reference): Array<structure.DataStructure> {\r\n        return this.structures.searchDataStructure(ref);\r\n    }\r\n    searchDataflow(ref: commonreferences.Reference): Array<structure.Dataflow> {\r\n        return this.structures.searchDataflow(ref);\r\n    }\r\n    searchCodelist(ref: commonreferences.Reference): Array<structure.Codelist> {\r\n        return this.structures.searchCodelist(ref);\r\n    }\r\n    searchItemType(item: commonreferences.Reference): Array<structure.ItemType> {\r\n        return this.structures.searchItemType(item);\r\n    }\r\n    searchConcept(ref: commonreferences.Reference): Array<structure.ConceptType> {\r\n        return this.structures.searchConcept(ref);\r\n    }\r\n    searchConceptScheme(ref: commonreferences.Reference): Array<structure.ConceptSchemeType> {\r\n        return this.structures.searchConceptScheme(ref);\r\n    }\r\n    save(): any {\r\n\r\n    }\r\n}\r\nexport class HeaderTimeType {\r\n    private date: xml.DateTime = null;\r\n    constructor(d: xml.DateTime) {\r\n        this.date = d;\r\n    }\r\n    getDate(): xml.DateTime { return this.date; }\r\n    setDate(d: xml.DateTime): void {\r\n        this.date = d;\r\n    }\r\n}\r\nexport class Contact {\r\n    public name: Array<common.Name> = [];\r\n    public departments: Array<common.TextType> = [];\r\n    public roles: Array<common.TextType> = [];\r\n    public telephones: Array<string> = [];\r\n    public faxes: Array<string> = [];\r\n    public z400s: Array<string> = [];\r\n    public uris: Array<xml.anyURI> = [];\r\n    public emails: Array<string> = [];\r\n}\r\nexport class PartyType extends structure.NameableType {\r\n    public contacts: Array<Contact> = [];\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\nexport class Sender extends PartyType {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n}\r\n\r\nexport class Header {\r\n    private id: string = null;\r\n    private test: boolean = null;\r\n    private prepared: HeaderTimeType = null;\r\n    private sender: PartyType = null;\r\n    private receivers: Array<PartyType> = [];\r\n    private names: Array<common.Name> = [];\r\n    private structures: Array<common.PayloadStructureType> = [];\r\n    private dataproviderReference: commonreferences.Reference = null;\r\n    private dataSetAction: common.ActionType = null;\r\n    private dataSetId: Array<commonreferences.ID> = [];\r\n    private extracted: xml.DateTime = null;\r\n    private reportingBegin: common.ObservationalTimePeriodType = null;\r\n    private reportingEnd: common.ObservationalTimePeriodType = null;\r\n    private embargoDate: xml.DateTime = null;\r\n    private source: Array<common.Name> = [];\r\n\r\n    constructor() { }\r\n\r\n    getId(): string { return this.id; }\r\n    setId(s: string) { this.id = s; }\r\n    getTest(): boolean { return this.test; }\r\n    setTest(b: boolean) {\r\n        this.test = b;\r\n    }\r\n    getPrepared(): HeaderTimeType { return this.prepared; }\r\n    setPrepared(h: HeaderTimeType) {\r\n        this.prepared = h;\r\n    }\r\n    getSender(): Sender { return this.sender; }\r\n    setSender(p: Sender) {\r\n        this.sender = p;\r\n    }\r\n    getReceivers(): Array<PartyType> {\r\n        return this.receivers;\r\n    }\r\n    setReceivers(recs: Array<PartyType>) {\r\n        this.receivers = recs;\r\n    }\r\n    getNames(): Array<common.Name> {\r\n        return this.names;\r\n    }\r\n    setNames(n: Array<common.Name>) {\r\n        this.names = n;\r\n    }\r\n    setStructures(pl: Array<common.PayloadStructureType>) {\r\n        this.structures = pl;\r\n    }\r\n    getStructures(): Array<common.PayloadStructureType> {\r\n        return this.structures;\r\n    }\r\n    getDataproviderReference(): commonreferences.Reference {\r\n        return this.dataproviderReference;\r\n    }\r\n    setDataproviderReference(ref: commonreferences.Reference) {\r\n        this.dataproviderReference = ref;\r\n    }\r\n    setAction(ac: common.ActionType) {\r\n        this.dataSetAction = ac;\r\n    }\r\n    getAction(): common.ActionType {\r\n        return this.dataSetAction;\r\n    }\r\n    getDataSetId(): Array<commonreferences.ID> {\r\n        return this.dataSetId;\r\n    }\r\n    setDataSetId(ids: Array<commonreferences.ID>) {\r\n        this.dataSetId = ids;\r\n    }\r\n    getExtracted(): xml.DateTime {\r\n        return this.extracted;\r\n    }\r\n    setExtracted(d: xml.DateTime) {\r\n        this.extracted = d;\r\n    }\r\n    getReportingBegin(): common.ObservationalTimePeriodType {\r\n        return this.reportingBegin;\r\n    }\r\n    setReportingBegin(o: common.ObservationalTimePeriodType) {\r\n        this.reportingBegin = o;\r\n    }\r\n    getReportingEnd(): common.ObservationalTimePeriodType {\r\n        return this.reportingEnd;\r\n    }\r\n    setReportingEnd(o: common.ObservationalTimePeriodType) {\r\n        this.reportingEnd = o;\r\n    }\r\n    getEmbargoDate(): xml.DateTime {\r\n        return this.embargoDate;\r\n    }\r\n    setEmbargoDate(dt: xml.DateTime) {\r\n        this.embargoDate = dt;\r\n    }\r\n    getSource(): Array<common.Name> {\r\n        return this.source;\r\n    }\r\n    setSource(s: Array<common.Name>) {\r\n        this.source = s;\r\n    }\r\n}"]}