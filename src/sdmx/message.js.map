{"version":3,"sources":["sdmx/message.ts"],"names":["DataMessage","DataMessage.constructor","DataMessage.getHeader","DataMessage.setHeader","DataMessage.getDataSet","DataMessage.setDataSet","DataMessage.addDataSet","DataMessage.removeDataSet","DataQuery","DataQuery.constructor","StructureType","StructureType.constructor","StructureType.getHeader","StructureType.setHeader","StructureType.getStructures","StructureType.setStructures","StructureType.listDataflows","StructureType.clear","StructureType.load","StructureType.unload","StructureType.findDataStructure","StructureType.findDataflow","StructureType.findCode","StructureType.findCodelist","StructureType.findItemType","StructureType.findConcept","StructureType.findConceptScheme","StructureType.searchDataStructure","StructureType.searchDataflow","StructureType.searchCodelist","StructureType.searchItemType","StructureType.searchConcept","StructureType.searchConceptScheme","StructureType.save","HeaderTimeType","HeaderTimeType.constructor","HeaderTimeType.getDate","HeaderTimeType.setDate","Contact","Contact.constructor","PartyType","PartyType.constructor","Sender","Sender.constructor","Header","Header.constructor","Header.getId","Header.setId","Header.getTest","Header.setTest","Header.getPrepared","Header.setPrepared","Header.getSender","Header.setSender","Header.getReceivers","Header.setReceivers","Header.getNames","Header.setNames","Header.setStructures","Header.getStructures","Header.getDataproviderReference","Header.setDataproviderReference","Header.setAction","Header.getAction","Header.getDataSetId","Header.setDataSetId","Header.getExtracted","Header.setExtracted","Header.getReportingBegin","Header.setReportingBegin","Header.getReportingEnd","Header.setReportingEnd","Header.getEmbargoDate","Header.setEmbargoDate","Header.getSource","Header.setSource"],"mappings":"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","file":"sdmx/message.js","sourcesContent":["/*\r\n    This file is part of sdmx-js.\r\n\r\n    sdmx-js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    sdmx-js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\r\n    Copyright (C) 2016 James Gardner\r\n*/\r\n/// <amd-module name='sdmx/message'/>\r\n///<reference path=\"../collections.ts\"/>\r\nimport interfaces = require(\"sdmx/interfaces\");\r\nimport structure = require(\"sdmx/structure\");\r\nimport commonreferences = require(\"sdmx/commonreferences\");\r\nimport xml = require(\"sdmx/xml\");\r\nimport common = require(\"sdmx/common\");\r\nimport data = require(\"sdmx/data\");\r\nexport class DataMessage {\r\n    private header: Header = null;\r\n    private dataSets: Array<data.FlatDataSet> = [];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    getHeader() { return this.header; }\r\n    setHeader(h: Header) { this.header = h; }\r\n    getDataSet(i: number): data.FlatDataSet { return this.dataSets[i]; }\r\n    setDataSet(i: number, ds: data.FlatDataSet) { this.dataSets[i] = ds; }\r\n    addDataSet(ds: data.FlatDataSet): number {\r\n        this.dataSets.push(ds);\r\n        return collections.arrays.indexOf(this.dataSets, ds);\r\n    }\r\n    removeDataSet(ds: data.FlatDataSet) {\r\n        collections.arrays.remove(this.dataSets, ds);\r\n    }\r\n}\r\n\r\nexport class DataQuery {\r\n\r\n}\r\nexport class StructureType implements interfaces.LocalRegistry {\r\n    private header: Header = null;\r\n    private structures: structure.Structures = null;\r\n\r\n    constructor() {\r\n\r\n    }\r\n    getHeader() { return this.header; }\r\n    setHeader(h: Header) { this.header = h; }\r\n    getStructures() {\r\n        return this.structures;\r\n    }\r\n    setStructures(s: structure.Structures) {\r\n        this.structures = s;\r\n    }\r\n    // Registry\r\n    listDataflows(): Array<structure.Dataflow> {\r\n        return this.structures.listDataflows();\r\n    }\r\n    clear(): void {\r\n\r\n    }\r\n    load(struct: StructureType): void {\r\n\r\n    }\r\n    unload(struct: StructureType): void {\r\n\r\n    }\r\n    findDataStructure(ref: commonreferences.Reference): structure.DataStructure {\r\n        return this.structures.findDataStructure(ref);\r\n    }\r\n    findDataflow(ref: commonreferences.Reference): structure.Dataflow {\r\n        return this.structures.findDataflow(ref);\r\n    }\r\n    findCode(ref: commonreferences.Reference): structure.CodeType {\r\n        return this.structures.findCode(ref);\r\n    }\r\n    findCodelist(ref: commonreferences.Reference): structure.Codelist {\r\n        return this.structures.findCodelist(ref);\r\n    }\r\n    findItemType(item: commonreferences.Reference): structure.ItemType {\r\n        return this.structures.findItemType(item);\r\n    }\r\n    findConcept(ref: commonreferences.Reference): structure.ConceptType {\r\n        return this.structures.findConcept(ref);\r\n    }\r\n    findConceptScheme(ref: commonreferences.Reference): structure.ConceptSchemeType {\r\n        return this.structures.findConceptScheme(ref);\r\n    }\r\n    searchDataStructure(ref: commonreferences.Reference): Array<structure.DataStructure> {\r\n        return this.structures.searchDataStructure(ref);\r\n    }\r\n    searchDataflow(ref: commonreferences.Reference): Array<structure.Dataflow> {\r\n        return this.structures.searchDataflow(ref);\r\n    }\r\n    searchCodelist(ref: commonreferences.Reference): Array<structure.Codelist> {\r\n        return this.structures.searchCodelist(ref);\r\n    }\r\n    searchItemType(item: commonreferences.Reference): Array<structure.ItemType> {\r\n        return this.structures.searchItemType(item);\r\n    }\r\n    searchConcept(ref: commonreferences.Reference): Array<structure.ConceptType> {\r\n        return this.structures.searchConcept(ref);\r\n    }\r\n    searchConceptScheme(ref: commonreferences.Reference): Array<structure.ConceptSchemeType> {\r\n        return this.structures.searchConceptScheme(ref);\r\n    }\r\n    save(): any {\r\n\r\n    }\r\n}\r\nexport class HeaderTimeType {\r\n    private date: xml.DateTime = null;\r\n    constructor(d: xml.DateTime) {\r\n        this.date = d;\r\n    }\r\n    getDate(): xml.DateTime { return this.date; }\r\n    setDate(d: xml.DateTime): void {\r\n        this.date = d;\r\n    }\r\n}\r\nexport class Contact {\r\n    public name: Array<common.Name> = [];\r\n    public departments: Array<common.TextType> = [];\r\n    public roles: Array<common.TextType> = [];\r\n    public telephones: Array<string> = [];\r\n    public faxes: Array<string> = [];\r\n    public z400s: Array<string> = [];\r\n    public uris: Array<xml.anyURI> = [];\r\n    public emails: Array<string> = [];\r\n}\r\nexport class PartyType extends structure.NameableType {\r\n    public contacts: Array<Contact> = [];\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\nexport class Sender extends PartyType {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n}\r\n\r\nexport class Header {\r\n    private id: string = null;\r\n    private test: boolean = null;\r\n    private prepared: HeaderTimeType = null;\r\n    private sender: PartyType = null;\r\n    private receivers: Array<PartyType> = [];\r\n    private names: Array<common.Name> = [];\r\n    private structures: Array<common.PayloadStructureType> = [];\r\n    private dataproviderReference: commonreferences.Reference = null;\r\n    private dataSetAction: common.ActionType = null;\r\n    private dataSetId: Array<commonreferences.ID> = [];\r\n    private extracted: xml.DateTime = null;\r\n    private reportingBegin: common.ObservationalTimePeriodType = null;\r\n    private reportingEnd: common.ObservationalTimePeriodType = null;\r\n    private embargoDate: xml.DateTime = null;\r\n    private source: Array<common.Name> = [];\r\n\r\n    constructor() { }\r\n\r\n    getId(): string { return this.id; }\r\n    setId(s: string) { this.id = s; }\r\n    getTest(): boolean { return this.test; }\r\n    setTest(b: boolean) {\r\n        this.test = b;\r\n    }\r\n    getPrepared(): HeaderTimeType { return this.prepared; }\r\n    setPrepared(h: HeaderTimeType) {\r\n        this.prepared = h;\r\n    }\r\n    getSender(): Sender { return this.sender; }\r\n    setSender(p: Sender) {\r\n        this.sender = p;\r\n    }\r\n    getReceivers(): Array<PartyType> {\r\n        return this.receivers;\r\n    }\r\n    setReceivers(recs: Array<PartyType>) {\r\n        this.receivers = recs;\r\n    }\r\n    getNames(): Array<common.Name> {\r\n        return this.names;\r\n    }\r\n    setNames(n: Array<common.Name>) {\r\n        this.names = n;\r\n    }\r\n    setStructures(pl: Array<common.PayloadStructureType>) {\r\n        this.structures = pl;\r\n    }\r\n    getStructures(): Array<common.PayloadStructureType> {\r\n        return this.structures;\r\n    }\r\n    getDataproviderReference(): commonreferences.Reference {\r\n        return this.dataproviderReference;\r\n    }\r\n    setDataproviderReference(ref: commonreferences.Reference) {\r\n        this.dataproviderReference = ref;\r\n    }\r\n    setAction(ac: common.ActionType) {\r\n        this.dataSetAction = ac;\r\n    }\r\n    getAction(): common.ActionType {\r\n        return this.dataSetAction;\r\n    }\r\n    getDataSetId(): Array<commonreferences.ID> {\r\n        return this.dataSetId;\r\n    }\r\n    setDataSetId(ids: Array<commonreferences.ID>) {\r\n        this.dataSetId = ids;\r\n    }\r\n    getExtracted(): xml.DateTime {\r\n        return this.extracted;\r\n    }\r\n    setExtracted(d: xml.DateTime) {\r\n        this.extracted = d;\r\n    }\r\n    getReportingBegin(): common.ObservationalTimePeriodType {\r\n        return this.reportingBegin;\r\n    }\r\n    setReportingBegin(o: common.ObservationalTimePeriodType) {\r\n        this.reportingBegin = o;\r\n    }\r\n    getReportingEnd(): common.ObservationalTimePeriodType {\r\n        return this.reportingEnd;\r\n    }\r\n    setReportingEnd(o: common.ObservationalTimePeriodType) {\r\n        this.reportingEnd = o;\r\n    }\r\n    getEmbargoDate(): xml.DateTime {\r\n        return this.embargoDate;\r\n    }\r\n    setEmbargoDate(dt: xml.DateTime) {\r\n        this.embargoDate = dt;\r\n    }\r\n    getSource(): Array<common.Name> {\r\n        return this.source;\r\n    }\r\n    setSource(s: Array<common.Name>) {\r\n        this.source = s;\r\n    }\r\n}"],"sourceRoot":"/source/"}