{"version":3,"sources":["sdmx/common.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["/*\r\n    This file is part of sdmx-js.\r\n\r\n    sdmx-js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    sdmx-js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\r\n    Copyright (C) 2016 James Gardner\r\n*/\r\n/// <amd-module name='sdmx/common'/>\r\nimport commonreferences = require(\"sdmx/commonreferences\");\r\nimport xml = require(\"sdmx/xml\");\r\nexport class TextType {\r\n    private lang: string = \"\";\r\n    private text: string = \"\";\r\n    constructor(lang: string, text: string) {\r\n        this.lang = lang;\r\n        this.text = text;\r\n    }\r\n    public getLang(): string {\r\n        return this.lang;\r\n    }\r\n    public getText(): string {\r\n        return this.text;\r\n    }\r\n    public setText(s: string) {\r\n        this.text = s;\r\n    }\r\n    public setLang(s: string) {\r\n        this.lang = s;\r\n    }\r\n}\r\nexport class Annotation {\r\n    public annotationTitle: string = \"\";\r\n    public annotationType: string = \"\";\r\n    public annotationUrl: string = \"\";\r\n    public annotationText: TextType[];\r\n    public id: string;\r\n}\r\nexport class Annotations {\r\n    private annotations: Annotation[] = null;\r\n    public getAnnotations(): Annotation[] {\r\n        return this.annotations;\r\n    }\r\n    public setAnnotations(a: Annotation[]) {\r\n        this.annotations = a;\r\n    }\r\n}\r\nexport class AnnotableType {\r\n    public annotations: Annotations;\r\n    constructor() {\r\n    }\r\n    getAnnotations(): Annotations {\r\n        return this.annotations;\r\n    }\r\n    setAnnotations(annots: Annotations) {\r\n        this.annotations = annots;\r\n    }\r\n}\r\n\r\nexport class Description extends TextType {\r\n    constructor(lang: string, text: string) {\r\n        super(lang, text);\r\n    }\r\n}\r\n\r\nexport class Name extends TextType {\r\n    constructor(lang: string, text: string) {\r\n        super(lang, text);\r\n    }\r\n}\r\nexport class ObservationDimensionType extends commonreferences.NCNameID {\r\n    private code: commonreferences.ObsDimensionsCodeType = null;\r\n    constructor(s: string) {\r\n        super(s);\r\n        //  if (commonreferences.ObsDimensionsCodeType.ALL_DIMENSIONS_TEXT.equals(s)) {\r\n        //      this.code = commonreferences.ObsDimensionsCodeType.fromString(s);\r\n        //  } else if (commonreferences.ObsDimensionsCodeType.TIME_PERIOD_TEXT.equals(s)) {\r\n        //      this.code = commonreferences.ObsDimensionsCodeType.fromString(s);\r\n        //  }\r\n    }\r\n    public toString(): string { return this.code != null ? this.code.toString() : super.toString(); }\r\n}\r\nexport class ActionType {\r\n    /*\r\n     * DO ME! Add Proper codes for this class\r\n     * \r\n     * \r\n     */\r\n    public static ENUM: Array<ActionType> = new Array<ActionType>();\r\n    public static STRING_ENUM: Array<string> = new Array<string>();\r\n\r\n    public static APPEND_TEXT: string = ActionType.addString(\"Append\");\r\n    public static REPLACE_TEXT: string = ActionType.addString(\"Replace\");\r\n    public static DELETE_TEXT: string = ActionType.addString(\"Delete\");\r\n    public static INFORMATION_TEXT: string = ActionType.addString(\"Information\");\r\n    public static APPEND: ActionType = new ActionType(ActionType.APPEND_TEXT);\r\n    public static REPLACE: ActionType = new ActionType(ActionType.REPLACE_TEXT);\r\n    public static DELETE: ActionType = new ActionType(ActionType.DELETE_TEXT);\r\n    public static INFORMATION: ActionType = new ActionType(ActionType.INFORMATION_TEXT);\r\n    // Utility\r\n    private static add(s: string): ActionType {\r\n        var b: ActionType = new ActionType(s);\r\n        ActionType.ENUM.push(b);\r\n        return b;\r\n    }\r\n    private static addString(s: string): string {\r\n        ActionType.STRING_ENUM.push(s);\r\n        return s;\r\n    }\r\n\r\n    public static fromString(s: string): ActionType {\r\n        for (var i = 0; i < ActionType.ENUM.length; i++) {\r\n            if (ActionType.ENUM[i].target == s) return ActionType.ENUM[i];\r\n        }\r\n        return null;\r\n    }\r\n    public static fromStringWithException(s: string): ActionType {\r\n        for (var i = 0; i < ActionType.ENUM.length; i++) {\r\n            if (ActionType.ENUM[i].target == s) return ActionType.ENUM[i];\r\n        }\r\n        throw new Error(\"Value:\" + s + \" not found in ActionType enumeration!\");\r\n    }\r\n    // Instance\r\n    private target: string = null;\r\n    constructor(s: string) {\r\n        var contains: boolean = false;\r\n        for (var i = 0; i < ActionType.STRING_ENUM.length; i++) {\r\n            if (ActionType.STRING_ENUM[i] == s) {\r\n                contains = true;\r\n            }\r\n        }\r\n        if (!contains) throw new Error(s + \" is not a valid ActionType\");\r\n        this.target = s;\r\n    }\r\n    public toString(): string { return this.target; }\r\n}\r\nexport class PayloadStructureType {\r\n    private structureID: commonreferences.ID = null;\r\n    private schemaURL: xml.anyURI = null;\r\n    private namespace: xml.anyURI = null;\r\n    private dimensionAtObservation: ObservationDimensionType = null;\r\n    private explicitMeasures: boolean = false;\r\n    private serviceURL: xml.anyURI = null;\r\n    private structureURL: xml.anyURI = null;\r\n\r\n    // Choice of 1\r\n    private provisionAgreement: commonreferences.Reference;\r\n    private structureUsage: commonreferences.Reference;\r\n    private structure: commonreferences.Reference;\r\n    public setStructure(ref:commonreferences.Reference) {\r\n        this.structure=ref;\r\n    }\r\n    public getStructure():commonreferences.Reference { return this.structure; }\r\n}\r\n\r\nexport class ObservationalTimePeriodType {\r\n    // Year\r\n    public static PATTERN_YEAR: string = \".{5}A1.*\";\r\n    // Semester\r\n    public static PATTERN_SEMESTER: string = \".{5}S[1-2].*\";\r\n    // Trimester\r\n    public static PATTERN_TRIMESTER: string = \".{5}T[1-3].*\";\r\n    // Quarter\r\n    public static PATTERN_QUARTER: string = \".{5}Q[1-4].*\";\r\n    // Month\r\n    public static PATTERN_MONTH: string = \".{5}M(0[1-9]|1[0-2]).*\";\r\n    // Week\r\n    public static PATTERN_WEEK: string = \".{5}W(0[1-9]|[1-4][0-9]|5[0-3]).*\";\r\n    // Day\r\n    public static PATTERN_DAY: string = \".{5}D(0[0-9][1-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-6]).*\";\r\n\r\n    public static YEAR: number = 1;\r\n    public static SEMESTER: number = 2;\r\n    public static TRIMESTER: number = 3;\r\n    public static QUARTER: number = 4;\r\n    public static MONTH: number = 5;\r\n    public static WEEK: number = 6;\r\n    public static DAY: number = 7;\r\n\r\n    private state: number = ObservationalTimePeriodType.YEAR;\r\n    private value: string = null;\r\n\r\n    constructor(s: string) {\r\n        this.value = s;\r\n        if (s.match(ObservationalTimePeriodType.PATTERN_YEAR).length > 0) {\r\n            this.state = ObservationalTimePeriodType.YEAR;\r\n        }\r\n        if (s.match(ObservationalTimePeriodType.PATTERN_SEMESTER).length > 0) {\r\n            this.state = ObservationalTimePeriodType.SEMESTER;\r\n        }\r\n        if (s.match(ObservationalTimePeriodType.PATTERN_TRIMESTER).length > 0) {\r\n            this.state = ObservationalTimePeriodType.TRIMESTER;\r\n        }\r\n        if (s.match(ObservationalTimePeriodType.PATTERN_QUARTER).length > 0) {\r\n            this.state = ObservationalTimePeriodType.QUARTER;\r\n        }\r\n        if (s.match(ObservationalTimePeriodType.PATTERN_MONTH).length > 0) {\r\n            this.state = ObservationalTimePeriodType.MONTH;\r\n        }\r\n        if (s.match(ObservationalTimePeriodType.PATTERN_WEEK).length > 0) {\r\n            this.state = ObservationalTimePeriodType.WEEK;\r\n        }\r\n        if (s.match(ObservationalTimePeriodType.PATTERN_DAY).length > 0) {\r\n            this.state = ObservationalTimePeriodType.DAY;\r\n        }\r\n    }\r\n    public toString(): string {\r\n        return this.value;\r\n    }\r\n    public getState(): number {\r\n        return this.state;\r\n    }\r\n}\r\nexport class ExternalReferenceAttributeGroup {\r\n    private serviceURL: string = null;\r\n    private structureURL: string = null;\r\n\r\n\r\n    constructor() { }\r\n\r\n    /**\r\n     * @return the serviceURL\r\n     */\r\n    getServiceURL(): string {\r\n        return this.serviceURL;\r\n    }\r\n\r\n    setServiceURL(serviceURL: string) {\r\n        this.serviceURL = serviceURL;\r\n    }\r\n\r\n    getStructureURL(): string {\r\n        return this.structureURL;\r\n    }\r\n\r\n    /**\r\n     * @param structureURL the structureURL to set\r\n     */\r\n    setStructureURL(structureURL: string) {\r\n        this.structureURL = structureURL;\r\n    }\r\n}\r\nexport class DataType {\r\n\r\n    public static ENUM: Array<DataType> = new Array<DataType>();\r\n    public static STRING_ENUM: Array<string> = new Array<string>();\r\n\r\n    public static STRING_TEXT: string = DataType.addString(\"String\");\r\n    public static ALPHA_TEXT: string = DataType.addString(\"Alpha\");\r\n    public static ALPHANUMERIC_TEXT: string = DataType.addString(\"AlphaNumeric\");\r\n    public static NUMERIC_TEXT: string = DataType.addString(\"Numeric\");\r\n    public static BIGINTEGER_TEXT: string = DataType.addString(\"BigInteger\");\r\n    public static INTEGER_TEXT: string = DataType.addString(\"Integer\");\r\n    public static LONG_TEXT: string = DataType.addString(\"Long\");\r\n    public static SHORT_TEXT: string = DataType.addString(\"Short\");\r\n    public static DECIMAL_TEXT: string = DataType.addString(\"Decimal\");\r\n    public static FLOAT_TEXT: string = DataType.addString(\"Float\");\r\n    public static DOUBLE_TEXT: string = DataType.addString(\"Double\");\r\n    public static BOOLEAN_TEXT: string = DataType.addString(\"Boolean\");\r\n    public static URI_TEXT: string = DataType.addString(\"URI\");\r\n    public static COUNT_TEXT: string = DataType.addString(\"Count\");\r\n    public static INCLUSIVEVALUERANGE_TEXT: string = DataType.addString(\"InclusiveValueRange\");\r\n    public static EXCLUSIVEVALUERANGE_TEXT: string = DataType.addString(\"ExclusiveValueRange\");\r\n    public static INCREMENTAL_TEXT: string = DataType.addString(\"Incremental\");\r\n    public static OBSERVATIONAL_TIMEPERIOD_TEXT: string = DataType.addString(\"ObservationalTimePeriod\");\r\n    public static STANDARD_TIMEPERIOD_TEXT: string = DataType.addString(\"StandardTimePeriod\");\r\n    public static BASIC_TIMEPERIOD_TEXT: string = DataType.addString(\"BasicTimePeriod\");\r\n    public static GREGORIAN_TIMEPERIOD_TEXT: string = DataType.addString(\"GregorianTimePeriod\");\r\n    public static GREGORIAN_YEAR_TEXT: string = DataType.addString(\"GregorianYear\");\r\n    public static GREGORIAN_YEARMONTH_TEXT: string = DataType.addString(\"GregorianYearMonth\");\r\n    public static GREGORIAN_DAY_TEXT: string = DataType.addString(\"GregorianDay\");\r\n    public static REPORTING_TIMEPERIOD_TEXT: string = DataType.addString(\"ReportingTimePeriod\");\r\n    public static REPORTING_YEAR_TEXT: string = DataType.addString(\"ReportingYear\");\r\n    public static REPORTING_SEMESTER_TEXT: string = DataType.addString(\"ReportingSemester\");\r\n    public static REPORTING_TRIMESTER_TEXT: string = DataType.addString(\"ReportingTrimester\");\r\n    public static REPORTING_QUARTER_TEXT: string = DataType.addString(\"ReportingQuarter\");\r\n    public static REPORTING_MONTH_TEXT: string = DataType.addString(\"ReportingMonth\");\r\n    public static REPORTING_WEEK_TEXT: string = DataType.addString(\"ReportingWeek\");\r\n    public static REPORTING_DAY_TEXT: string = DataType.addString(\"ReportingDay\");\r\n    public static DATETIME_TEXT: string = DataType.addString(\"DateTime\");\r\n    public static TIMERANGE_TEXT: string = DataType.addString(\"TimeRange\");\r\n    public static MONTH_TEXT: string = DataType.addString(\"Month\");\r\n    public static MONTH_DAY_TEXT: string = DataType.addString(\"MonthDay\");\r\n    public static DAY_TEXT: string = DataType.addString(\"Day\");\r\n    public static TIME_TEXT: string = DataType.addString(\"Time\");\r\n    public static DURATION_TEXT: string = DataType.addString(\"Duration\");\r\n    public static XHTML_TEXT: string = DataType.addString(\"XHTML\");\r\n    public static KEYVALUES_TEXT: string = DataType.addString(\"KeyValues\");\r\n    public static IDENTIFIABLE_REFERENCE_TEXT: string = DataType.addString(\"IdentifiableReference\");\r\n    public static DATASET_REFERENCE_TEXT: string = DataType.addString(\"DataSetReference\");\r\n    public static ATTACHMENT_CONSTRAINT_REFERENCE_TEXT: string = DataType.addString(\"AttachmentConstraintReference\");\r\n    public static STRING: DataType = DataType.add(\"String\");\r\n    public static ALPHA: DataType = DataType.add(\"Alpha\");\r\n    public static ALPHANUMERIC: DataType = DataType.add(\"AlphaNumeric\");\r\n    public static NUMERIC: DataType = DataType.add(\"Numeric\");\r\n    public static BIGINTEGER: DataType = DataType.add(\"BigInteger\");\r\n    public static INTEGER: DataType = DataType.add(\"Integer\");\r\n    public static LONG: DataType = DataType.add(\"Long\");\r\n    public static SHORT: DataType = DataType.add(\"Short\");\r\n    public static DECIMAL: DataType = DataType.add(\"Decimal\");\r\n    public static FLOAT: DataType = DataType.add(\"Float\");\r\n    public static DOUBLE: DataType = DataType.add(\"Double\");\r\n    public static BOOLEAN: DataType = DataType.add(\"Boolean\");\r\n    public static URI: DataType = DataType.add(\"URI\");\r\n    public static COUNT: DataType = DataType.add(\"Count\");\r\n    public static INCLUSIVEVALUERANGE: DataType = DataType.add(\"InclusiveValueRange\");\r\n    public static EXCLUSIVEVALUERANGE: DataType = DataType.add(\"ExclusiveValueRange\");\r\n    public static INCREMENTAL: DataType = DataType.add(\"Incremental\");\r\n    public static OBSERVATIONAL_TIMEPERIOD: DataType = DataType.add(\"ObservationalTimePeriod\");\r\n    public static STANDARD_TIMEPERIOD: DataType = DataType.add(\"StandardTimePeriod\");\r\n    public static BASIC_TIMEPERIOD: DataType = DataType.add(\"BasicTimePeriod\");\r\n    public static GREGORIAN_TIMEPERIOD: DataType = DataType.add(\"GregorianTimePeriod\");\r\n    public static GREGORIAN_YEAR: DataType = DataType.add(\"GregorianYear\");\r\n    public static GREGORIAN_YEARMONTH: DataType = DataType.add(\"GregorianYearMonth\");\r\n    public static GREGORIAN_DAY: DataType = DataType.add(\"GregorianDay\");\r\n    public static REPORTING_TIMEPERIOD: DataType = DataType.add(\"ReportingTimePeriod\");\r\n    public static REPORTING_YEAR: DataType = DataType.add(\"ReportingYear\");\r\n    public static REPORTING_SEMESTER: DataType = DataType.add(\"ReportingSemester\");\r\n    public static REPORTING_TRIMESTER: DataType = DataType.add(\"ReportingTrimester\");\r\n    public static REPORTING_QUARTER: DataType = DataType.add(\"ReportingQuarter\");\r\n    public static REPORTING_MONTH: DataType = DataType.add(\"ReportingMonth\");\r\n    public static REPORTING_WEEK: DataType = DataType.add(\"ReportingWeek\");\r\n    public static REPORTING_DAY: DataType = DataType.add(\"ReportingDay\");\r\n    public static DATETIME: DataType = DataType.add(\"DateTime\");\r\n    public static TIMERANGE: DataType = DataType.add(\"TimeRange\");\r\n    public static MONTH: DataType = DataType.add(\"Month\");\r\n    public static MONTH_DAY: DataType = DataType.add(\"MonthDay\");\r\n    public static DAY: DataType = DataType.add(\"Day\");\r\n    public static TIME: DataType = DataType.add(\"Time\");\r\n    public static DURATION: DataType = DataType.add(\"Duration\");\r\n    public static XHTML: DataType = DataType.add(\"XHTML\");\r\n    public static KEYVALUES: DataType = DataType.add(\"KeyValues\");\r\n    public static IDENTIFIABLE_REFERENCE: DataType = DataType.add(\"IdentifiableReference\");\r\n    public static DATASET_REFERENCE: DataType = DataType.add(\"DataSetReference\");\r\n    public static ATTACHMENT_CONSTRAINT_REFERENCE: DataType = DataType.add(\"AttachmentConstraintReference\");\r\n\r\n    // Utility\r\n    private static add(s: string): DataType {\r\n        var b: DataType = new DataType(s);\r\n        DataType.ENUM.push(b);\r\n        return b;\r\n    }\r\n    private static addString(s: string): string {\r\n        DataType.STRING_ENUM.push(s);\r\n        return s;\r\n    }\r\n\r\n    public static fromString(s: string): DataType {\r\n        for (var i: number = 0; i < DataType.ENUM.length; i++) {\r\n            if (DataType.ENUM[i].target == s) return DataType.ENUM[i];\r\n        }\r\n        return null;\r\n    }\r\n    public static fromStringWithException(s: string): DataType {\r\n        for (var i: number = 0; i < DataType.ENUM.length; i++) {\r\n            if (DataType.ENUM[i].target == s) return DataType.ENUM[i];\r\n        }\r\n        throw new Error(\"Value:\" + s + \" not found in enumeration! - DataType\");\r\n    }\r\n    // Instance\r\n    private target: string = null;\r\n    private index: number = -1;\r\n    public constructor(s: string) {\r\n        var contains: boolean = false;\r\n        for (var i = 0; i < DataType.STRING_ENUM.length; i++) {\r\n            if (DataType.STRING_ENUM[i] == s) {\r\n                contains = true;\r\n            }\r\n        }\r\n        if (!contains) throw new Error(s + \" is not a valid DataType\");\r\n        this.target = s;\r\n        this.index = DataType.STRING_ENUM.indexOf(s);\r\n    }\r\n    public toString(): string { return this.target; }\r\n    public toInt(): number {\r\n        return this.index;\r\n    }\r\n}\r\nexport class StandardTimePeriodType {}"]}