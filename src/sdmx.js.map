{"version":3,"sources":["sdmx.ts"],"names":[],"mappings":"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","file":"sdmx.js","sourcesContent":["/*\r\n    This file is part of sdmx-js.\r\n\r\n    sdmx-js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    sdmx-js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\r\n    Copyright (C) 2016 James Gardner\r\n*/\r\n/// <amd-module name='sdmx'/>\r\nimport message = require(\"sdmx/message\");\r\nimport interfaces = require(\"sdmx/interfaces\");\r\nimport sdmx20 = require(\"sdmx/sdmx20\");\r\nimport sdmx21 = require(\"sdmx/sdmx21\");\r\nimport abs = require(\"sdmx/abs\");\r\nimport oecd = require(\"sdmx/oecd\");\r\nimport knoema = require(\"sdmx/knoema\");\r\nimport nomis = require(\"sdmx/nomis\");\r\nimport ilo = require(\"sdmx/ilo\");\r\nimport estat = require(\"sdmx/estat\");\r\nexport class SdmxIO {\r\n    public static SANITISE_NAMES: boolean = false;\r\n    public static PARSER: Array<interfaces.SdmxParserProvider> = [];\r\n    public static TRUNCATE_NAMES: number = 100;\r\n    public static getLocale(): string {\r\n        return SdmxIO.getLanguage();\r\n    }\r\n    public static isSanitiseNames(): boolean {\r\n        return SdmxIO.SANITISE_NAMES;\r\n\r\n    }\r\n    public static parseStructure(s: string): message.StructureType {\r\n        for (var i = 0; i < SdmxIO.PARSER.length; i++) {\r\n            if (SdmxIO.PARSER[i].canParse(s)) { return SdmxIO.PARSER[i].parseStructure(s); }\r\n            //else {\r\n            //    alert(\"not my type\");\r\n            //}\r\n        }\r\n        return null;\r\n    }\r\n    public static parseData(s: string): message.DataMessage {\r\n        for (var i = 0; i < SdmxIO.PARSER.length; i++) {\r\n            if (SdmxIO.PARSER[i].canParse(s)) { return SdmxIO.PARSER[i].parseData(s); }\r\n        }\r\n        return null;\r\n    }\r\n    public static registerParserProvider(p: interfaces.SdmxParserProvider) {\r\n        SdmxIO.PARSER.push(p);\r\n\r\n    }\r\n    public static listServices(): Array<string> {\r\n        return [\"NOMIS\", \"ABS\",\r\n            \"OECD\", \"KNOEMA\", \"AfDB\", \"ILO\", \"ESTAT\"];\r\n        //return [\"OECD\"];\r\n    }\r\n    public static connect(s: string): interfaces.Queryable {\r\n        if (s == \"ABS\") return new abs.ABS(\"ABS\", \"http://cors-anywhere.herokuapp.com/http://stat.abs.gov.au/restsdmx/sdmx.ashx/\", \"\");\r\n        if (s == \"KNOEMA\") return new knoema.Knoema(\"KNOEMA\", \"http://knoema.com/api/1.0/sdmx\", \"\");\r\n        if (s == \"NOMIS\") return new nomis.NOMISRESTServiceRegistry(\"NOMIS\", \"http://www.nomisweb.co.uk/api\", \"uid=0xad235cca367972d98bd642ef04ea259da5de264f\");\r\n        if (s == \"OECD\") return new oecd.OECD(\"OECD\", \"http://stats.oecd.org/restsdmx/sdmx.ashx/\", \"\");\r\n        if (s == \"AfDB\") return new knoema.Knoema(\"AfDB\", \"http://opendataforafrica.org/api/1.0/sdmx\", \"\");\r\n        if (s == \"ILO\") return new ilo.ILO(\"ILO\", \"http://cors-anywhere.herokuapp.com/http://www.ilo.org/ilostat/sdmx/ws/rest\", \"\");\r\n        if (s == \"ESTAT\") return new estat.ESTAT(\"ESTAT\", \"http://ec.europa.eu/eurostat/SDMX/diss-web/rest\", \"\");\r\n    }\r\n    public static setTruncateNames(n: number) {\r\n        SdmxIO.TRUNCATE_NAMES = n;\r\n    }\r\n    public static truncateName(s: string) {\r\n        if (SdmxIO.TRUNCATE_NAMES) {\r\n            return s.substring(0, SdmxIO.TRUNCATE_NAMES);\r\n        }\r\n        return s;\r\n    }\r\n    private static languages = [];\r\n    private static language = window.navigator.userLanguage || window.navigator.language||\"en\";\r\n    public static registerLanguage(s: string) {\r\n        for (var i: number = 0; i < this.languages.length; i++) {\r\n            if (this.languages[i] == s) return;\r\n        }\r\n        this.languages.push(s);\r\n    }\r\n    public static listLanguages(): Array<string> {\r\n        return this.languages;\r\n    }\r\n    public static setLanguage(s:string) {\r\n        this.language=s;\r\n    }\r\n    public static getLanguage():string{\r\n        return this.language;\r\n    }\r\n}\r\nSdmxIO.registerParserProvider(new sdmx20.Sdmx20StructureParser());\r\nSdmxIO.registerParserProvider(new sdmx21.Sdmx21StructureParser());\r\n"]}