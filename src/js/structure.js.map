{"version":3,"sources":["structure.ts"],"names":["IdentifiableType","IdentifiableType.constructor","IdentifiableType.getId","IdentifiableType.getURN","IdentifiableType.getURI","IdentifiableType.setId","IdentifiableType.setURN","IdentifiableType.setURI","IdentifiableType.identifiesMeId","IdentifiableType.identifiesMeString","IdentifiableType.identifiesMeNestedId","NameableType","NameableType.constructor","NameableType.getNames","NameableType.setNames","NameableType.getDescriptions","NameableType.setDescriptions","NameableType.findName","NameableType.findDescription","NameableType.toString","NameableType.getName","NameableType.toStringWithLocale","NameableType.toIDString","NameableType.sanitise","ItemType","ItemType.constructor","ItemType.getParent","ItemType.setParent","ItemType.getItems","ItemType.setItems","ItemType.getItem","ItemType.setItem","ItemType.removeItem","ItemType.addItem","ItemType.size","ItemType.findItemString","ItemType.findItem","VersionableType","VersionableType.constructor","VersionableType.getVersion","VersionableType.setVersion","VersionableType.getValidFrom","VersionableType.setValidFrom","VersionableType.getValidTo","VersionableType.setValidTo","MaintainableType","MaintainableType.constructor","MaintainableType.getAgencyID","MaintainableType.setAgencyID","MaintainableType.isFinal","MaintainableType.setFinal","MaintainableType.isExternalReference","MaintainableType.setExternalReference","MaintainableType.getExternalReferences","MaintainableType.setExternalReferences","MaintainableType.identifiesMeStrings","MaintainableType.identifiesMe","MaintainableType.identifiesMeURI","MaintainableType.asReference","ItemSchemeType","ItemSchemeType.constructor","ItemSchemeType.getItems","ItemSchemeType.setItems","ItemSchemeType.isPartial","ItemSchemeType.setPartial","ItemSchemeType.getItem","ItemSchemeType.setItem","ItemSchemeType.removeItem","ItemSchemeType.addItem","ItemSchemeType.size","ItemSchemeType.findItemString","ItemSchemeType.findItemId","ItemSchemeType.findItemNestedId","ItemSchemeType.findSubItemsString","ItemSchemeType.findSubItemsId","CodeType","CodeType.constructor","Codelist","Codelist.constructor","ConceptSchemeType","ConceptSchemeType.constructor","ConceptType","ConceptType.constructor","Dataflow","Dataflow.constructor","DataStructure","DataStructure.constructor","CodeLists","CodeLists.constructor","CodeLists.getCodelists","CodeLists.setCodelists","CodeLists.findCodelistStrings","CodeLists.findCodelist","CodeLists.findCodelistURI","CodeLists.findCodelistById","CodeLists.findCodelistReference","CodeLists.merge","Concepts","Concepts.constructor","Concepts.getConceptSchemes","Concepts.setConceptSchemes","Concepts.findConceptSchemeStrings","Concepts.findConceptScheme","Concepts.findConceptSchemeURI","Concepts.findConceptSchemeById","Concepts.findConceptSchemeReference","Concepts.merge","DataStructures","DataStructures.constructor","Structures","Structures.constructor","Structures.getConcepts","Structures.setConcepts","Structures.getCodeLists","Structures.setCodeLists","Structures.getDataStructures","Structures.setDataStructures","Structures.listDataflows","Structures.clear","Structures.load","Structures.unload","Structures.findDataStructure","Structures.findDataflow","Structures.findCode","Structures.findCodelist","Structures.findItemType","Structures.findConcept","Structures.findConceptScheme","Structures.searchDataStructure","Structures.searchDataflow","Structures.searchCodelist","Structures.searchItemType","Structures.searchConcept","Structures.searchConceptScheme","Structures.save"],"mappings":"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A,CAACA,CAACA,CAACA;oBAACA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;YAClEA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAEMX,mCAAUA,GAAjBA,UAAkBA,CAAsBA;YACpCY,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACjDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,cAAcA,CAACA,CAACA,CAACA,CAACA;oBAACA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;YAC9DA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAEMZ,yCAAgBA,GAAvBA,UAAwBA,CAA4BA;YAChDa,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACjDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,oBAAoBA,CAACA,CAACA,CAACA,CAACA;oBAACA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;YACpEA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACMb,2CAAkBA,GAAzBA,UAA0BA,CAASA;YAC/Bc,MAAMA,CAACA,IAAIA,CAACA,cAAcA,CAACA,IAAIA,gBAAgBA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;QAC3DA,CAACA;QAEMd,uCAAcA,GAArBA,UAAsBA,EAAuBA;YACzCe,IAAIA,MAAMA,GAAoBA,IAAIA,KAAKA,EAAYA,CAACA;YACpDA,EAAEA,CAACA,CAACA,EAAEA,IAAIA,IAAIA,CAACA,CAACA,CAACA;gBACb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A,CAACA,SAASA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACrDA,IAAIA,GAAGA,GAAaA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;gBACtCA,EAAEA,CAACA,CAACA,GAAGA,CAACA,YAAYA,CAACA,OAAOA,EAAEA,MAAMA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACzCA,MAAMA,CAACA,GAAGA,CAACA;gBACfA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDL,mCAAeA,GAAfA,UAAgBA,GAAeA;YAC3BM,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,SAASA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACrDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA,eAAeA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACzCA,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;gBAC7BA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDN;;;;;WAKGA;QACHA,oCAAgBA,GAAhBA,UAAiBA,EAA6BA;YAC1CO,IAAIA,EAAEA,GAAaA,IAAIA,CAACA;YACxBA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,SAASA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACrDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA,cAAcA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;oBACvCA,EAAEA,CAACA,CAACA,EAAEA,IAAIA,IAAIA,CAACA;wBAACA,EAAEA,GAAGA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;oBACvCA,IAAIA,CAACA,CAAC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A,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,eAAeA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACxCA,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA;gBAC5BA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDN;;;;;WAKGA;QACHA,wCAAqBA,GAArBA,UAAsBA,EAA6BA;YAC/CO,IAAIA,EAAEA,GAAsBA,IAAIA,CAACA;YACjCA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACpDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,cAAcA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;oBACtCA,EAAEA,CAACA,CAACA,EAAEA,IAAIA,IAAIA,CAACA;wBAACA,EAAEA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA;oBACtCA,IAAIA,CAACA,CAACA;wBACFA,IAAIA,CAACA,GAAWA,EAAEA,CAACA,UAAUA,EAAEA,CAACA,SAASA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,UAAUA,EAAEA,CAACA,CAACA;wBACzEA,MAAMA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;4BACRA,KAAKA,CAACA,CAACA;gCACHA,KAAKA,CAACA;4BACVA,KAAKA,CAACA;gCACFA,KAAKA,CAACA;4BACVA,KAAKA,CAACA;gCACFA,wDAAwDA;gCACxDA,EAAEA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA;gCACtBA,KAAKA,CAACA;wBACdA,CAACA;oBACLA,CAACA;gBACLA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,EAAEA,CAACA;QACdA,CAACA;QACDP,6CAA0BA,GAA1BA,UAA2BA,GAA+BA;YACtD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","file":"structure.js","sourcesContent":["/// <amd-module name='structure'/>\n/// <reference path=\"collections.ts\"/>\nimport common = require(\"common\");\nimport commonreferences = require(\"commonreferences\");\nimport xml = require(\"xml\");\nimport structure = require(\"structure\");\nimport sdmx = require(\"sdmx\");\nimport message = require(\"message\");\n\nexport class IdentifiableType extends common.AnnotableType {\n    private id: commonreferences.ID;\n    private urn: xml.anyURI;\n    private uri: xml.anyURI;\n    constructor() {\n        super();\n    }\n    public getId(): commonreferences.ID { return this.id; }\n    public getURN(): xml.anyURI { return this.urn; }\n    public getURI(): xml.anyURI { return this.uri; }\n    public setId(id: commonreferences.ID) {\n        this.id = id;\n    }\n    public setURN(urn: xml.anyURI) {\n        this.urn = urn;\n    }\n    public setURI(uri: xml.anyURI) {\n        this.uri = uri;\n    }\n    public identifiesMeId(oid: commonreferences.ID): boolean {\n        if (this.id.equalsID(oid)) return true;\n        else return false;\n    }\n    public identifiesMeString(oid: string): boolean {\n        if (this.id.equalsString(oid)) return true;\n        else return false;\n    }\n    public identifiesMeNestedId(oid: commonreferences.NestedID): boolean {\n        if (oid.equalsString(this.id.getString())) return true;\n        else return false;\n    }\n\n}\n\nexport class NameableType extends IdentifiableType {\n    private names: Array<common.Name> = [];\n    private descriptions: Array<common.Description> = [];\n\n    constructor() {\n        super();\n    }\n    /**\n     * @return the names\n     */\n    public getNames(): Array<common.Name> {\n        return this.names;\n    }\n\n    /**\n     * @param names the names to set\n     */\n    public setNames(names1: Array<common.Name>) {\n        this.names = names1;\n    }\n\n    /**\n     * @return the descriptions\n     */\n    public getDescriptions(): Array<common.Description> {\n        return this.descriptions;\n    }\n\n    /**\n     * @param descriptions the descriptions to set\n     */\n    public setDescriptions(descriptions: Array<common.Description>) {\n        this.descriptions = descriptions;\n    }\n\n    public findName(lang: String): common.Name {\n        if (this.names == null) {\n            return null;\n        }\n        var def: common.Name = null;\n        for (var i: number = 0; i < this.names.length; i++) {\n            if (lang != null && lang == this.names[i].getLang()) {\n                return this.names[i];\n            }\n            if (this.names[i].getLang() == null) {\n                def = this.names[i];\n            }\n        }\n        if (def == null && \"en\" != lang) {\n            def = this.findName(\"en\");\n        }\n        return def;\n    }\n\n    public findDescription(lang: string): common.Description {\n        if (this.descriptions == null) {\n            return null;\n        }\n        var def: common.Description = null;\n        for (var i: number = 0; i < this.descriptions.length; i++) {\n            if (lang != null && lang == this.descriptions[i].getLang()) {\n                return this.descriptions[i];\n            }\n            if (this.descriptions[i].getLang() == null) {\n                def = this.descriptions[i];\n            }\n        }\n        if (def == null && \"en\" != lang) {\n            def = this.findDescription(\"en\");\n        }\n        return def;\n    }\n\n    public toString(): string {\n        var loc: string = sdmx.SdmxIO.getLocale();\n        var name: common.Name = this.findName(loc);\n        if (name != null) {\n            return name.toString();\n        }\n        var desc: common.Description = this.findDescription(loc);\n        if (desc != null) {\n            return desc.getText();\n        }\n        return \"NameableType\";\n    }\n\n    public getName(): string {\n        if (sdmx.SdmxIO.isSanitiseNames()) {\n            return NameableType.sanitise(NameableType.toString(this));\n        } else {\n            return NameableType.toString(this);\n        }\n    }\n\n    private static toString(named: NameableType): string {\n        var loc: string = sdmx.SdmxIO.getLocale();\n        if (named == null) {\n            return \"\";\n        }\n        var desc: common.Description = named.findDescription(loc);\n        if (desc == null) {\n            var name: common.Name = named.findName(loc);\n            if (name == null) {\n                return named.getId().toString();\n            }\n            return name.getText();\n        }\n        return desc.getText();\n    }\n\n    private static toStringWithLocale(named: NameableType, loc: string): string {\n        //if (concept.equals(\"FREQ\")) {\n        //    ItemType code2 = getCode();\n        //    System.out.println(\"FREQ Code=\" + code2);\n        //}\n        if (named == null) {\n            return \"\";\n        }\n        var name: common.Name = named.findName(loc);\n        if (name == null) {\n            var desc: common.Description = named.findDescription(loc);\n            if (desc == null) {\n                return named.getId().toString();\n            }\n            return desc.getText();\n        }\n        return name.getText();\n\n    }\n\n    private static toIDString(named: NameableType): string {\n        return named.getId().toString();\n    }\n\n    public static sanitise(s: string): string {\n        if (s.indexOf(\"'\") != -1) {\n            s = s.replace(\"'\", \"&apos;\");\n        }\n        if (s.indexOf(\"\\\"\") != -1) {\n            s = s.replace(\"\\\"\", \"&quot;\");\n        }\n        return s;\n    }\n\n}\nexport class ItemType extends NameableType {\n\n    private parent: commonreferences.Reference = null;\n    private items: Array<ItemType> = new Array<ItemType>();\n    /**\n     * @return the parent\n     */\n    public getParent(): commonreferences.Reference {\n        return this.parent;\n    }\n\n    /**\n     * @param parent the parent to set\n     */\n    public setParent(parent: commonreferences.Reference) {\n        this.parent = parent;\n    }\n\n    /**\n     * @return the items\n     */\n    public getItems(): Array<ItemType> {\n        return this.items;\n    }\n\n    /**\n     * @param items the items to set\n     */\n    public setItems(items: Array<ItemType>) {\n        this.items = items;\n    }\n\n    public getItem(i: number): ItemType {\n        return this.items[i];\n    }\n\n    public setItem(i: number, it: ItemType) {\n        this.items[i] = it;\n    }\n\n    public removeItem(it: ItemType) {\n        collections.arrays.remove(this.items, it);\n    }\n\n    public addItem(it: ItemType) {\n        this.items.push(it);\n    }\n\n    public size(): number {\n        return this.items.length;\n    }\n\n    public findItemString(s: string): structure.ItemType {\n        for (var i: number = 0; i < this.items.length; i++) {\n            if (this.items[i].identifiesMeString(s)) return this.items[i];\n        }\n        return null;\n    }\n\n    public findItem(id: commonreferences.ID): ItemType {\n        for (var i: number = 0; i < this.items.length; i++) {\n            if (this.items[i].identifiesMeId(id)) return this.items[i];\n        }\n        return null;\n    }\n\n}\n\n\n\nexport class VersionableType extends NameableType {\n    private version: commonreferences.Version = commonreferences.Version.ONE;\n    private validFrom: xml.DateTime = null;;\n    private validTo: xml.DateTime = null;\n\n    constructor() {\n        super();\n    }\n\n    getVersion(): commonreferences.Version {\n        return this.version;\n    }\n\n    /**\n     * @param version the version to set\n     */\n    setVersion(version: commonreferences.Version) {\n        this.version = version;\n    }\n    getValidFrom(): xml.DateTime {\n        return this.validFrom;\n    }\n\n    setValidFrom(validFrom: xml.DateTime) {\n        this.validFrom = validFrom;\n    }\n\n    public getValidTo(): xml.DateTime {\n        return this.validTo;\n    }\n    setValidTo(validTo: xml.DateTime) {\n        this.validTo = validTo;\n    }\n\n}\nexport class MaintainableType extends VersionableType {\n    private agencyID: commonreferences.NestedNCNameID = null;\n    private isfinal: boolean = null;\n    private isexternalReference: boolean = null;\n    private externalReferences: common.ExternalReferenceAttributeGroup = null;\n\n    /**\n     * @return the agencyID\n     */\n    public getAgencyID(): commonreferences.NestedNCNameID {\n        return this.agencyID;\n    }\n\n    setAgencyID(agencyID: commonreferences.NestedNCNameID) {\n        this.agencyID = agencyID;\n    }\n\n    isFinal(): boolean {\n        return this.isfinal;\n    }\n\n    setFinal(isFinal: boolean) {\n        this.isfinal = isFinal;\n    }\n\n    isExternalReference(): boolean {\n        return this.isexternalReference;\n    }\n\n    setExternalReference(isExternalReference: boolean) {\n        this.isexternalReference = isExternalReference;\n    }\n\n    public getExternalReferences(): common.ExternalReferenceAttributeGroup {\n        return this.externalReferences;\n    }\n\n    setExternalReferences(externalReferences: common.ExternalReferenceAttributeGroup) {\n        this.externalReferences = externalReferences;\n    }\n\n    identifiesMeStrings(agency2: string, id2: string, vers2: string): boolean {\n        return this.identifiesMe(new commonreferences.NestedNCNameID(agency2), new commonreferences.ID(id2), new commonreferences.Version(vers2));\n    }\n\n    identifiesMe(agency2: commonreferences.NestedNCNameID, id2: commonreferences.NestedID, vers2: commonreferences.Version): boolean {\n        //System.out.println(\"Left=\" + this.agencyID + \".\" + this.getId() + \".\" + this.getVersion());\n        //System.out.println(\"Right=\" + agency2 + \".\" + id2 + \".\" + vers2);\n        if (vers2 == null || this.getVersion() == null) {\n            if (this.agencyID.equalsNestedNCNameID(agency2) && this.getId().equalsID(id2)) {\n                return true;\n            } else {\n                //System.out.println(\"Doesn't Match!!\");\n                return false;\n            }\n        } else {\n            if (this.agencyID.equalsNestedNCNameID(agency2) && this.getId().equalsID(id2) && this.getVersion().equalsVersion(vers2)) {\n                return true;\n            } else {\n                //System.out.println(\"Doesn't Match!!\");\n                return false;\n            }\n        }\n    }\n    identifiesMeURI(uri: xml.anyURI): boolean {\n        var ref: commonreferences.Reference = new commonreferences.Reference(null, uri);\n        return this.identifiesMe(ref.getAgencyId(), ref.getMaintainableParentId(), ref.getVersion());\n    }\n\n    asReference(): commonreferences.Reference {\n        var ref: commonreferences.Ref = new commonreferences.Ref();\n        ref.setAgencyId(this.agencyID);\n        ref.setMaintainableParentId(this.getId());\n        ref.setMaintainableParentVersion(this.getVersion());\n        var reference: commonreferences.Reference = new commonreferences.Reference(ref, this.getURI());\n        return reference;\n    }\n}\nexport class ItemSchemeType extends MaintainableType {\n    private items: Array<ItemType> = new Array<ItemType>();\n    private partial: boolean = false;\n\n    constructor() {\n        super();\n\n    }\n\n    /**\n     * @return the items\n     */\n    public getItems(): Array<ItemType> {\n        return this.items;\n    }\n\n    /**\n     * @param items the items to set\n     */\n    public setItems(itms: Array<ItemType>) {\n        this.items = itms;\n    }\n\n    /**\n     * @return the partial\n     */\n    public isPartial(): boolean {\n        return this.partial;\n    }\n\n    /**\n     * @param partial the partial to set\n     */\n    public setPartial(partial: boolean) {\n        this.partial = partial;\n    }\n\n    public getItem(i: number): ItemType {\n        return this.items[i];\n    }\n\n    public setItem(i: number, it: ItemType) {\n        this.items[i] = it;\n    }\n\n    public removeItem(it: ItemType) {\n        this.items.splice(this.items.indexOf(it), 1);\n    }\n\n    public addItem(it: ItemType) {\n        this.items.push(it);\n    }\n\n    public size(): number {\n        return this.items.length;\n    }\n\n    public findItemString(s: string): ItemType {\n        for (var i: number = 0; i < this.items.length; i++) {\n            if (this.items[i].identifiesMeString(s)) return this.items[i];\n        }\n        return null;\n    }\n\n    public findItemId(s: commonreferences.ID): ItemType {\n        for (var i: number = 0; i < this.items.length; i++) {\n            if (this.items[i].identifiesMeId(s)) return this.items[i];\n        }\n        return null;\n    }\n\n    public findItemNestedId(s: commonreferences.NestedID): ItemType {\n        for (var i: number = 0; i < this.items.length; i++) {\n            if (this.items[i].identifiesMeNestedId(s)) return this.items[i];\n        }\n        return null;\n    }\n    public findSubItemsString(s: string): Array<ItemType> {\n        return this.findSubItemsId(new commonreferences.ID(s));\n    }\n\n    public findSubItemsId(id: commonreferences.ID): Array<ItemType> {\n        var result: Array<ItemType> = new Array<ItemType>();\n        if (id == null) {\n            for (var i: number = 0; i < this.items.length; i++) {\n                var item: ItemType = this.items[i];\n                if (item.getParent() == null) {\n                    result.push(item);\n                }\n            }\n            return result;\n        } else {\n            for (var i: number = 0; i < this.items.length; i++) {\n                var item: ItemType = this.items[i];\n                if (item.getParent().getId().equalsID(id)) {\n                    result.push(item);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport class CodeType extends ItemType {\n\n}\nexport class Codelist extends ItemSchemeType {\n    constructor() {\n        super();\n    }\n\n\n}\nexport class ConceptSchemeType extends ItemSchemeType {\n\n}\nexport class ConceptType extends ItemType {\n\n}\nexport class Dataflow {\n\n\n\n}\nexport class DataStructure {\n\n}\n\nexport class CodeLists {\n    private codelists: Array<Codelist> = [];\n\n\n    constructor() {\n\n    }\n\n    /**\n     * @return the codelists\n     */\n    getCodelists(): Array<Codelist> {\n        return this.codelists;\n    }\n\n    /**\n     * @param codelists the codelists to set\n     */\n    setCodelists(cls: Array<Codelist>) {\n        this.codelists = cls;\n    }\n    findCodelistStrings(agency: string, id: string, vers: string): Codelist {\n        var findid: commonreferences.ID = new commonreferences.ID(id);\n        var ag: commonreferences.NestedNCNameID = new commonreferences.NestedNCNameID(agency);\n        var ver: commonreferences.Version = vers == null ? null : new commonreferences.Version(vers);\n        return this.findCodelist(ag, findid, ver);\n    }\n    findCodelist(agency2: commonreferences.NestedNCNameID, findid: commonreferences.NestedID, ver: commonreferences.Version): Codelist {\n        for (var i: number = 0; i < this.codelists.length; i++) {\n            var cl2: Codelist = this.codelists[i];\n            if (cl2.identifiesMe(agency2, findid, ver)) {\n                return cl2;\n            }\n        }\n        return null;\n    }\n    findCodelistURI(uri: xml.anyURI): Codelist {\n        for (var i: number = 0; i < this.codelists.length; i++) {\n            if (this.codelists[i].identifiesMeURI(uri)) {\n                return this.codelists[i];\n            }\n        }\n        return null;\n    }\n    /*\n     * This method is used in sdmx 2.0 parsing to find a codelist with the correct ID..\n     * this is because the Dimension in the KeyFamily does not contain a complete reference\n     * only an ID.. we lookup the Codelist by it's ID, when we find a match, we can make a \n     * LocalItemSchemeReference out of it with it's AgencyID and Version.\n     */\n    findCodelistById(id: commonreferences.NestedID): Codelist {\n        var cl: Codelist = null;\n        for (var i: number = 0; i < this.codelists.length; i++) {\n            if (this.codelists[i].identifiesMeId(id)) {\n                if (cl == null) cl = this.codelists[i];\n                else {\n                    var j: number = cl.getVersion().compareTo(this.codelists[i].getVersion());\n                    switch (j) {\n                        case -1: // Less\n                            break;\n                        case 0:  // Equal\n                            break;\n                        case 1:\n                            // Our found conceptscheme has a greater version number.\n                            cl = this.codelists[i];\n                            break;\n                    }\n                }\n            }\n        }\n        return cl;\n    }\n    findCodelistReference(ref: commonreferences.Reference): Codelist {\n        return this.findCodelist(ref.getAgencyId(), ref.getMaintainableParentId(), ref.getMaintainedParentVersion());\n    }\n\n    merge(codelists: CodeLists) {\n        if (codelists == null) return;\n        for (var i: number = 0; i < codelists.getCodelists().length; i++) {\n            this.codelists.push(codelists[i]);\n        }\n    }\n}\nexport class Concepts {\n    private concepts: Array<ConceptSchemeType> = [];\n\n\n    constructor() {\n\n    }\n\n    /**\n     * @return the codelists\n     */\n    getConceptSchemes(): Array<ConceptSchemeType> {\n        return this.concepts;\n    }\n\n    /**\n     * @param codelists the codelists to set\n     */\n    setConceptSchemes(cls: Array<ConceptSchemeType>) {\n        this.concepts = cls;\n    }\n    findConceptSchemeStrings(agency: string, id: string, vers: string): ConceptSchemeType {\n        var findid: commonreferences.ID = new commonreferences.ID(id);\n        var ag: commonreferences.NestedNCNameID = new commonreferences.NestedNCNameID(agency);\n        var ver: commonreferences.Version = vers == null ? null : new commonreferences.Version(vers);\n        return this.findConceptScheme(ag, findid, ver);\n    }\n    findConceptScheme(agency2: commonreferences.NestedNCNameID, findid: commonreferences.NestedID, ver: commonreferences.Version): ConceptSchemeType {\n        for (var i: number = 0; i < this.concepts.length; i++) {\n            var cl2: ConceptSchemeType = this.concepts[i];\n            if (cl2.identifiesMe(agency2, findid, ver)) {\n                return cl2;\n            }\n        }\n        return null;\n    }\n    findConceptSchemeURI(uri: xml.anyURI): ConceptSchemeType {\n        for (var i: number = 0; i < this.concepts.length; i++) {\n            if (this.concepts[i].identifiesMeURI(uri)) {\n                return this.concepts[i];\n            }\n        }\n        return null;\n    }\n    /*\n     * This method is used in sdmx 2.0 parsing to find a codelist with the correct ID..\n     * this is because the Dimension in the KeyFamily does not contain a complete reference\n     * only an ID.. we lookup the Codelist by it's ID, when we find a match, we can make a \n     * LocalItemSchemeReference out of it with it's AgencyID and Version.\n     */\n    findConceptSchemeById(id: commonreferences.NestedID): ConceptSchemeType {\n        var cl: ConceptSchemeType = null;\n        for (var i: number = 0; i < this.concepts.length; i++) {\n            if (this.concepts[i].identifiesMeId(id)) {\n                if (cl == null) cl = this.concepts[i];\n                else {\n                    var j: number = cl.getVersion().compareTo(this.concepts[i].getVersion());\n                    switch (j) {\n                        case -1: // Less\n                            break;\n                        case 0:  // Equal\n                            break;\n                        case 1:\n                            // Our found conceptscheme has a greater version number.\n                            cl = this.concepts[i];\n                            break;\n                    }\n                }\n            }\n        }\n        return cl;\n    }\n    findConceptSchemeReference(ref: commonreferences.Reference): ConceptSchemeType {\n        return this.findConceptScheme(ref.getAgencyId(), ref.getMaintainableParentId(), ref.getMaintainedParentVersion());\n    }\n\n    merge(conceptsType: Concepts) {\n        if (conceptsType == null) return;\n        for (var i: number = 0; i < conceptsType.getConceptSchemes().length; i++) {\n            this.concepts.push(conceptsType.getConceptSchemes()[i]);\n        }\n    }\n}\nexport class DataStructures { }\n\nexport class Structures {\n    private codelists: CodeLists = null;\n    private concepts: Concepts = null;\n    private datastructures: DataStructures = null;\n    getConcepts() {\n        return this.concepts;\n    }\n    setConcepts(c: Concepts) {\n        this.concepts = c;\n    }\n    getCodeLists() {\n        return this.codelists;\n    }\n    setCodeLists(c: CodeLists) {\n        this.codelists = c;\n    }\n    getDataStructures() {\n        return this.datastructures;\n    }\n    setDataStructures(ds: DataStructures) {\n        this.datastructures = ds;\n    }\n    // Registry\n    listDataflows(): Array<structure.Dataflow> {\n        return null;\n    }\n    clear(): void {\n\n    }\n    load(struct: message.StructureType): void {\n\n    }\n    unload(struct: message.StructureType): void {\n\n    }\n    findDataStructure(ref: commonreferences.Reference): structure.DataStructure {\n        return null;\n    }\n    findDataflow(ref: commonreferences.Reference): structure.Dataflow {\n        return null;\n    }\n    findCode(ref: commonreferences.Reference): structure.CodeType {\n        return this.codelists.findCodelistReference(ref).findItemId(ref.getId());\n    }\n    findCodelist(ref: commonreferences.Reference): structure.Codelist {\n        return this.codelists.findCodelistReference(ref);\n    }\n    findItemType(item: commonreferences.Reference): structure.ItemType {\n        return null;\n    }\n    findConcept(ref: commonreferences.Reference): structure.ConceptType {\n        return this.concepts.findConceptSchemeReference(ref).findItemId(ref.getId());\n    }\n    findConceptScheme(ref: commonreferences.Reference): structure.ConceptSchemeType {\n        return this.concepts.findConceptSchemeReference(ref);\n    }\n    searchDataStructure(ref: commonreferences.Reference): Array<structure.DataStructure> {\n        return new Array<structure.ItemType>();\n    }\n    searchDataflow(ref: commonreferences.Reference): Array<structure.Dataflow> {\n        return new Array<structure.Dataflow>();\n    }\n    searchCodelist(ref: commonreferences.Reference): Array<structure.Codelist> {\n        return new Array<structure.Codelist>();\n    }\n    searchItemType(item: commonreferences.Reference): Array<structure.ItemType> {\n        return new Array<structure.ItemType>();\n    }\n    searchConcept(ref: commonreferences.Reference): Array<structure.ConceptType> {\n        return new Array<structure.ConceptType>();\n    }\n    searchConceptScheme(ref: commonreferences.Reference): Array<structure.ConceptSchemeType> {\n        return new Array<structure.ConceptSchemeType>();\n    }\n    save(): any {\n\n    }\n}"],"sourceRoot":"/source/"}