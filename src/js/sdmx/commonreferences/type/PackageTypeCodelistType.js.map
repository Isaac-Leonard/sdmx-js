{"version":3,"sources":["sdmx/commonreferences/type/PackageTypeCodelistType.ts"],"names":["sdmx","sdmx.commonreferences","sdmx.commonreferences.type","sdmx.commonreferences.type.PackageTypeCodelistType","sdmx.commonreferences.type.PackageTypeCodelistType.constructor","sdmx.commonreferences.type.PackageTypeCodelistType.add","sdmx.commonreferences.type.PackageTypeCodelistType.addString","sdmx.commonreferences.type.PackageTypeCodelistType.fromString","sdmx.commonreferences.type.PackageTypeCodelistType.fromStringWithException","sdmx.commonreferences.type.PackageTypeCodelistType.toString"],"mappings":"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","file":"sdmx/commonreferences/type/PackageTypeCodelistType.js","sourcesContent":["module sdmx.commonreferences.type {\n    export class PackageTypeCodelistType {\n\n        public static ENUM: Array<PackageTypeCodelistType> = new Array<PackageTypeCodelistType>();\n        public static STRING_ENUM: Array<String> = new Array<String>();\n\n        public static TARGET_BASE: String = PackageTypeCodelistType.addString(\"base\");\n        public static TARGET_DATASTRUCTURE: String = PackageTypeCodelistType.addString(\"datastructure\");\n        public static TARGET_METADATASTRUCTURE: String = PackageTypeCodelistType.addString(\"metadatastructure\");\n        public static TARGET_PROCESS: String = PackageTypeCodelistType.addString(\"process\");\n        public static TARGET_REGISTRY: String = PackageTypeCodelistType.addString(\"registry\");\n        public static TARGET_MAPPING: String = PackageTypeCodelistType.addString(\"mapping\");\n        public static TARGET_CODELIST: String = PackageTypeCodelistType.addString(\"codelist\");\n        public static TARGET_CATEGORYSCHEME: String = PackageTypeCodelistType.addString(\"categoryscheme\");\n        public static TARGET_CONCEPTSCHEME: String = PackageTypeCodelistType.addString(\"conceptscheme\");\n\n        public static BASE: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_BASE);\n        public static DATASTRUCTURE: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_DATASTRUCTURE);\n        public static METADATASTRUCTURE: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_METADATASTRUCTURE);\n        public static PROCESS: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_PROCESS);\n        public static REGISTRY: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_REGISTRY);\n        public static MAPPING: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_MAPPING);\n        public static CODELIST: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_CODELIST);\n        public static CATEGORYSCHEME: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_CATEGORYSCHEME);\n        public static CONCEPTSCHEME: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_CONCEPTSCHEME);\n        // Utility\n        private static add(s: String): PackageTypeCodelistType {\n            var b: PackageTypeCodelistType = new PackageTypeCodelistType(s);\n            PackageTypeCodelistType.ENUM.push(b);\n            return b;\n        }\n        private static addString(s: String): String {\n            PackageTypeCodelistType.STRING_ENUM.push(s);\n            return s;\n        }\n\n        public static fromString(s: String): PackageTypeCodelistType {\n            for (var i = 0; i < PackageTypeCodelistType.ENUM.length; i++) {\n                if (PackageTypeCodelistType.ENUM[i].target==s) return PackageTypeCodelistType.ENUM[i];\n            }\n            return null;\n        }\n        public static fromStringWithException(s: String): PackageTypeCodelistType {\n        for (var i = 0; i < PackageTypeCodelistType.ENUM.length; i++) {\n            if (PackageTypeCodelistType.ENUM[i].target==s) return PackageTypeCodelistType.ENUM[i];\n        }\n        throw new Error(\"Value:\" + s + \" not found in PackageTypeCodelistType enumeration!\");\n    }\n// Instance\n    private target: String = null;\n    constructor(s:String) {\n        var contains:boolean = false;\n        for (var i = 0; i < PackageTypeCodelistType.STRING_ENUM.length;i++) {\n            if( PackageTypeCodelistType.STRING_ENUM[i]==s) {\n                contains=true;\n            }\n        }\n        if (!contains) throw new Error(s + \" is not a valid CodeTypeCodelistType\");\n        this.target = s;\n    }\n    public toString():String { return this.target; }\n}\n}"],"sourceRoot":"/source/"}