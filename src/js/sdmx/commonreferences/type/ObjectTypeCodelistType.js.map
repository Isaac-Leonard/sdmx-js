{"version":3,"sources":["sdmx/commonreferences/type/ObjectTypeCodelistType.ts"],"names":["sdmx","sdmx.commonreferences","sdmx.commonreferences.type","sdmx.commonreferences.type.ObjectTypeCodelistType","sdmx.commonreferences.type.ObjectTypeCodelistType.constructor","sdmx.commonreferences.type.ObjectTypeCodelistType.add","sdmx.commonreferences.type.ObjectTypeCodelistType.addString","sdmx.commonreferences.type.ObjectTypeCodelistType.fromString","sdmx.commonreferences.type.ObjectTypeCodelistType.fromStringWithException","sdmx.commonreferences.type.ObjectTypeCodelistType.toString","sdmx.commonreferences.type.ObjectTypeCodelistType.toInt"],"mappings":"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","file":"sdmx/commonreferences/type/ObjectTypeCodelistType.js","sourcesContent":["/**\n *\t<xs:simpleType name=\"ObjectTypeCodelistType\">\n*\t\t<xs:annotation>\n*\t\t\t<xs:documentation>ObjectTypeCodelistType provides an enumeration of all objects outside of the base infomration model class. This includes some abstract object types such as Organsiation and Constraint.</xs:documentation>\n*\t\t</xs:annotation>\n*\t\t<xs:restriction base=\"xs:string\">\n*\t\t\t<xs:enumeration value=\"Any\"/>\n*\t\t\t<xs:enumeration value=\"Agency\"/>\n*\t\t\t<xs:enumeration value=\"AgencyScheme\"/>\n*\t\t\t<xs:enumeration value=\"AttachmentConstraint\"/>\n*\t\t\t<xs:enumeration value=\"Attribute\"/>\n*\t\t\t<xs:enumeration value=\"AttributeDescriptor\"/>\n*\t\t\t<xs:enumeration value=\"Categorisation\"/>\n*\t\t\t<xs:enumeration value=\"Category\"/>\n*\t\t\t<xs:enumeration value=\"CategorySchemeMap\"/>\n*\t\t\t<xs:enumeration value=\"CategoryScheme\"/>\n*\t\t\t<xs:enumeration value=\"Code\"/>\n*\t\t\t<xs:enumeration value=\"CodeMap\"/>\n*\t\t\t<xs:enumeration value=\"Codelist\"/>\n*\t\t\t<xs:enumeration value=\"CodelistMap\"/>\n*\t\t\t<xs:enumeration value=\"ComponentMap\"/>\n*\t\t\t<xs:enumeration value=\"Concept\"/>\n*\t\t\t<xs:enumeration value=\"ConceptMap\"/>\n*\t\t\t<xs:enumeration value=\"ConceptScheme\"/>\n*\t\t\t<xs:enumeration value=\"ConceptSchemeMap\"/>\n*\t\t\t<xs:enumeration value=\"Constraint\"/>\n*\t\t\t<xs:enumeration value=\"ConstraintTarget\"/>\n*\t\t\t<xs:enumeration value=\"ContentConstraint\"/>\n*\t\t\t<xs:enumeration value=\"Dataflow\"/>\n*\t\t\t<xs:enumeration value=\"DataConsumer\"/>\n*\t\t\t<xs:enumeration value=\"DataConsumerScheme\"/>\n*\t\t\t<xs:enumeration value=\"DataProvider\"/>\n*\t\t\t<xs:enumeration value=\"DataProviderScheme\"/>\n*\t\t\t<xs:enumeration value=\"DataSetTarget\"/>\n*\t\t\t<xs:enumeration value=\"DataStructure\"/>\n*\t\t\t<xs:enumeration value=\"Dimension\"/>\n*\t\t\t<xs:enumeration value=\"DimensionDescriptor\"/>\n*\t\t\t<xs:enumeration value=\"DimensionDescriptorValuesTarget\"/>\n*\t\t\t<xs:enumeration value=\"GroupDimensionDescriptor\"/>\n*\t\t\t<xs:enumeration value=\"HierarchicalCode\"/>\n*\t\t\t<xs:enumeration value=\"HierarchicalCodelist\"/>\n*\t\t\t<xs:enumeration value=\"Hierarchy\"/>\n*\t\t\t<xs:enumeration value=\"HybridCodelistMap\"/>\n*\t\t\t<xs:enumeration value=\"HybridCodeMap\"/>\n*\t\t\t<xs:enumeration value=\"IdentifiableObjectTarget\"/>\n*\t\t\t<xs:enumeration value=\"Level\"/>\n*\t\t\t<xs:enumeration value=\"MeasureDescriptor\"/>\n*\t\t\t<xs:enumeration value=\"MeasureDimension\"/>\n*\t\t\t<xs:enumeration value=\"Metadataflow\"/>\n*\t\t\t<xs:enumeration value=\"MetadataAttribute\"/>\n*\t\t\t<xs:enumeration value=\"MetadataSet\"/>\n*\t\t\t<xs:enumeration value=\"MetadataStructure\"/>\n*\t\t\t<xs:enumeration value=\"MetadataTarget\"/>\n*\t\t\t<xs:enumeration value=\"Organisation\"/>\n*\t\t\t<xs:enumeration value=\"OrganisationMap\"/>\n*\t\t\t<xs:enumeration value=\"OrganisationScheme\"/>\n*\t\t\t<xs:enumeration value=\"OrganisationSchemeMap\"/>\n*\t\t\t<xs:enumeration value=\"OrganisationUnit\"/>\n*\t\t\t<xs:enumeration value=\"OrganisationUnitScheme\"/>\n*\t\t\t<xs:enumeration value=\"PrimaryMeasure\"/>\n*\t\t\t<xs:enumeration value=\"Process\"/>\n*\t\t\t<xs:enumeration value=\"ProcessStep\"/>\n*\t\t\t<xs:enumeration value=\"ProvisionAgreement\"/>\n*\t\t\t<xs:enumeration value=\"ReportingCategory\"/>\n*\t\t\t<xs:enumeration value=\"ReportingCategoryMap\"/>\n*\t\t\t<xs:enumeration value=\"ReportingTaxonomy\"/>\n*\t\t\t<xs:enumeration value=\"ReportingTaxonomyMap\"/>\n*\t\t\t<xs:enumeration value=\"ReportingYearStartDay\"/>\n*\t\t\t<xs:enumeration value=\"ReportPeriodTarget\"/>\n*\t\t\t<xs:enumeration value=\"ReportStructure\"/>\n*\t\t\t<xs:enumeration value=\"StructureMap\"/>\n*\t\t\t<xs:enumeration value=\"StructureSet\"/>\n*\t\t\t<xs:enumeration value=\"TimeDimension\"/>\n*\t\t\t<xs:enumeration value=\"Transition\"/>\n*\t\t</xs:restriction>\n*\t</xs:simpleType>\n*\n * @author James\n */\n/**\n *  This file is part of SdmxSax.\n *\n *   SdmxSax is free software: you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation, either version 3 of the License, or\n *   (at your option) any later version.\n \n *   SdmxSax is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License\n *   along with SdmxSax.  If not, see <http://www.gnu.org/licenses/>.\n *\n *  Copyright James Gardner 2014\n */\nmodule sdmx.commonreferences.type {\n    export class ObjectTypeCodelistType {\n\n        public static ENUM: Array<ObjectTypeCodelistType> = new Array<ObjectTypeCodelistType>();\n        public static STRING_ENUM: Array<String> = new Array<String>();\n\n        public static TARGET_ANY: String = ObjectTypeCodelistType.addString(\"Any\");\n        public static TARGET_AGENCY: String = ObjectTypeCodelistType.addString(\"Agency\");\n\n        public static TARGET_AGENCYSCHEME: String = ObjectTypeCodelistType.addString(\"AgencyScheme\");\n        public static TARGET_ATTACHMENTCONSTRAINT: String = ObjectTypeCodelistType.addString(\"AttachmentConstraint\");\n        public static TARGET_ATTRIBUTE: String = ObjectTypeCodelistType.addString(\"Attribute\");\n        public static TARGET_ATTRIBUTEDESCRIPTOR: String = ObjectTypeCodelistType.addString(\"AttributeDescriptor\");\n        public static TARGET_CATEGORISATION: String = ObjectTypeCodelistType.addString(\"Categorisation\");\n        public static TARGET_CATEGORY: String = ObjectTypeCodelistType.addString(\"Category\");\n        public static TARGET_CATEGORYSCHEMEMAP: String = ObjectTypeCodelistType.addString(\"CategorySchemeMap\");\n        public static TARGET_CATEGORYSCHEME: String = ObjectTypeCodelistType.addString(\"CategoryScheme\");\n        public static TARGET_CODE: String = ObjectTypeCodelistType.addString(\"Code\");\n        public static TARGET_CODEMAP: String = ObjectTypeCodelistType.addString(\"CodeMap\");\n        public static TARGET_CODELIST: String = ObjectTypeCodelistType.addString(\"Codelist\");\n        public static TARGET_CODELISTMAP: String = ObjectTypeCodelistType.addString(\"CodelistMap\");\n        public static TARGET_COMPONENTMAP: String = ObjectTypeCodelistType.addString(\"ComponentMap\");\n        public static TARGET_CONCEPT: String = ObjectTypeCodelistType.addString(\"Concept\");\n        public static TARGET_CONCEPTMAP: String = ObjectTypeCodelistType.addString(\"ConceptMap\");\n        public static TARGET_CONCEPTSCHEME: String = ObjectTypeCodelistType.addString(\"ConceptScheme\");\n        public static TARGET_CONCEPTSCHEMEMAP: String = ObjectTypeCodelistType.addString(\"ConceptSchemeMap\");\n        public static TARGET_CONSTRAINT: String = ObjectTypeCodelistType.addString(\"Constraint\");\n        public static TARGET_CONSTRAINTARGET: String = ObjectTypeCodelistType.addString(\"ConstraintTarget\");\n        public static TARGET_CONTENTCONSTRAINT: String = ObjectTypeCodelistType.addString(\"ContentConstraint\");\n        public static TARGET_DATAFLOW: String = ObjectTypeCodelistType.addString(\"Dataflow\");\n        public static TARGET_DATACONSUMER: String = ObjectTypeCodelistType.addString(\"DataConsumer\");\n        public static TARGET_DATACONSUMERSCHEME: String = ObjectTypeCodelistType.addString(\"DataConsumerScheme\");\n        public static TARGET_DATAPROVIDER: String = ObjectTypeCodelistType.addString(\"DataProvider\");\n        public static TARGET_DATAPROVIDERSCHEME: String = ObjectTypeCodelistType.addString(\"DataProviderScheme\");\n        public static TARGET_DATASETTARGET: String = ObjectTypeCodelistType.addString(\"DataSetTarget\");\n        public static TARGET_DATASTRUCTURE: String = ObjectTypeCodelistType.addString(\"DataStructure\");\n        public static TARGET_DIMENSION: String = ObjectTypeCodelistType.addString(\"Dimension\");\n        public static TARGET_DIMENSIONDESCRIPTOR: String = ObjectTypeCodelistType.addString(\"DimensionDescriptor\");\n        public static TARGET_DIMENSIONDESCRIPTORVALUESTARGET: String = ObjectTypeCodelistType.addString(\"DimensionDescriptorValuesTarget\");\n        public static TARGET_GROUPDIMENSIONDESCRIPTOR: String = ObjectTypeCodelistType.addString(\"GroupDimensionDescriptor\");\n        public static TARGET_HIERARCHICALCODE: String = ObjectTypeCodelistType.addString(\"HierarchicalCode\");\n        public static TARGET_HIERARCHICALCODELIST: String = ObjectTypeCodelistType.addString(\"HierarchicalCodelist\");\n        public static TARGET_HIERARCHY: String = ObjectTypeCodelistType.addString(\"Hierarchy\");\n        public static TARGET_HYBRIDCODELISTMAP: String = ObjectTypeCodelistType.addString(\"HybridCodelistMap\");\n        public static TARGET_HYBRIDCODEMAP: String = ObjectTypeCodelistType.addString(\"HybridCodeMap\");\n        public static TARGET_IDENTIFIABLEOBJECTTARGET: String = ObjectTypeCodelistType.addString(\"IdentifiableObjectTarget\");\n        public static TARGET_LEVEL: String = ObjectTypeCodelistType.addString(\"Level\");\n        public static TARGET_MEASUREDESCRIPTOR: String = ObjectTypeCodelistType.addString(\"MeasureDescriptor\");\n        public static TARGET_MEASUREDIMENSION: String = ObjectTypeCodelistType.addString(\"MeasureDimension\");\n        public static TARGET_METADATAFLOW: String = ObjectTypeCodelistType.addString(\"Metadataflow\");\n        public static TARGET_METADATAATTRIBUTE: String = ObjectTypeCodelistType.addString(\"MetadataAttribute\");\n        public static TARGET_METADATASET: String = ObjectTypeCodelistType.addString(\"MetadataSet\");\n        public static TARGET_METADATASTRUCTURE: String = ObjectTypeCodelistType.addString(\"MetadataStructure\");\n        public static TARGET_METADATATARGET: String = ObjectTypeCodelistType.addString(\"MetadataTarget\");\n        public static TARGET_ORGANISATION: String = ObjectTypeCodelistType.addString(\"Organisation\");\n        public static TARGET_ORGANISATIONMAP: String = ObjectTypeCodelistType.addString(\"OrganisationMap\");\n        public static TARGET_ORGANISATIONSCHEME: String = ObjectTypeCodelistType.addString(\"OrganisationScheme\");\n        public static TARGET_ORGANISATIONSCHEMEMAP: String = ObjectTypeCodelistType.addString(\"OrganisationSchemeMap\");\n        public static TARGET_ORGANISATIONUNIT: String = ObjectTypeCodelistType.addString(\"OrganisationUnit\");\n        public static TARGET_ORGANISATIONUNITSCHEME: String = ObjectTypeCodelistType.addString(\"OrganisationUnitScheme\");\n        public static TARGET_PRIMARYMEASURE: String = ObjectTypeCodelistType.addString(\"PrimaryMeasure\");\n        public static TARGET_PROCESS: String = ObjectTypeCodelistType.addString(\"Process\");\n        public static TARGET_PROCESSSTEP: String = ObjectTypeCodelistType.addString(\"ProcessStep\");\n        public static TARGET_PROVISIONAGREEMENT: String = ObjectTypeCodelistType.addString(\"ProvisionAgreement\");\n        public static TARGET_REPORTINGCATEGORY: String = ObjectTypeCodelistType.addString(\"ReportingCategory\");\n        public static TARGET_REPORTINGCATEGORYMAP: String = ObjectTypeCodelistType.addString(\"ReportingCategoryMap\");\n        public static TARGET_REPORTINGTAXONOMY: String = ObjectTypeCodelistType.addString(\"ReportingTaxonomy\");\n        public static TARGET_REPORTINGTAXONOMYMAP: String = ObjectTypeCodelistType.addString(\"ReportingTaxonomyMap\");\n        public static TARGET_REPORTINGYEARSTARTDAY: String = ObjectTypeCodelistType.addString(\"ReportingYearStartDay\");\n        public static TARGET_REPORTPERIODTARGET: String = ObjectTypeCodelistType.addString(\"ReportPeriodTarget\");\n        public static TARGET_REPORTSTRUCTURE: String = ObjectTypeCodelistType.addString(\"ReportStructure\");\n        public static TARGET_STRUCTUREMAP: String = ObjectTypeCodelistType.addString(\"StructureMap\");\n        public static TARGET_STRUCTURESET: String = ObjectTypeCodelistType.addString(\"StructureSet\");\n        public static TARGET_TIMEDIMENSION: String = ObjectTypeCodelistType.addString(\"TimeDimension\");\n        public static TARGET_TRANSITION: String = ObjectTypeCodelistType.addString(\"Transition\");\n\n        public static ANY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ANY);\n        public static AGENCY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_AGENCY);\n        public static AGENCYSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_AGENCYSCHEME);\n        public static ATTACHMENTCONSTRAINT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ATTACHMENTCONSTRAINT);\n        public static ATTRIBUTE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ATTRIBUTE);\n        public static ATTRIBUTEDESCRIPTOR: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ATTRIBUTEDESCRIPTOR);\n        public static CATEGORISATION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CATEGORISATION);\n        public static CATEGORY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CATEGORY);\n        public static CATEGORYSCHEMEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CATEGORYSCHEMEMAP);\n        public static CATEGORYSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CATEGORYSCHEME);\n        public static CODE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CODE);\n        public static CODEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CODE);\n        public static CODELIST: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CODELIST);\n        public static CODELISTMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CODELISTMAP);\n        public static COMPONENTMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_COMPONENTMAP);\n        public static CONCEPT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONCEPT);\n        public static CONCEPTMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONCEPTMAP);\n        public static CONCEPTSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONCEPTSCHEME);\n        public static CONCEPTSCHEMEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONCEPTSCHEMEMAP);\n        public static CONSTRAINT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONSTRAINT);\n        public static CONSTRAINTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONSTRAINTARGET);\n        public static CONTENTCONSTRAINT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONTENTCONSTRAINT);\n        public static DATAFLOW: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATAFLOW);\n        public static DATACONSUMER: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATACONSUMER);\n        public static DATACONSUMERSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATACONSUMERSCHEME);\n        public static DATAPROVIDER: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATAPROVIDER);\n        public static DATAPROVIDERSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATAPROVIDERSCHEME);\n        public static DATASETTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATASETTARGET);\n        public static DATASTRUCTURE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATASTRUCTURE);\n        public static DIMENSION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DIMENSION);\n        public static DIMENSIONDESCRIPTOR: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DIMENSIONDESCRIPTOR);\n        public static DIMENSIONDESCRIPTORVALUESTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DIMENSIONDESCRIPTORVALUESTARGET);\n        public static GROUPDIMENSIONDESCRIPTOR: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_GROUPDIMENSIONDESCRIPTOR);\n        public static HIERARCHICALCODE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HIERARCHICALCODE);\n        public static HIERARCHICALCODELIST: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HIERARCHICALCODELIST);\n        public static HIERARCHY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HIERARCHY);\n        public static HYBRIDCODELISTMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HYBRIDCODELISTMAP);\n        public static HYBRIDCODEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HYBRIDCODEMAP);\n        public static IDENTIFIABLEOBJECTTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_IDENTIFIABLEOBJECTTARGET);\n        public static LEVEL: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_LEVEL);\n        public static MEASUREDESCRIPTOR: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_MEASUREDESCRIPTOR);\n        public static MEASUREDIMENSION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_MEASUREDIMENSION);\n        public static METADATAFLOW: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATAFLOW);\n        public static METADATAATTRIBUTE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATAATTRIBUTE);\n        public static METADATASET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATASET);\n        public static METADATASTRUCTURE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATASTRUCTURE);\n        public static METADATATARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATATARGET);\n        public static ORGANISATION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATION);\n        public static ORGANISATIONMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONMAP);\n        public static ORGANISATIONSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONSCHEME);\n        public static ORGANISATIONSCHEMEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONSCHEMEMAP);\n        public static ORGANISATIONUNIT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONUNIT);\n        public static ORGANISATIONUNITSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONUNITSCHEME);\n        public static PRIMARYMEASURE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_PRIMARYMEASURE);\n        public static PROCESS: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_PROCESS);\n        public static PROCESSSTEP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_PROCESSSTEP);\n        public static PROVISIONAGREEMENT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_PROVISIONAGREEMENT);\n        public static REPORTINGCATEGORY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGCATEGORY);\n        public static REPORTINGCATEGORYMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGCATEGORYMAP);\n        public static REPORTINGTAXONOMY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGTAXONOMY);\n        public static REPORTINGTAXONOMYMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGTAXONOMYMAP);\n        public static REPORTINGYEARSTARTDAY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGYEARSTARTDAY);\n        public static REPORTPERIODTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTPERIODTARGET);\n        public static REPORTSTRUCTURE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTSTRUCTURE);\n        public static STRUCTUREMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_STRUCTUREMAP);\n        public static STRUCTURESET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_STRUCTURESET);\n        public static TIMEDIMENSION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_TIMEDIMENSION);\n        public static TRANSITION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_TRANSITION);\n\n        public static INT_ANY: number = 0;\n        public static INT_AGENCY: number = 1;\n        public static INT_AGENCYSCHEME: number = 2;\n        public static INT_ATTACHMENTCONSTRAINT: number = 3;\n        public static INT_ATTRIBUTE: number = 4;\n        public static INT_ATTRIBUTEDESCRIPTOR: number = 5;\n        public static INT_CATEGORISATION: number = 6;\n        public static INT_CATEGORY: number = 7;\n        public static INT_CATEGORYSCHEMEMAP: number = 8;\n        public static INT_CATEGORYSCHEME: number = 9;\n        public static INT_CODE: number = 10;\n        public static INT_CODEMAP: number = 11;\n        public static INT_CODELIST: number = 12;\n        public static INT_CODELISTMAP: number = 13;\n        public static INT_COMPONENTMAP: number = 14;\n        public static INT_CONCEPT: number = 15;\n        public static INT_CONCEPTMAP: number = 16;\n        public static INT_CONCEPTSCHEME: number = 17;\n        public static INT_CONCEPTSCHEMEMAP: number = 18;\n        public static INT_CONSTRAINT: number = 19;\n        public static INT_CONSTRAINTARGET: number = 20;\n        public static INT_CONTENTCONSTRAINT: number = 21;\n        public static INT_DATAFLOW: number = 22;\n        public static INT_DATACONSUMER: number = 23;\n        public static INT_DATACONSUMERSCHEME: number = 24;\n        public static INT_DATAPROVIDER: number = 25;\n        public static INT_DATAPROVIDERSCHEME: number = 26;\n        public static INT_DATASETTARGET: number = 27;\n        public static INT_DATASTRUCTURE: number = 28;\n        public static INT_DIMENSION: number = 29;\n        public static INT_DIMENSIONDESCRIPTOR: number = 30;\n        public static INT_DIMENSIONDESCRIPTORVALUESTARGET: number = 31;\n        public static INT_GROUPDIMENSIONDESCRIPTOR: number = 32;\n        public static INT_HIERARCHICALCODE: number = 33;\n        public static INT_HIERARCHICALCODELIST: number = 34;\n        public static INT_HIERARCHY: number = 35;\n        public static INT_HYBRIDCODELISTMAP: number = 36;\n        public static INT_HYBRIDCODEMAP: number = 37;\n        public static INT_IDENTIFIABLEOBJECTTARGET: number = 38;\n        public static INT_LEVEL: number = 39;\n        public static INT_MEASUREDESCRIPTOR: number = 40;\n        public static INT_MEASUREDIMENSION: number = 41;\n        public static INT_METADATAFLOW: number = 42;\n        public static INT_METADATAATTRIBUTE: number = 43;\n        public static INT_METADATASET: number = 44;\n        public static INT_METADATASTRUCTURE: number = 45;\n        public static INT_METADATATARGET: number = 46;\n        public static INT_ORGANISATION: number = 47;\n        public static INT_ORGANISATIONMAP: number = 48;\n        public static INT_ORGANISATIONSCHEME: number = 49;\n        public static INT_ORGANISATIONSCHEMEMAP: number = 50;\n        public static INT_ORGANISATIONUNIT: number = 51;\n        public static INT_ORGANISATIONUNITSCHEME: number = 52;\n        public static INT_PRIMARYMEASURE: number = 53;\n        public static INT_PROCESS: number = 54;\n        public static INT_PROCESSSTEP: number = 55;\n        public static INT_PROVISIONAGREEMENT: number = 56;\n        public static INT_REPORTINGCATEGORY: number = 57;\n        public static INT_REPORTINGCATEGORYMAP: number = 58;\n        public static INT_REPORTINGTAXONOMY: number = 59;\n        public static INT_REPORTINGTAXONOMYMAP: number = 60;\n        public static INT_REPORTINGYEARSTARTDAY: number = 61;\n        public static INT_REPORTPERIODTARGET: number = 62;\n        public static INT_REPORTSTRUCTURE: number = 63;\n        public static INT_STRUCTUREMAP: number = 64;\n        public static INT_STRUCTURESET: number = 65;\n        public static INT_TIMEDIMENSION: number = 66;\n        public static INT_TRANSITION: number = 67;\n\n        // Utility\n        private static add(s: String): ObjectTypeCodelistType {\n            var b: ObjectTypeCodelistType = new ObjectTypeCodelistType(s);\n            ObjectTypeCodelistType.ENUM.push(b);\n            return b;\n        }\n        private static addString(s: String): String {\n            ObjectTypeCodelistType.STRING_ENUM.push(s);\n            return s;\n        }\n\n        public static fromString(s: String): ObjectTypeCodelistType {\n            for (var i: number = 0; i < ObjectTypeCodelistType.ENUM.length; i++) {\n                if (ObjectTypeCodelistType.ENUM[i].target == s) return ObjectTypeCodelistType.ENUM[i];\n            }\n            return null;\n        }\n        public static fromStringWithException(s: String): ObjectTypeCodelistType {\n            for (var i: number = 0; i < ObjectTypeCodelistType.ENUM.length; i++) {\n                if (ObjectTypeCodelistType.ENUM[i].target == s) return ObjectTypeCodelistType.ENUM[i];\n            }\n            throw new Error(\"Value:\" + s + \" not found in enumeration! - ObjectypeCodelistType\");\n        }\n        // Instance\n        private target: String = null;\n        private index: number = -1;\n        public constructor(s: String) {\n            var contains: boolean = false;\n            for (var i = 0; i < ObjectTypeCodelistType.STRING_ENUM.length; i++) {\n                if (ObjectTypeCodelistType.STRING_ENUM[i] == s) {\n                    contains = true;\n                }\n            }\n            if (!contains) throw new Error(s + \" is not a valid CodeTypeCodelistType\");\n            this.target = s;\n            this.index = ObjectTypeCodelistType.STRING_ENUM.indexOf(s);\n        }\n        public toString(): String { return this.target; }\n        public toInt(): number {\n            return this.index;\n        }\n    }\n}"],"sourceRoot":"/source/"}