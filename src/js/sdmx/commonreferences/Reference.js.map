{"version":3,"sources":["sdmx/commonreferences/Reference.ts"],"names":["sdmx","sdmx.commonreferences","sdmx.commonreferences.Reference","sdmx.commonreferences.Reference.constructor","sdmx.commonreferences.Reference.getRef","sdmx.commonreferences.Reference.setRef","sdmx.commonreferences.Reference.getUrn","sdmx.commonreferences.Reference.setUrn","sdmx.commonreferences.Reference.getPack","sdmx.commonreferences.Reference.getRefClass","sdmx.commonreferences.Reference.getClazz","sdmx.commonreferences.Reference.getAgencyId","sdmx.commonreferences.Reference.getMaintainableParentId","sdmx.commonreferences.Reference.getVersion","sdmx.commonreferences.Reference.getId","sdmx.commonreferences.Reference.getContainedObjectIds","sdmx.commonreferences.Reference.getMaintainedParentVersion","sdmx.commonreferences.Reference.dump","sdmx.commonreferences.Reference.toString","sdmx.commonreferences.Reference.parse","sdmx.commonreferences.Reference.produce"],"mappings":"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","file":"sdmx/commonreferences/Reference.js","sourcesContent":["/// <reference path=\"../../xml/anyURI.ts\" />\nmodule sdmx.commonreferences {\n    export class Reference {\n        public urn: xml.anyURI;\n        public ref: Ref;\n\n        private pack: sdmx.commonreferences.type.PackageTypeCodelistType = null;\n        private clazz: sdmx.commonreferences.type.ObjectTypeCodelistType = null;\n        private agency: NestedNCNameID = null;\n        private maintainedParentId: IDType = null;\n        private maintainedParentVersion: Version = null;\n        private version: Version = null;\n        private containedIds: Array<IDType> = null;\n        private objectId: NestedID = null;\n\n        constructor(ref: Ref, urn: xml.anyURI) {\n            this.ref = ref;\n            this.urn = urn;\n            if (this.ref != null) {\n                //try {\n                this.pack = ref.getPack();\n                this.clazz = ref.getRefClass();\n                this.agency = ref.getAgencyId();\n                this.objectId = ref.getId();\n                this.maintainedParentId = ref.getMaintainableParentId();\n                this.maintainedParentVersion = ref.getMaintainableParentVersion();\n                this.version = ref.getVersion();\n                //} catch (URISyntaxException ex) {\n                //    Logger.getLogger(ReferenceType.class.getName()).log(Level.SEVERE, null, ex);\n                //}\n            } else {\n                this.parse();\n            }\n            if (this.urn == null) {\n                try {\n                    //if (this.getAgencyId() != null) {\n                    this.produce();\n                    //}\n                } catch (Error) {\n                }\n            }\n        }\n\n        /**\n         * @return the ref\n         */\n        public getRef(): Ref {\n            return this.ref;\n        }\n\n        /**\n         * @param ref the ref to set\n         */\n        public setRef(ref: Ref) {\n            this.ref = ref;\n        }\n\n        /**\n         * @return the urn\n         */\n        public getUrn(): xml.anyURI {\n            return this.urn;\n        }\n\n        /**\n         * @param urn the urn to set\n         */\n        public setUrn(urn: xml.anyURI) {\n            this.urn = urn;\n        }\n\n        /**\n         * @return the pack\n         */\n        public getPack(): sdmx.commonreferences.type.PackageTypeCodelistType {\n            return this.pack;\n        }\n\n        /**\n         * @return the clazz\n         */\n        public getRefClass(): sdmx.commonreferences.type.ObjectTypeCodelistType {\n            return this.clazz;\n        }\n\n        /**\n         * @return the clazz\n         */\n        public getClazz(): sdmx.commonreferences.type.ObjectTypeCodelistType {\n            return this.clazz;\n        }\n\n        /**\n         * @return the agency\n         */\n        public getAgencyId(): sdmx.commonreferences.NestedNCNameID {\n            return this.agency;\n        }\n\n        /**\n         * @return the maintainedObjectId\n         */\n        public getMaintainableParentId(): sdmx.commonreferences.IDType {\n            return this.maintainedParentId;\n        }\n\n        /**\n         * @return the maintainedObjectVersion\n         */\n        public getVersion(): sdmx.commonreferences.Version {\n            return this.version;\n        }\n\n        /**\n         * @return the objectId\n         */\n        public getId(): sdmx.commonreferences.NestedID {\n            return this.objectId;\n        }\n\n        public getContainedObjectIds(): Array<IDType> {\n            return this.containedIds;\n        }\n\n        /**\n         * @return the maintainedParentVersion\n         */\n        public getMaintainedParentVersion(): sdmx.commonreferences.Version {\n            return this.maintainedParentVersion;\n        }\n        //public IDType getMainID() {\n        //    if( this.maintainedParentId==null ) return objectId!=null?objectId.asID():null;\n        //    else return maintainedParentId;\n        //}\n\n        public dump() {\n        }\n\n        public toString(): String {\n            var s: String = \"\";\n            return s;\n        }\n        public parse() {\n            \n        }\n        public produce() {\n            \n        }\n    }\n}"],"sourceRoot":"/source/"}