{"version":3,"sources":["sdmx/nomis.ts"],"names":["parseXml","NOMISRESTServiceRegistry","NOMISRESTServiceRegistry.constructor","NOMISRESTServiceRegistry.getRemoteRegistry","NOMISRESTServiceRegistry.getRepository","NOMISRESTServiceRegistry.clear","NOMISRESTServiceRegistry.query","NOMISRESTServiceRegistry.load","NOMISRESTServiceRegistry.unload","NOMISRESTServiceRegistry.makeRequest","NOMISRESTServiceRegistry.retrieve","NOMISRESTServiceRegistry.retrieveData","NOMISRESTServiceRegistry.retrieve2","NOMISRESTServiceRegistry.findDataStructure","NOMISRESTServiceRegistry.listDataflows","NOMISRESTServiceRegistry.getServiceURL","NOMISRESTServiceRegistry.parseGeography","NOMISRESTServiceRegistry.recurseDomChildren","NOMISRESTServiceRegistry.loopNodeChildren","NOMISRESTServiceRegistry.outputNode","NOMISRESTServiceRegistry.findNodeName","NOMISRESTServiceRegistry.searchNodeName","NOMISRESTServiceRegistry.findDataflow","NOMISRESTServiceRegistry.findCode","NOMISRESTServiceRegistry.findCodelist","NOMISRESTServiceRegistry.findItemType","NOMISRESTServiceRegistry.findConcept","NOMISRESTServiceRegistry.findConceptScheme","NOMISRESTServiceRegistry.searchDataStructure","NOMISRESTServiceRegistry.searchDataflow","NOMISRESTServiceRegistry.searchCodelist","NOMISRESTServiceRegistry.searchItemType","NOMISRESTServiceRegistry.searchConcept","NOMISRESTServiceRegistry.searchConceptScheme","NOMISRESTServiceRegistry.getLocalRegistry","NOMISRESTServiceRegistry.save","NOMISGeography","NOMISGeography.constructor","NOMISGeography.getGeography","NOMISGeography.getCubeName","NOMISGeography.getCubeId","NOMISGeography.getGeographyName"],"mappings":"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","file":"sdmx/nomis.js","sourcesContent":["/*\n    This file is part of sdmx-js.\n\n    sdmx-js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    sdmx-js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\n    Copyright (C) 2016 James Gardner\n*/\n///<reference path=\"../es6-promise.d.ts\"/>\n///<reference path=\"../moment.d.ts\"/>\nimport moment = require(\"moment\");\nimport interfaces = require(\"sdmx/interfaces\");\nimport registry = require(\"sdmx/registry\");\nimport structure = require(\"sdmx/structure\");\nimport message = require(\"sdmx/message\");\nimport commonreferences = require(\"sdmx/commonreferences\");\nimport common = require(\"sdmx/common\");\nimport sdmx = require(\"sdmx\");\nimport data = require(\"sdmx/data\");\nimport time = require(\"sdmx/time\");\nexport function parseXml(s: string): any {\n    var parseXml: DOMParser;\n    parseXml = new DOMParser();\n    var xmlDoc = parseXml.parseFromString(s, \"text/xml\");\n    return xmlDoc;\n}\nexport class NOMISRESTServiceRegistry implements interfaces.RemoteRegistry, interfaces.Queryable {\n\n    private agency: string = \"NOMIS\";\n    private serviceURL: string = \"https://www.nomisweb.co.uk/api\";\n    private options: string = \"uid=0xad235cca367972d98bd642ef04ea259da5de264f\";\n    private local: interfaces.LocalRegistry = new registry.LocalRegistry();\n\n    private dataflowList: Array<structure.Dataflow> = null;\n\n    getRemoteRegistry(): interfaces.RemoteRegistry {\n        return this;\n    }\n\n    getRepository(): interfaces.Repository {\n        return null;\n\n    }\n\n    clear() {\n        this.local.clear();\n    }\n    query(flow: commonreferences.Reference, q: data.Query, startTime: string, endTime: string): Promise<message.DataMessage> {\n        var geogIndex: number = flow.getMaintainableParentId().toString().lastIndexOf(\"_\");\n        var geog: string = flow.getMaintainableParentId().toString().substring(geogIndex + 1, flow.getMaintainableParentId().toString().length);\n        var geography_string: string = \"&geography=\" + geog;\n        if (\"NOGEOG\" == geog) {\n            geography_string = \"\";\n        }\n        var id: string = flow.getMaintainableParentId().toString().substring(0, geogIndex);\n        var dst_ref: commonreferences.Ref = new commonreferences.Ref();\n        dst_ref.setAgencyId(flow.getAgencyId());\n        dst_ref.setId(new commonreferences.ID(id));\n        dst_ref.setVersion(flow.getVersion());\n        var dst_reference = new commonreferences.Reference(dst_ref, null);\n        var st: Promise<message.StructureType> = this.retrieve(this.getServiceURL() + \"/v01/dataset/\" + id + \"/time/def.sdmx.xml\");\n        return st.then(function(struc: message.StructureType) {\n            var times: string = \"&TIME=\";\n            var timeCL: structure.Codelist = struc.getStructures().getCodeLists().getCodelists()[0];\n            var rtpStart: time.RegularTimePeriod = time.TimeUtil.parseTime(\"\", startTime);\n            var rtpEnd: time.RegularTimePeriod = time.TimeUtil.parseTime(\"\", endTime);\n            var comma: boolean = true;\n            for (var i: number = 0; i < timeCL.size(); i++) {\n                var rtp: time.RegularTimePeriod = time.TimeUtil.parseTime(\"\", timeCL.getItems()[i].getId().toString());\n                var ts = moment(rtp.getStart());\n                var te = moment(rtp.getEnd());\n                var startMoment = moment(rtpStart.getStart());\n                var endMoment = moment(rtpEnd.getEnd());\n                if (ts.isBetween(startMoment, endMoment)) {\n                    if (!comma) {\n                        times += \",\";\n                        comma = true;\n                    }\n                    times += timeCL.getItem(i).getId().toString();\n                    comma = false;\n                }\n            }\n            var queryString: string = \"\";\n            var kns = q.getKeyNames();\n            for (var i: number = 0; i < kns.length; i++) {\n                var name: string = kns[i];\n                var values = q.getQueryKey(kns[i]).getValues();\n                if (i == 0) {\n                    queryString += \"?\";\n                } else {\n                    queryString += \"&\";\n                }\n                queryString += name + \"=\";\n                for (var j: number = 0; j < values.length; j++) {\n                    queryString += values[j];\n                    if (j < values.length - 1) {\n                        queryString += \",\";\n                    }\n                }\n            }\n            return this.retrieveData(\"http://www.nomisweb.co.uk/api/v01/dataset/\" + dst_ref.getId() + \".compact.sdmx.xml\" + queryString + times + \"&\"+this.options);\n        }.bind(this));\n        /*\n        StringBuilder q = new StringBuilder();\n        for (int i = 0; i < structure.getDataStructureComponents().getDimensionList().size(); i++) {\n            DimensionType dim = structure.getDataStructureComponents().getDimensionList().getDimension(i);\n            boolean addedParam = false;\n            String concept = dim.getConceptIdentity().getId().toString();\n            List<String> params = message.getQuery().getDataWhere().getAnd().get(0).getDimensionParameters(concept);\n            System.out.println(\"Params=\" + params);\n            if (params.size() > 0) {\n                addedParam = true;\n                q.append(concept + \"=\");\n                for (int j = 0; j < params.size(); j++) {\n                    q.append(params.get(j));\n                    if (j < params.size() - 1) {\n                        q.append(\",\");\n                    }\n                }\n            }\n            if (addedParam && i < structure.getDataStructureComponents().getDimensionList().size() - 1) {\n                q.append(\"&\");\n            }\n            addedParam = false;\n        }\n        DataMessage msg = null;\n        msg = query(pparams, getServiceURL() + \"/v01/dataset/\" + id + \".compact.sdmx.xml?\" + q + \"&time=\" + times.toString() + geography_string +\"&\" + options);\n        */\n        //return null;\n    }\n    constructor(agency: string, service: string, options: string) {\n        if (service != null) {\n            this.serviceURL = service;\n        } else {\n\n        }\n        if (agency != null) {\n            this.agency = agency;\n        }\n        if (options != null) {\n            this.options = options;\n        }\n    }\n\n    load(struct: message.StructureType) {\n        console.log(\"nomis load\");\n        this.local.load(struct);\n    }\n\n    unload(struct: message.StructureType) {\n        this.local.unload(struct);\n    }\n    makeRequest(opts): Promise<string> {\n        return new Promise(function(resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            console.log(\"nomis retrieve:\" + opts.url);\n            xhr.open(opts.method, opts.url);\n            xhr.onload = function() {\n                if (this.status >= 200 && this.status < 300) {\n                    resolve(xhr.responseText);\n                } else {\n                    reject({\n                        status: this.status,\n                        statusText: xhr.statusText\n                    });\n                }\n            };\n            xhr.onerror = function() {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            };\n            if (opts.headers) {\n                Object.keys(opts.headers).forEach(function(key) {\n                    xhr.setRequestHeader(key, opts.headers[key]);\n                });\n            }\n            var params = opts.params;\n            // We'll need to stringify if we've been given an object\n            // If we have a string, this is skipped.\n            if (params && typeof params === 'object') {\n                params = Object.keys(params).map(function(key) {\n                    return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n                }).join('&');\n            }\n            xhr.send(params);\n        });\n    }\n    public retrieve(urlString: string): Promise<message.StructureType> {\n        var s: string = this.options;\n        if (urlString.indexOf(\"?\") == -1) {\n            s = \"?\" + s + \"&random=\" + new Date().getTime();\n        } else {\n            s = \"&\" + s + \"&random=\" + new Date().getTime();\n        }\n        var opts: any = {};\n        opts.url = urlString + s;\n        opts.method = \"GET\";\n        return this.makeRequest(opts).then(function(a) {\n            return sdmx.SdmxIO.parseStructure(a);\n        });\n    }\n    public retrieveData(urlString: string): Promise<message.DataMessage> {\n        var s: string = this.options;\n        if (urlString.indexOf(\"?\") == -1) {\n            s = \"?\" + s + \"&random=\" + new Date().getTime();\n        } else {\n            s = \"&\" + s + \"&random=\" + new Date().getTime();\n        }\n        var opts: any = {};\n        opts.url = urlString + s;\n        opts.method = \"GET\";\n        return this.makeRequest(opts).then(function(a) {\n            return sdmx.SdmxIO.parseData(a);\n        });\n    }\n    public retrieve2(urlString: string): Promise<string> {\n        console.log(\"nomis retrieve:\" + urlString);\n        var s: string = this.options;\n        if (urlString.indexOf(\"?\") == -1) {\n            s = \"?\" + s + \"&random=\" + new Date().getTime();\n        } else {\n            s = \"&\" + s + \"&random=\" + new Date().getTime();\n        }\n        var opts: any = {};\n        opts.url = urlString;\n        opts.method = \"GET\";\n        return this.makeRequest(opts).then(function(a) {\n            return a;\n        });\n    }\n    /*\n      This function ignores the version argument!!!\n      ILO stat does not use version numbers.. simply take the latest\n     */\n\n    public findDataStructure(ref: commonreferences.Reference): Promise<structure.DataStructure> {\n        var dst: structure.DataStructure = this.local.findDataStructure(ref);\n        if (dst != null) {\n            var promise = new Promise(function(resolve, reject) {\n                resolve(dst);\n            }.bind(this));\n            return promise;\n        } else {\n            var geogIndex = ref.getMaintainableParentId().toString().lastIndexOf(\"_\");\n            var geog: string = ref.getMaintainableParentId().toString().substring(geogIndex + 1, ref.getMaintainableParentId().toString().length);\n            var geography_string: string = \"geography=\" + geog;\n            if (\"NOGEOG\" == geog) {\n                geography_string = \"\";\n            }\n            var id: string = ref.getMaintainableParentId().toString().substring(0, geogIndex);\n            return this.retrieve(this.getServiceURL() + \"/v01/dataset/\" + id + \".structure.sdmx.xml?\" + geography_string).then(function(a) {\n                a.getStructures().getDataStructures().getDataStructures()[0].setId(ref.getMaintainableParentId());\n                a.getStructures().getDataStructures().getDataStructures()[0].setVersion(ref.getVersion());\n                this.load(a);\n                return this.local.findDataStructure(ref);\n            }.bind(this));\n        }\n    }\n    public listDataflows(): Promise<Array<structure.Dataflow>> {\n        if (this.dataflowList != null) {\n            var promise = new Promise(function(resolve, reject) {\n                resolve(this.dataflowList);\n            }.bind(this));\n            return promise;\n        } else {\n            var promise = new Promise(function(resolve, reject) {\n                var st: message.StructureType = this.retrieve(this.serviceURL + \"/v01/dataset/def.sdmx.xml\");\n                var list: Array<structure.DataStructure> = st.getStructures().getDataStructures().getDataStructures();\n                var dfs: Array<structure.Dataflow> = [];\n                for (var i: number = 0; i < list.length; i++) {\n                    var dst: structure.DataStructure = list[i];\n                    var cubeId: string = structure.NameableType.toIDString(dst);\n                    var cubeName: string = dst.findName(\"en\").getText();\n                    var url: string = this.serviceURL + \"/v01/dataset/\" + cubeId + \".overview.xml\";\n                    var geogList: Array<NOMISGeography> = this.parseGeography(this.retrieve2(url), cubeId, cubeName);\n                    for (var j = 0; j < geogList.length; j++) {\n                        var dataFlow: structure.Dataflow = new structure.Dataflow();\n                        dataFlow.setAgencyID(new commonreferences.NestedNCNameID((this.agency)));\n                        dataFlow.setId(new commonreferences.ID(cubeId + \"_\" + geogList[j].getGeography()));\n                        var name: common.Name = new common.Name(\"en\", cubeName + \" \" + geogList[j].getGeographyName());\n                        var names: Array<common.Name> = [];\n                        names.push(name);\n                        dataFlow.setNames(names);\n                        var ref: commonreferences.Ref = new commonreferences.Ref();\n                        ref.setAgencyId(new commonreferences.NestedNCNameID(this.agency));\n                        ref.setMaintainableParentId(dataFlow.getId());\n                        ref.setVersion(commonreferences.Version.ONE);\n                        var reference = new commonreferences.Reference(ref, null);\n                        dataFlow.setStructure(reference);\n                        dfs.push(dataFlow);\n                    }\n                    if (geogList.length == 0) {\n                        var dataFlow: structure.Dataflow = new structure.Dataflow();\n                        dataFlow.setAgencyID(new commonreferences.NestedNCNameID((this.agency)));\n                        dataFlow.setId(new commonreferences.ID(cubeId + \"_NOGEOG\"));\n                        var name: common.Name = new common.Name(\"en\", cubeName);\n                        var names: Array<common.Name> = [];\n                        names.push(name);\n                        dataFlow.setNames(names);\n                        var ref: commonreferences.Ref = new commonreferences.Ref();\n                        ref.setAgencyId(new commonreferences.NestedNCNameID(this.agency));\n                        ref.setMaintainableParentId(dataFlow.getId());\n                        ref.setVersion(commonreferences.Version.ONE);\n                        var reference = new commonreferences.Reference(ref, null);\n                        dataFlow.setStructure(reference);\n                        dfs.push(dataFlow);\n                    }\n                }\n                this.dataflowList = dfs;\n                resolve(dfs);\n            }.bind(this));\n            return promise;\n        }\n\n    }\n    public getServiceURL(): string {\n        return this.serviceURL;\n    }\n    public parseGeography(doc: string, cubeId: string, cubeName: string): Array<NOMISGeography> {\n        var geogList: Array<NOMISGeography> = [];\n        var tagContent: string = null;\n        var lastLang: string = null;\n        var xmlDoc = parseXml(doc);\n        var dimNode = this.findNodeName(\"Dimensions\", xmlDoc.documentElement.childNodes);\n        var dimsNode = this.searchNodeName(\"Dimension\", dimNode.childNodes);\n        var geogNode = null;\n        for (var i = 0; i < dimsNode.length; i++) {\n            if (dimsNode[i].getAttribute(\"concept\") == \"geography\") {\n                geogNode = dimsNode[i];\n            }\n        }\n        if (geogNode == null) return geogList;\n        var typesNode = this.findNodeName(\"Types\", geogNode.childNodes);\n        if (typesNode == null) return geogList;\n        var typeArray = this.searchNodeName(\"Type\", typesNode.childNodes);\n        if (typeArray.length == 0) {\n            return geogList;\n        }\n        for (var i: number = 0; i < typeArray.length; i++) {\n            var ng: NOMISGeography = new NOMISGeography(typeArray[i].getAttribute(\"value\"), typeArray[i].getAttribute(\"name\"), cubeName, cubeId);\n            geogList.push(ng);\n        }\n        return geogList;\n    }\n    recurseDomChildren(start: any, output: any) {\n        var nodes;\n        if (start.childNodes) {\n            nodes = start.childNodes;\n            this.loopNodeChildren(nodes, output);\n        }\n    }\n\n    loopNodeChildren(nodes: Array<any>, output: any) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (output) {\n                this.outputNode(node);\n            }\n            if (node.childNodes) {\n                this.recurseDomChildren(node, output);\n            }\n        }\n    }\n    outputNode(node: any) {\n        var whitespace = /^\\s+$/g;\n        if (node.nodeType === 1) {\n            console.log(\"element: \" + node.tagName);\n        } else if (node.nodeType === 3) {\n            //clear whitespace text nodes\n            node.data = node.data.replace(whitespace, \"\");\n            if (node.data) {\n                console.log(\"text: \" + node.data);\n            }\n        }\n    }\n    findNodeName(s: string, childNodes: any) {\n        for (var i: number = 0; i < childNodes.length; i++) {\n            var nn: string = childNodes[i].nodeName;\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\n            if (nn.indexOf(s) == 0) {\n                //alert(\"found node:\"+s);\n                return childNodes[i];\n            }\n        }\n        return null;\n    }\n    searchNodeName(s: string, childNodes: any): Array<any> {\n        var result: Array<any> = [];\n        for (var i: number = 0; i < childNodes.length; i++) {\n            var nn: string = childNodes[i].nodeName;\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\n            if (nn.indexOf(s) == 0) {\n                //alert(\"found node:\"+s);\n                result.push(childNodes[i]);\n            }\n        }\n        if (result.length == 0) {\n            //alert(\"cannot find any \" + s + \" in node\");\n        }\n        return result;\n    }\n    findDataflow(ref: commonreferences.Reference): Promise<structure.Dataflow> {\n        return null;\n    }\n    findCode(ref: commonreferences.Reference): Promise<structure.CodeType> { return null; }\n    findCodelist(ref: commonreferences.Reference): Promise<structure.Codelist> { return null; }\n    findItemType(item: commonreferences.Reference): Promise<structure.ItemType> { return null; }\n    findConcept(ref: commonreferences.Reference): Promise<structure.ConceptType> { return null; }\n    findConceptScheme(ref: commonreferences.Reference): Promise<structure.ConceptSchemeType> { return null; }\n    searchDataStructure(ref: commonreferences.Reference): Promise<Array<structure.DataStructure>> { return null; }\n    searchDataflow(ref: commonreferences.Reference): Promise<Array<structure.Dataflow>> { return null; }\n    searchCodelist(ref: commonreferences.Reference): Promise<Array<structure.Codelist>> { return null; }\n    searchItemType(item: commonreferences.Reference): Promise<Array<structure.ItemType>> { return null; }\n    searchConcept(ref: commonreferences.Reference): Promise<Array<structure.ConceptType>> { return null; }\n    searchConceptScheme(ref: commonreferences.Reference): Promise<Array<structure.ConceptSchemeType>> { return null; }\n    getLocalRegistry(): interfaces.LocalRegistry {\n        return this.local;\n    }\n    save(): any { }\n}\nexport class NOMISGeography {\n    private geography: string = \"\";\n    private geographyName: string = \"\";\n    private cubeName: string = \"\";\n    private cubeId: string = \"\";\n    constructor(geography: string, geographyName: string, cubeName: string, cubeId: string) {\n        this.geography = geography;\n        this.geographyName = geographyName;\n        this.cubeName = cubeName;\n        this.cubeId = cubeId;\n\n    }\n    getGeography() {\n        return this.geography;\n    }\n    getCubeName() { return this.cubeName; }\n    getCubeId() {\n        return this.cubeId;\n    }\n    getGeographyName() {\n        return this.geographyName;\n    }\n\n}\n"],"sourceRoot":"/source/"}