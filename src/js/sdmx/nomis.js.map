{"version":3,"sources":["sdmx/nomis.ts"],"names":["parseXml","NOMISRESTServiceRegistry","NOMISRESTServiceRegistry.constructor","NOMISRESTServiceRegistry.load","NOMISRESTServiceRegistry.unload","NOMISRESTServiceRegistry.retrieve","NOMISRESTServiceRegistry.retrieve2","NOMISRESTServiceRegistry.findDataStructure","NOMISRESTServiceRegistry.listDataflows","NOMISRESTServiceRegistry.getServiceURL","NOMISRESTServiceRegistry.parseGeography","NOMISRESTServiceRegistry.recurseDomChildren","NOMISRESTServiceRegistry.loopNodeChildren","NOMISRESTServiceRegistry.outputNode","NOMISRESTServiceRegistry.findNodeName","NOMISRESTServiceRegistry.searchNodeName","NOMISGeography","NOMISGeography.constructor","NOMISGeography.getGeography","NOMISGeography.getCubeName","NOMISGeography.getCubeId","NOMISGeography.getGeographyName"],"mappings":"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","file":"sdmx/nomis.js","sourcesContent":["/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\nimport interfaces = require(\"sdmx/interfaces\");\nimport registry = require(\"sdmx/registry\");\nimport structure = require(\"sdmx/structure\");\nimport message = require(\"sdmx/message\");\nimport commonreferences = require(\"sdmx/commonreferences\");\nimport common = require(\"sdmx/common\");\nimport sdmx = require(\"sdmx\");\nexport function parseXml(s: string): any {\n    var parseXml: DOMParser;\n    parseXml = new DOMParser();\n    var xmlDoc = parseXml.parseFromString(s, \"text/xml\");\n    return xmlDoc;\n}\nexport class NOMISRESTServiceRegistry //implements interfaces.Registry, interfaces.Repository, interfaces.Queryable {\n{\n    private agency: string = \"\";\n    private serviceURL: string = \"\";\n    private options: string = \"\";\n    private local: interfaces.Registry = new registry.LocalRegistry();\n\n    private dataflowList: Array<structure.Dataflow> = null;\n\n    constructor(agency: string, service: string, options: string) {\n        this.serviceURL = service;\n        this.agency = agency;\n        this.options = options;\n    }\n\n    load(struct: message.StructureType) {\n        console.log(\"nomis load\");\n        this.local.load(struct);\n    }\n\n    unload(struct: message.StructureType) {\n        this.local.unload(struct);\n    }\n    public retrieve(urlString: string): message.StructureType {\n        console.log(\"nomis retrieve:\" + urlString);\n        var s: string = this.options;\n        if (urlString.indexOf(\"?\") == -1) {\n            s = \"?\" + s + \"&random=\" + new Date().getTime();\n        } else {\n            s = \"&\" + s + \"&random=\" + new Date().getTime();\n        }\n        var xhttp = new XMLHttpRequest();\n        xhttp.open(\"GET\", urlString, false, \"\", \"\");\n        xhttp.send(null);\n        return sdmx.SdmxIO.parseStructure(xhttp.responseText);\n    }\n    public retrieve2(urlString: string): string {\n        console.log(\"nomis retrieve:\" + urlString);\n        var s: string = this.options;\n        if (urlString.indexOf(\"?\") == -1) {\n            s = \"?\" + s + \"&random=\" + new Date().getTime();\n        } else {\n            s = \"&\" + s + \"&random=\" + new Date().getTime();\n        }\n        var xhttp = new XMLHttpRequest();\n        xhttp.open(\"GET\", urlString, false, \"\", \"\");\n        xhttp.send(null);\n        return xhttp.responseText;\n    }\n    /*\n      This function ignores the version argument!!!\n      ILO stat does not use version numbers.. simply take the latest\n     */\n\n    public findDataStructure(ref: commonreferences.Reference): structure.DataStructure {\n        var dst: structure.DataStructure = this.local.findDataStructure(ref);\n        if (dst == null) {\n            var geogIndex = ref.getMaintainableParentId().toString().lastIndexOf(\"_\");\n            var geog: string = ref.getMaintainableParentId().toString().substring(geogIndex + 1, ref.getMaintainableParentId().toString().length);\n            var geography_string: string = \"geography=\" + geog;\n            if (\"NOGEOG\" == geog) {\n                geography_string = \"\";\n            }\n            var id: string = ref.getMaintainableParentId().toString().substring(0, geogIndex);\n            var st: message.StructureType = this.retrieve(this.getServiceURL() + \"/v01/dataset/\" + id + \".structure.sdmx.xml?\" + geography_string);\n            st.getStructures().getDataStructures().getDataStructures()[0].setId(ref.getMaintainableParentId());\n            st.getStructures().getDataStructures().getDataStructures()[0].setVersion(ref.getVersion());\n            this.load(st);\n            return this.local.findDataStructure(ref);\n        }\n        return dst;\n    }\n\n    public listDataflows(): Array<structure.Dataflow> {\n        if (this.dataflowList != null) {\n            return this.dataflowList;\n        }\n        var st: message.StructureType = this.retrieve(this.serviceURL + \"/v01/dataset/def.sdmx.xml\");\n        var list: Array<structure.DataStructure> = st.getStructures().getDataStructures().getDataStructures();\n        var dfs: Array<structure.Dataflow> = [];\n        for (var i: number = 0; i < list.length; i++) {\n            \n            var dst: structure.DataStructure = list[i];\n            var cubeId: string = structure.NameableType.toIDString(dst);\n            var cubeName: string = dst.findName(\"en\").getText();\n            var url: string = this.serviceURL + \"/v01/dataset/\" + cubeId + \".overview.xml\";\n            var geogList: Array<NOMISGeography> = this.parseGeography(this.retrieve2(url), cubeId, cubeName);\n            for (var j = 0; j < geogList.length; j++) {\n                var dataFlow: structure.Dataflow = new structure.Dataflow();\n                dataFlow.setAgencyID(new commonreferences.NestedNCNameID((this.agency)));\n                dataFlow.setId(new commonreferences.ID(cubeId + \"_\" + geogList[j].getGeography()));\n                var name: common.Name = new common.Name(\"en\", cubeName + \" \" + geogList[j].getGeographyName());\n                var names: Array<common.Name> = [];\n                names.push(name);\n                dataFlow.setNames(names);\n                var ref: commonreferences.Ref = new commonreferences.Ref();\n                ref.setAgencyId(new commonreferences.NestedNCNameID(this.agency));\n                ref.setMaintainableParentId(dataFlow.getId());\n                ref.setVersion(commonreferences.Version.ONE);\n                var reference = new commonreferences.Reference(ref, null);\n                dataFlow.setStructure(reference);\n                dfs.push(dataFlow);\n            }\n            if (geogList.length == 0) {\n                var dataFlow: structure.Dataflow = new structure.Dataflow();\n                dataFlow.setAgencyID(new commonreferences.NestedNCNameID((this.agency)));\n                dataFlow.setId(new commonreferences.ID(cubeId + \"_NOGEOG\"));\n                var name: common.Name = new common.Name(\"en\", cubeName);\n                var names: Array<common.Name> = [];\n                names.push(name);\n                dataFlow.setNames(names);\n                var ref: commonreferences.Ref = new commonreferences.Ref();\n                ref.setAgencyId(new commonreferences.NestedNCNameID(this.agency));\n                ref.setMaintainableParentId(dataFlow.getId());\n                ref.setVersion(commonreferences.Version.ONE);\n                var reference = new commonreferences.Reference(ref, null);\n                dataFlow.setStructure(reference);\n                dfs.push(dataFlow);\n            }\n        }\n        return dfs;\n    }\n    public getServiceURL(): string {\n        return this.serviceURL;\n    }\n    public parseGeography(doc: string, cubeId: string, cubeName: string): Array<NOMISGeography> {\n        var geogList: Array<NOMISGeography> = [];\n        var tagContent: string = null;\n        var lastLang: string = null;\n        var xmlDoc = parseXml(doc);\n        var dimNode = this.findNodeName(\"Dimensions\",xmlDoc.documentElement.childNodes);\n        var dimsNode = this.searchNodeName(\"Dimension\",dimNode.childNodes);\n        var geogNode = null;\n        for (var i = 0; i < dimsNode.length;i++) {\n            if( dimsNode[i].getAttribute(\"concept\")==\"geography\") {\n                geogNode=dimsNode[i];\n            }\n        }\n        if( geogNode==null ) return geogList;\n        var typesNode = this.findNodeName(\"Types\",geogNode.childNodes);\n        if( typesNode == null ) return geogList;\n        var typeArray = this.searchNodeName(\"Type\",typesNode.childNodes);\n        if(typeArray.length==0) {\n            return geogList;\n        }\n        for (var i: number = 0; i < typeArray.length;i++) {\n            var ng: NOMISGeography = new NOMISGeography(typeArray[i].getAttribute(\"value\"),typeArray[i].getAttribute(\"name\"),cubeName,cubeId);\n            geogList.push(ng);\n        }\n        return geogList;\n    }\n    recurseDomChildren(start: any, output: any) {\n        var nodes;\n        if (start.childNodes) {\n            nodes = start.childNodes;\n            this.loopNodeChildren(nodes, output);\n        }\n    }\n\n    loopNodeChildren(nodes: Array<any>, output: any) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (output) {\n                this.outputNode(node);\n            }\n            if (node.childNodes) {\n                this.recurseDomChildren(node, output);\n            }\n        }\n    }\n    outputNode(node: any) {\n        var whitespace = /^\\s+$/g;\n        if (node.nodeType === 1) {\n            console.log(\"element: \" + node.tagName);\n        } else if (node.nodeType === 3) {\n            //clear whitespace text nodes\n            node.data = node.data.replace(whitespace, \"\");\n            if (node.data) {\n                console.log(\"text: \" + node.data);\n            }\n        }\n    }\n    findNodeName(s: string, childNodes: any) {\n        for (var i: number = 0; i < childNodes.length; i++) {\n            var nn: string = childNodes[i].nodeName;\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\n            if (nn.indexOf(s) == 0) {\n                //alert(\"found node:\"+s);\n                return childNodes[i];\n            }\n        }\n        return null;\n    }\n    searchNodeName(s: string, childNodes: any): Array<any> {\n        var result: Array<any> = [];\n        for (var i: number = 0; i < childNodes.length; i++) {\n            var nn: string = childNodes[i].nodeName;\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\n            if (nn.indexOf(s) == 0) {\n                //alert(\"found node:\"+s);\n                result.push(childNodes[i]);\n            }\n        }\n        if (result.length == 0) {\n            //alert(\"cannot find any \" + s + \" in node\");\n        }\n        return result;\n    }\n}\nexport class NOMISGeography {\n    private geography: string = \"\";\n    private geographyName: string = \"\";\n    private cubeName: string = \"\";\n    private cubeId: string = \"\";\n    constructor(geography: string, geographyName: string, cubeName: string, cubeId: string) {\n        this.geography = geography;\n        this.geographyName = geographyName;\n        this.cubeName = cubeName;\n        this.cubeId = cubeId;\n\n    }\n    getGeography() {\n        return this.geography;\n    }\n    getCubeName() { return this.cubeName; }\n    getCubeId() {\n        return this.cubeId;\n    }\n    getGeographyName() {\n        return this.geographyName;\n    }\n}\n"],"sourceRoot":"/source/"}