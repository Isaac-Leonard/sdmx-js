{"version":3,"sources":["sdmx/structure.ts"],"names":["IdentifiableType","IdentifiableType.constructor","IdentifiableType.getId","IdentifiableType.getURN","IdentifiableType.getURI","IdentifiableType.setId","IdentifiableType.setURN","IdentifiableType.setURI","IdentifiableType.identifiesMeId","IdentifiableType.identifiesMeString","IdentifiableType.identifiesMeNestedId","NameableType","NameableType.constructor","NameableType.getNames","NameableType.setNames","NameableType.getDescriptions","NameableType.setDescriptions","NameableType.findName","NameableType.findDescription","NameableType.toString","NameableType.getName","NameableType.toStringWithLocale","NameableType.toIDString","NameableType.sanitise","ItemType","ItemType.constructor","ItemType.getParent","ItemType.setParent","ItemType.getItems","ItemType.setItems","ItemType.getItem","ItemType.setItem","ItemType.removeItem","ItemType.addItem","ItemType.size","ItemType.findItemString","ItemType.findItem","VersionableType","VersionableType.constructor","VersionableType.getVersion","VersionableType.setVersion","VersionableType.getValidFrom","VersionableType.setValidFrom","VersionableType.getValidTo","VersionableType.setValidTo","MaintainableType","MaintainableType.constructor","MaintainableType.getAgencyID","MaintainableType.setAgencyID","MaintainableType.isFinal","MaintainableType.setFinal","MaintainableType.isExternalReference","MaintainableType.setExternalReference","MaintainableType.getExternalReferences","MaintainableType.setExternalReferences","MaintainableType.identifiesMeStrings","MaintainableType.identifiesMe","MaintainableType.identifiesMeURI","MaintainableType.asReference","ItemSchemeType","ItemSchemeType.constructor","ItemSchemeType.getItems","ItemSchemeType.setItems","ItemSchemeType.isPartial","ItemSchemeType.setPartial","ItemSchemeType.getItem","ItemSchemeType.setItem","ItemSchemeType.removeItem","ItemSchemeType.addItem","ItemSchemeType.size","ItemSchemeType.findItemString","ItemSchemeType.findItemId","ItemSchemeType.findItemNestedId","ItemSchemeType.findSubItemsString","ItemSchemeType.findSubItemsId","CodeType","CodeType.constructor","Codelist","Codelist.constructor","ConceptSchemeType","ConceptSchemeType.constructor","ConceptType","ConceptType.constructor","StructureUsageType","StructureUsageType.constructor","StructureUsageType.getStructure","StructureUsageType.setStructure","RepresentationType","RepresentationType.constructor","Dataflow","Dataflow.constructor","Component","Component.constructor","Component.getId","Component.getConceptIdentity","Component.setConceptIdentity","Component.getLocalRepresentation","Component.setLocalRepresentation","Dimension","Dimension.constructor","TimeDimension","TimeDimension.constructor","Attribute","Attribute.constructor","PrimaryMeasure","PrimaryMeasure.constructor","DimensionList","DimensionList.constructor","DimensionList.getDimensions","DimensionList.getTimeDimension","AttributeList","AttributeList.constructor","AttributeList.getAttributes","MeasureList","MeasureList.constructor","MeasureList.getPrimaryMeasure","DataStructureComponents","DataStructureComponents.constructor","DataStructureComponents.getDimensionList","DataStructureComponents.getMeasureList","DataStructureComponents.getAttributeList","DataStructure","DataStructure.constructor","DataStructure.getDataStructureComponents","DataStructure.setDataStructureComponents","DataStructure.dump","DataStructure.findComponentString","DataStructure.findComponent","DataStructure.asReference","DataStructure.asDataflow","DataStructure.isDimension","DataStructure.isTimeDimension","DataStructure.isAttribute","DataStructure.isPrimaryMeasure","DataStructure.getKeyPosition","CodeLists","CodeLists.constructor","CodeLists.getCodelists","CodeLists.setCodelists","CodeLists.findCodelistStrings","CodeLists.findCodelist","CodeLists.findCodelistURI","CodeLists.findCodelistById","CodeLists.findCodelistReference","CodeLists.merge","Concepts","Concepts.constructor","Concepts.getConceptSchemes","Concepts.setConceptSchemes","Concepts.findConceptSchemeStrings","Concepts.findConceptScheme","Concepts.findConceptSchemeURI","Concepts.findConceptSchemeById","Concepts.findConceptSchemeReference","Concepts.merge","DataStructures","DataStructures.constructor","DataStructures.getDataStructures","DataStructures.setDataStructures","DataStructures.findDataStructureStrings","DataStructures.findDataStructure","DataStructures.findDataStructureURI","DataStructures.findDataStructureReference","DataStructures.merge","Structures","Structures.constructor","Structures.getConcepts","Structures.setConcepts","Structures.getCodeLists","Structures.setCodeLists","Structures.getDataStructures","Structures.setDataStructures","Structures.listDataflows","Structures.clear","Structures.load","Structures.unload","Structures.findDataStructure","Structures.findDataflow","Structures.findCode","Structures.findCodelist","Structures.findItemType","Structures.findConcept","Structures.findConceptScheme","Structures.searchDataStructure","Structures.searchDataflow","Structures.searchCodelist","Structures.searchItemType","Structures.searchConcept","Structures.searchConceptScheme","Structures.save"],"mappings":"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A,CAACA,CAACA,CAACA;oBAACA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;YAClEA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAEMX,mCAAUA,GAAjBA,UAAkBA,CAAsBA;YACpCY,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACjDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,cAAcA,CAACA,CAACA,CAACA,CAACA;oBAACA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;YAC9DA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAEMZ,yCAAgBA,GAAvBA,UAAwBA,CAA4BA;YAChDa,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACjDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,oBAAoBA,CAACA,CAACA,CAACA,CAACA;oBAACA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;YACpEA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACMb,2CAAkBA,GAAzBA,UAA0BA,CAASA;YAC/Bc,MAAMA,CAACA,IAAIA,CAACA,cAAcA,CAACA,IAAIA,gBAAgBA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;QAC3DA,CAACA;QAEMd,uCAAcA,GAArBA,UAAsBA,EAAuBA;YACzCe,IAAIA,MAAMA,GAAoBA,IAAIA,KAAKA,EAAYA,CAACA;YACpDA,EAAEA,CAACA,CAACA,EAAEA,IAAIA,IAAIA,CAACA,CAACA,CAACA;gBACb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AACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,SAASA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACrDA,IAAIA,GAAGA,GAAaA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;gBACtCA,EAAEA,CAACA,CAACA,GAAGA,CAACA,YAAYA,CAACA,OAAOA,EAAEA,MAAMA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACzCA,MAAMA,CAACA,GAAGA,CAACA;gBACfA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDL,mCAAeA,GAAfA,UAAgBA,GAAeA;YAC3BM,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,SAASA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACrDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA,eAAeA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACzCA,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;gBAC7BA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDN;;;;;WAKGA;QACHA,oCAAgBA,GAAhBA,UAAiBA,EAA6BA;YAC1CO,IAAIA,EAAEA,GAAaA,IAAIA,CAACA;YACxBA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,SAASA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACrDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA,cAAcA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;oBACvCA,EAAEA,CAACA,CAACA,EAAEA,IAAIA,IAAIA,CAACA;wBAACA,EAAEA,GAAGA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;oBACvCA,IAAIA,CAACA,CAACA;wBACFA,IAAIA,CAACA,GAAWA,EAAEA,CAACA,UAAUA,EAAEA,CAACA,SAASA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA,UAAUA,EAAEA,CAACA,CAACA;wBAC1EA,MAAMA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;4BACRA,KAAKA,CAACA,CAACA;gCACHA,KAAKA,CAACA;4BACVA,KAAKA,CAACA;gCACFA,KAAKA,CAACA;4BACVA,KAAKA,CAACA;gCACFA,wDAAwDA;gCACxDA,EAAEA,GAAGA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;gCACvBA,KAAKA,CAACA;wBACdA,CAACA;oBACLA,CAACA;gBACLA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,EAAEA,CAACA;QACdA,CAACA;QACDP,yCAAqBA,GAArBA,UAAsBA,GAA+BA;YACjDQ,MAAMA,CAACA,IAAIA,CAACA,YAAYA,CAACA,GAAGA,CAACA,WAAWA,EAAEA,EAAEA,GAAGA,CAACA,uBAAuBA,EAAEA,EAAEA,GAAGA,CAACA,0BAA0BA,EAAEA,CAACA,CAACA;QACjHA,CAACA;QAEDR,yBAAKA,GAALA,UAAMA,SAAoBA;YACtBS,EAAEA,CAACA,CAACA,SAASA,IAAIA,IAAIA,CAACA;gBAACA,MAAMA,CAACA;YAC9BA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,SAASA,CAACA,YAAYA,EAAEA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBAC/DA,IAAIA,CAACA,SAASA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA,CAACA;YACtCA,CAACA;QACLA,CAACA;QACLT,gBAACA;IAADA,CAlFA,AAkFCA,IAAA;IAlFY,iBAAS,YAkFrB,CAAA;IACD;QAIIU;YAHQC,aAAQA,GAA6BA,EAAEA,CAACA;QAKhDA,CAACA;QAEDD;;WAEGA;QACHA,oCAAiBA,GAAjBA;YACIE,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA;QACzBA,CAACA;QAEDF;;WAEGA;QACHA,oCAAiBA,GAAjBA,UAAkBA,GAA6BA;YAC3CG,IAAIA,CAACA,QAAQA,GAAGA,GAAGA,CAACA;QACxBA,CAACA;QACDH,2CAAwBA,GAAxBA,UAAyBA,MAAcA,EAAEA,EAAUA,EAAEA,IAAYA;YAC7DI,IAAIA,MAAMA,GAAwBA,IAAIA,gBAAgBA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA;YAC9DA,IAAIA,EAAEA,GAAoCA,IAAIA,gBAAgBA,CAACA,cAAcA,CAACA,MAAMA,CAACA,CAACA;YACtFA,IAAIA,GAAGA,GAA6BA,IAAIA,IAAIA,IAAIA,GAAGA,IAAIA,GAAGA,IAAIA,gBAAgBA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;YAC7FA,MAAMA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,EAAEA,EAAEA,MAAMA,EAAEA,GAAGA,CAACA,CAACA;QACnDA,CAACA;QACDJ,oCAAiBA,GAAjBA,UAAkBA,OAAwCA,EAAEA,MAAiCA,EAAEA,GAA6BA;YACxHK,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACpDA,IAAIA,GAAGA,GAAsBA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA;gBAC9CA,EAAEA,CAACA,CAACA,GAAGA,CAACA,YAAYA,CAACA,OAAOA,EAAEA,MAAMA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACzCA,MAAMA,CAACA,GAAGA,CAACA;gBACfA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDL,uCAAoBA,GAApBA,UAAqBA,GAAeA;YAChCM,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACpDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,eAAeA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACxCA,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA;gBAC5BA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDN;;;;;WAKGA;QACHA,wCAAqBA,GAArBA,UAAsBA,EAA6BA;YAC/CO,IAAIA,EAAEA,GAAsBA,IAAIA,CAACA;YACjCA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACpDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,cAAcA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;oBACtCA,EAAEA,CAACA,CAACA,EAAEA,IAAIA,IAAIA,CAACA;wBAACA,EAAEA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA;oBACtCA,IAAIA,CAACA,CAACA;wBACFA,IAAIA,CAACA,GAAWA,EAAEA,CAACA,UAAUA,EAAEA,CAACA,SAASA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,UAAUA,EAAEA,CAACA,CAACA;wBACzEA,MAAMA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;4BACRA,KAAKA,CAACA,CAACA;gCACHA,KAAKA,CAACA;4BACVA,KAAKA,CAACA;gCACFA,KAAKA,CAACA;4BACVA,KAAKA,CAACA;gCACFA,wDAAwDA;gCACxDA,EAAEA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA;gCACtBA,KAAKA,CAACA;wBACdA,CAACA;oBACLA,CAACA;gBACLA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,EAAEA,CAACA;QACdA,CAACA;Q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","file":"sdmx/structure.js","sourcesContent":["/// <amd-module name='sdmx/structure'/>\r\n/// <reference path=\"../collections.ts\"/>\r\nimport common = require(\"sdmx/common\");\r\nimport commonreferences = require(\"sdmx/commonreferences\");\r\nimport xml = require(\"sdmx/xml\");\r\nimport structure = require(\"sdmx/structure\");\r\nimport sdmx = require(\"sdmx\");\r\nimport message = require(\"sdmx/message\");\r\nimport interfaces = require(\"sdmx/interfaces\");\r\n\r\nexport class IdentifiableType extends common.AnnotableType {\r\n    private id: commonreferences.ID;\r\n    private urn: xml.anyURI;\r\n    private uri: xml.anyURI;\r\n    constructor() {\r\n        super();\r\n    }\r\n    public getId(): commonreferences.ID { return this.id; }\r\n    public getURN(): xml.anyURI { return this.urn; }\r\n    public getURI(): xml.anyURI { return this.uri; }\r\n    public setId(id: commonreferences.ID) {\r\n        this.id = id;\r\n    }\r\n    public setURN(urn: xml.anyURI) {\r\n        this.urn = urn;\r\n    }\r\n    public setURI(uri: xml.anyURI) {\r\n        this.uri = uri;\r\n    }\r\n    public identifiesMeId(oid: commonreferences.ID): boolean {\r\n        if (this.id.equalsID(oid)) return true;\r\n        else return false;\r\n    }\r\n    public identifiesMeString(oid: string): boolean {\r\n        if (this.id.equalsString(oid)) return true;\r\n        else return false;\r\n    }\r\n    public identifiesMeNestedId(oid: commonreferences.NestedID): boolean {\r\n        if (oid.equalsString(this.id.getString())) return true;\r\n        else return false;\r\n    }\r\n\r\n}\r\n\r\nexport class NameableType extends IdentifiableType {\r\n    private names: Array<common.Name> = [];\r\n    private descriptions: Array<common.Description> = [];\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * @return the names\r\n     */\r\n    public getNames(): Array<common.Name> {\r\n        return this.names;\r\n    }\r\n\r\n    /**\r\n     * @param names the names to set\r\n     */\r\n    public setNames(names1: Array<common.Name>) {\r\n        this.names = names1;\r\n    }\r\n\r\n    /**\r\n     * @return the descriptions\r\n     */\r\n    public getDescriptions(): Array<common.Description> {\r\n        return this.descriptions;\r\n    }\r\n\r\n    /**\r\n     * @param descriptions the descriptions to set\r\n     */\r\n    public setDescriptions(descriptions: Array<common.Description>) {\r\n        this.descriptions = descriptions;\r\n    }\r\n\r\n    public findName(lang: String): common.Name {\r\n        if (this.names == null) {\r\n            return null;\r\n        }\r\n        var def: common.Name = null;\r\n        for (var i: number = 0; i < this.names.length; i++) {\r\n            if (lang != null && lang == this.names[i].getLang()) {\r\n                return this.names[i];\r\n            }\r\n            if (this.names[i].getLang() == null) {\r\n                def = this.names[i];\r\n            }\r\n        }\r\n        if (def == null && \"en\" != lang) {\r\n            def = this.findName(\"en\");\r\n        }\r\n        return def;\r\n    }\r\n\r\n    public findDescription(lang: string): common.Description {\r\n        if (this.descriptions == null) {\r\n            return null;\r\n        }\r\n        var def: common.Description = null;\r\n        for (var i: number = 0; i < this.descriptions.length; i++) {\r\n            if (lang != null && lang == this.descriptions[i].getLang()) {\r\n                return this.descriptions[i];\r\n            }\r\n            if (this.descriptions[i].getLang() == null) {\r\n                def = this.descriptions[i];\r\n            }\r\n        }\r\n        if (def == null && \"en\" != lang) {\r\n            def = this.findDescription(\"en\");\r\n        }\r\n        return def;\r\n    }\r\n\r\n    public toString(): string {\r\n        var loc: string = sdmx.SdmxIO.getLocale();\r\n        var name: common.Name = this.findName(loc);\r\n        if (name != null) {\r\n            return name.toString();\r\n        }\r\n        var desc: common.Description = this.findDescription(loc);\r\n        if (desc != null) {\r\n            return desc.getText();\r\n        }\r\n        return \"NameableType\";\r\n    }\r\n\r\n    public getName(): string {\r\n        if (sdmx.SdmxIO.isSanitiseNames()) {\r\n            return NameableType.sanitise(NameableType.toString(this));\r\n        } else {\r\n            return NameableType.toString(this);\r\n        }\r\n    }\r\n\r\n    private static toString(named: NameableType): string {\r\n        var loc: string = sdmx.SdmxIO.getLocale();\r\n        if (named == null) {\r\n            return \"\";\r\n        }\r\n        var desc: common.Description = named.findDescription(loc);\r\n        if (desc == null) {\r\n            var name: common.Name = named.findName(loc);\r\n            if (name == null) {\r\n                return named.getId().toString();\r\n            }\r\n            return name.getText();\r\n        }\r\n        return desc.getText();\r\n    }\r\n\r\n    private static toStringWithLocale(named: NameableType, loc: string): string {\r\n        //if (concept.equals(\"FREQ\")) {\r\n        //    ItemType code2 = getCode();\r\n        //    System.out.println(\"FREQ Code=\" + code2);\r\n        //}\r\n        if (named == null) {\r\n            return \"\";\r\n        }\r\n        var name: common.Name = named.findName(loc);\r\n        if (name == null) {\r\n            var desc: common.Description = named.findDescription(loc);\r\n            if (desc == null) {\r\n                return named.getId().toString();\r\n            }\r\n            return desc.getText();\r\n        }\r\n        return name.getText();\r\n\r\n    }\r\n\r\n    private static toIDString(named: NameableType): string {\r\n        return named.getId().toString();\r\n    }\r\n\r\n    public static sanitise(s: string): string {\r\n        if (s.indexOf(\"'\") != -1) {\r\n            s = s.replace(\"'\", \"&apos;\");\r\n        }\r\n        if (s.indexOf(\"\\\"\") != -1) {\r\n            s = s.replace(\"\\\"\", \"&quot;\");\r\n        }\r\n        return s;\r\n    }\r\n\r\n}\r\nexport class ItemType extends NameableType {\r\n\r\n    private parent: commonreferences.Reference = null;\r\n    private items: Array<ItemType> = new Array<ItemType>();\r\n    /**\r\n     * @return the parent\r\n     */\r\n    public getParent(): commonreferences.Reference {\r\n        return this.parent;\r\n    }\r\n\r\n    /**\r\n     * @param parent the parent to set\r\n     */\r\n    public setParent(parent: commonreferences.Reference) {\r\n        this.parent = parent;\r\n    }\r\n\r\n    /**\r\n     * @return the items\r\n     */\r\n    public getItems(): Array<ItemType> {\r\n        return this.items;\r\n    }\r\n\r\n    /**\r\n     * @param items the items to set\r\n     */\r\n    public setItems(items: Array<ItemType>) {\r\n        this.items = items;\r\n    }\r\n\r\n    public getItem(i: number): ItemType {\r\n        return this.items[i];\r\n    }\r\n\r\n    public setItem(i: number, it: ItemType) {\r\n        this.items[i] = it;\r\n    }\r\n\r\n    public removeItem(it: ItemType) {\r\n        collections.arrays.remove(this.items, it);\r\n    }\r\n\r\n    public addItem(it: ItemType) {\r\n        this.items.push(it);\r\n    }\r\n\r\n    public size(): number {\r\n        return this.items.length;\r\n    }\r\n\r\n    public findItemString(s: string): structure.ItemType {\r\n        for (var i: number = 0; i < this.items.length; i++) {\r\n            if (this.items[i].identifiesMeString(s)) return this.items[i];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public findItem(id: commonreferences.ID): ItemType {\r\n        for (var i: number = 0; i < this.items.length; i++) {\r\n            if (this.items[i].identifiesMeId(id)) return this.items[i];\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport class VersionableType extends NameableType {\r\n    private version: commonreferences.Version = commonreferences.Version.ONE;\r\n    private validFrom: xml.DateTime = null;;\r\n    private validTo: xml.DateTime = null;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    getVersion(): commonreferences.Version {\r\n        return this.version;\r\n    }\r\n\r\n    /**\r\n     * @param version the version to set\r\n     */\r\n    setVersion(version: commonreferences.Version) {\r\n        this.version = version;\r\n    }\r\n    getValidFrom(): xml.DateTime {\r\n        return this.validFrom;\r\n    }\r\n\r\n    setValidFrom(validFrom: xml.DateTime) {\r\n        this.validFrom = validFrom;\r\n    }\r\n\r\n    public getValidTo(): xml.DateTime {\r\n        return this.validTo;\r\n    }\r\n    setValidTo(validTo: xml.DateTime) {\r\n        this.validTo = validTo;\r\n    }\r\n\r\n}\r\nexport class MaintainableType extends VersionableType {\r\n    private agencyID: commonreferences.NestedNCNameID = null;\r\n    private isfinal: boolean = null;\r\n    private isexternalReference: boolean = null;\r\n    private externalReferences: common.ExternalReferenceAttributeGroup = null;\r\n\r\n    /**\r\n     * @return the agencyID\r\n     */\r\n    public getAgencyID(): commonreferences.NestedNCNameID {\r\n        return this.agencyID;\r\n    }\r\n\r\n    setAgencyID(agencyID: commonreferences.NestedNCNameID) {\r\n        this.agencyID = agencyID;\r\n    }\r\n\r\n    isFinal(): boolean {\r\n        return this.isfinal;\r\n    }\r\n\r\n    setFinal(isFinal: boolean) {\r\n        this.isfinal = isFinal;\r\n    }\r\n\r\n    isExternalReference(): boolean {\r\n        return this.isexternalReference;\r\n    }\r\n\r\n    setExternalReference(isExternalReference: boolean) {\r\n        this.isexternalReference = isExternalReference;\r\n    }\r\n\r\n    public getExternalReferences(): common.ExternalReferenceAttributeGroup {\r\n        return this.externalReferences;\r\n    }\r\n\r\n    setExternalReferences(externalReferences: common.ExternalReferenceAttributeGroup) {\r\n        this.externalReferences = externalReferences;\r\n    }\r\n\r\n    identifiesMeStrings(agency2: string, id2: string, vers2: string): boolean {\r\n        return this.identifiesMe(new commonreferences.NestedNCNameID(agency2), new commonreferences.ID(id2), new commonreferences.Version(vers2));\r\n    }\r\n\r\n    identifiesMe(agency2: commonreferences.NestedNCNameID, id2: commonreferences.NestedID, vers2: commonreferences.Version): boolean {\r\n        //System.out.println(\"Left=\" + this.agencyID + \".\" + this.getId() + \".\" + this.getVersion());\r\n        //System.out.println(\"Right=\" + agency2 + \".\" + id2 + \".\" + vers2);\r\n        if (vers2 == null || this.getVersion() == null) {\r\n            if (this.agencyID.equalsNestedNCNameID(agency2) && this.getId().equalsID(id2)) {\r\n                return true;\r\n            } else {\r\n                //System.out.println(\"Doesn't Match!!\");\r\n                return false;\r\n            }\r\n        } else {\r\n            if (this.agencyID.equalsNestedNCNameID(agency2) && this.getId().equalsID(id2) && this.getVersion().equalsVersion(vers2)) {\r\n                return true;\r\n            } else {\r\n                //System.out.println(\"Doesn't Match!!\");\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    identifiesMeURI(uri: xml.anyURI): boolean {\r\n        var ref: commonreferences.Reference = new commonreferences.Reference(null, uri);\r\n        return this.identifiesMe(ref.getAgencyId(), ref.getMaintainableParentId(), ref.getVersion());\r\n    }\r\n\r\n    asReference(): commonreferences.Reference {\r\n        var ref: commonreferences.Ref = new commonreferences.Ref();\r\n        ref.setAgencyId(this.agencyID);\r\n        ref.setMaintainableParentId(this.getId());\r\n        ref.setMaintainableParentVersion(this.getVersion());\r\n        var reference: commonreferences.Reference = new commonreferences.Reference(ref, this.getURI());\r\n        return reference;\r\n    }\r\n}\r\nexport class ItemSchemeType extends MaintainableType {\r\n    private items: Array<ItemType> = new Array<ItemType>();\r\n    private partial: boolean = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    /**\r\n     * @return the items\r\n     */\r\n    public getItems(): Array<ItemType> {\r\n        return this.items;\r\n    }\r\n\r\n    /**\r\n     * @param items the items to set\r\n     */\r\n    public setItems(itms: Array<ItemType>) {\r\n        this.items = itms;\r\n    }\r\n\r\n    /**\r\n     * @return the partial\r\n     */\r\n    public isPartial(): boolean {\r\n        return this.partial;\r\n    }\r\n\r\n    /**\r\n     * @param partial the partial to set\r\n     */\r\n    public setPartial(partial: boolean) {\r\n        this.partial = partial;\r\n    }\r\n\r\n    public getItem(i: number): ItemType {\r\n        return this.items[i];\r\n    }\r\n\r\n    public setItem(i: number, it: ItemType) {\r\n        this.items[i] = it;\r\n    }\r\n\r\n    public removeItem(it: ItemType) {\r\n        this.items.splice(this.items.indexOf(it), 1);\r\n    }\r\n\r\n    public addItem(it: ItemType) {\r\n        this.items.push(it);\r\n    }\r\n\r\n    public size(): number {\r\n        return this.items.length;\r\n    }\r\n\r\n    public findItemString(s: string): ItemType {\r\n        for (var i: number = 0; i < this.items.length; i++) {\r\n            if (this.items[i].identifiesMeString(s)) return this.items[i];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public findItemId(s: commonreferences.ID): ItemType {\r\n        for (var i: number = 0; i < this.items.length; i++) {\r\n            if (this.items[i].identifiesMeId(s)) return this.items[i];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public findItemNestedId(s: commonreferences.NestedID): ItemType {\r\n        for (var i: number = 0; i < this.items.length; i++) {\r\n            if (this.items[i].identifiesMeNestedId(s)) return this.items[i];\r\n        }\r\n        return null;\r\n    }\r\n    public findSubItemsString(s: string): Array<ItemType> {\r\n        return this.findSubItemsId(new commonreferences.ID(s));\r\n    }\r\n\r\n    public findSubItemsId(id: commonreferences.ID): Array<ItemType> {\r\n        var result: Array<ItemType> = new Array<ItemType>();\r\n        if (id == null) {\r\n            for (var i: number = 0; i < this.items.length; i++) {\r\n                var item: ItemType = this.items[i];\r\n                if (item.getParent() == null) {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            for (var i: number = 0; i < this.items.length; i++) {\r\n                var item: ItemType = this.items[i];\r\n                if (item.getParent().getId().equalsID(id)) {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport class CodeType extends ItemType {\r\n\r\n}\r\nexport class Codelist extends ItemSchemeType {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\r\n}\r\nexport class ConceptSchemeType extends ItemSchemeType {\r\n\r\n}\r\nexport class ConceptType extends ItemType {\r\n\r\n}\r\nexport class StructureUsageType extends MaintainableType {\r\n    private structure: commonreferences.Reference = null;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public getStructure(): commonreferences.Reference {\r\n        return this.structure;\r\n    }\r\n    public setStructure(struct: commonreferences.Reference) {\r\n        this.structure = struct;\r\n\r\n    }\r\n}\r\nexport class RepresentationType {\r\n    \r\n}\r\nexport class Dataflow extends StructureUsageType {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\nexport class Component extends IdentifiableType {\r\n    private conceptIdentity: commonreferences.Reference = null;\r\n    private localRepresentation:RepresentationType = null;\r\n    \r\n    public getId():commonreferences.ID {\r\n        if( super.getId()==null ) {\r\n            if( this.conceptIdentity==null ) {\r\n                //Thread.dumpStack();\r\n                return new commonreferences.ID(\"MISS\");\r\n            }\r\n            return this.conceptIdentity.getId().asID();\r\n        }\r\n        return super.getId();\r\n    }\r\n    constructor(){\r\n        super();\r\n    }\r\n    public getConceptIdentity() {\r\n        return this.conceptIdentity; }\r\n    public setConceptIdentity(ci: commonreferences.Reference){\r\n        this.conceptIdentity=ci;\r\n    }\r\n    public getLocalRepresentation() {\r\n        return this.localRepresentation;\r\n    }\r\n    public setLocalRepresentation(lr:RepresentationType) {\r\n        this.localRepresentation=lr;\r\n    }\r\n}\r\nexport class Dimension extends Component {\r\n\r\n}\r\nexport class TimeDimension extends Component {\r\n\r\n}\r\nexport class Attribute extends Component {\r\n\r\n}\r\nexport class PrimaryMeasure extends Component {\r\n\r\n}\r\nexport class DimensionList {\r\n    private dimensions: Array<Dimension> = [];\r\n    private timeDimension: TimeDimension = null;\r\n    public getDimensions(): Array<Dimension> { return this.dimensions; }\r\n    public getTimeDimension(): TimeDimension {\r\n        return this.timeDimension;\r\n    }\r\n}\r\nexport class AttributeList {\r\n    private attributes: Array<Attribute> = [];\r\n    public getAttributes(): Array<Attribute> { return this.attributes; }\r\n}\r\nexport class MeasureList {\r\n    private primaryMeasure:PrimaryMeasure = null;\r\n    public getPrimaryMeasure(): PrimaryMeasure { return this.primaryMeasure;}\r\n\r\n}\r\nexport class DataStructureComponents {\r\n    private dimensionList: DimensionList = null;\r\n    private measureList: MeasureList = null;\r\n    private attributeList: AttributeList = null;\r\n    public getDimensionList(): DimensionList {\r\n        return this.dimensionList;\r\n    }\r\n    public getMeasureList(): MeasureList {\r\n        return this.measureList;\r\n    }\r\n    public getAttributeList(): AttributeList {\r\n        return this.attributeList;\r\n    }\r\n}\r\nexport class DataStructure extends MaintainableType {\r\n\r\n    private components: DataStructureComponents = null;\r\n\r\n    public getDataStructureComponents(): DataStructureComponents {\r\n        return this.components;\r\n    }\r\n\r\n    public setDataStructureComponents(components: DataStructureComponents) {\r\n        this.components = components;\r\n    }\r\n\r\n    public dump() {\r\n    }\r\n\r\n    public findComponentString(col: string): Component {\r\n        return this.findComponent(new commonreferences.ID(col));\r\n    }\r\n\r\n    public findComponent(col: commonreferences.ID): Component {\r\n        /*\r\n        for (DimensionType dim : components.getDimensionList().getDimensions()) {\r\n            if (dim.identifiesMe(col)) {\r\n                return dim;\r\n            }\r\n        }\r\n        for (AttributeType dim : components.getAttributeList().getAttributes()) {\r\n            if (dim.identifiesMe(col)) {\r\n                return dim;\r\n            }\r\n        }\r\n        //System.out.println(\"Measure3=\"+components.getMeasureList().getMeasures().size());\r\n        if (components.getDimensionList().getMeasureDimension() != null && components.getDimensionList().getMeasureDimension().identifiesMe(col)) {\r\n            return components.getDimensionList().getMeasureDimension();\r\n        }\r\n        TimeDimensionType dim = components.getDimensionList().getTimeDimension();\r\n        if (dim.identifiesMe(col)) {\r\n            return dim;\r\n        }\r\n        PrimaryMeasure dim2 = components.getMeasureList().getPrimaryMeasure();\r\n        if (dim2.identifiesMe(col)) {\r\n            return dim2;\r\n        }\r\n        */\r\n        return null;\r\n    }\r\n\r\n    public asReference(): commonreferences.Reference {\r\n        var ref: commonreferences.Ref = new commonreferences.Ref()\r\n        ref.setAgencyId(this.getAgencyID());\r\n        ref.setId(this.getId());\r\n        ref.setVersion(this.getVersion());\r\n        var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\r\n        return reference;\r\n    }\r\n\r\n    public asDataflow(): Dataflow {\r\n        var dataFlow: Dataflow = new Dataflow();\r\n        dataFlow.setNames(this.getNames());\r\n        dataFlow.setDescriptions(this.getDescriptions());\r\n        dataFlow.setStructure(this.asReference());\r\n        dataFlow.setAnnotations(this.getAnnotations());\r\n        dataFlow.setAgencyID(this.getAgencyID());\r\n        dataFlow.setId(this.getId());\r\n        dataFlow.setVersion(this.getVersion());\r\n        return dataFlow;\r\n    }\r\n    public isDimension(s: string): boolean {\r\n        for (var i: number = 0; i < this.getDataStructureComponents().getDimensionList().getDimensions().length; i++) {\r\n            var d: Dimension = this.getDataStructureComponents().getDimensionList().getDimensions()[i];\r\n            if (s == d.getId().toString()) {\r\n                return true;\r\n            }\r\n        }\r\n        if (s == this.getDataStructureComponents().getDimensionList().getTimeDimension().getId().toString()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    public isTimeDimension(s: string): boolean {\r\n        if (s == this.getDataStructureComponents().getDimensionList().getTimeDimension().getId().toString()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    public isAttribute(s: String): boolean {\r\n        for (var i: number = 0; i < this.getDataStructureComponents().getAttributeList().getAttributes().length; i++) {\r\n            if (s == this.getDataStructureComponents().getAttributeList().getAttributes()[i].getId().toString()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    public isPrimaryMeasure(s: string): boolean {\r\n        if (\"OBS_VALUE\" == s) return true;\r\n        else if (this.getDataStructureComponents().getMeasureList().getPrimaryMeasure().getId().toString() == s) { return true; }\r\n        return false;\r\n    }\r\n    public getKeyPosition(s: string): number {\r\n        var i: number = 0;\r\n        for (var j: number = 0; j < this.getDataStructureComponents().getDimensionList().getDimensions().length; i++) {\r\n            if (this.getDataStructureComponents().getDimensionList().getDimensions()[i].getId().equalsString(s)) {\r\n                return i;\r\n            }\r\n            i++;\r\n        }\r\n        if (s == this.getDataStructureComponents().getDimensionList().getTimeDimension().getId().toString()) {\r\n            return i;\r\n        }\r\n        throw new Error(\"Dimension \" + s + \" not found in DataStructure:\" + this.getId().toString());\r\n    }\r\n}\r\n\r\nexport class CodeLists {\r\n    private codelists: Array<Codelist> = [];\r\n\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @return the codelists\r\n     */\r\n    getCodelists(): Array<Codelist> {\r\n        return this.codelists;\r\n    }\r\n\r\n    /**\r\n     * @param codelists the codelists to set\r\n     */\r\n    setCodelists(cls: Array<Codelist>) {\r\n        this.codelists = cls;\r\n    }\r\n    findCodelistStrings(agency: string, id: string, vers: string): Codelist {\r\n        var findid: commonreferences.ID = new commonreferences.ID(id);\r\n        var ag: commonreferences.NestedNCNameID = new commonreferences.NestedNCNameID(agency);\r\n        var ver: commonreferences.Version = vers == null ? null : new commonreferences.Version(vers);\r\n        return this.findCodelist(ag, findid, ver);\r\n    }\r\n    findCodelist(agency2: commonreferences.NestedNCNameID, findid: commonreferences.NestedID, ver: commonreferences.Version): Codelist {\r\n        for (var i: number = 0; i < this.codelists.length; i++) {\r\n            var cl2: Codelist = this.codelists[i];\r\n            if (cl2.identifiesMe(agency2, findid, ver)) {\r\n                return cl2;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    findCodelistURI(uri: xml.anyURI): Codelist {\r\n        for (var i: number = 0; i < this.codelists.length; i++) {\r\n            if (this.codelists[i].identifiesMeURI(uri)) {\r\n                return this.codelists[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /*\r\n     * This method is used in sdmx 2.0 parsing to find a codelist with the correct ID..\r\n     * this is because the Dimension in the KeyFamily does not contain a complete reference\r\n     * only an ID.. we lookup the Codelist by it's ID, when we find a match, we can make a \r\n     * LocalItemSchemeReference out of it with it's AgencyID and Version.\r\n     */\r\n    findCodelistById(id: commonreferences.NestedID): Codelist {\r\n        var cl: Codelist = null;\r\n        for (var i: number = 0; i < this.codelists.length; i++) {\r\n            if (this.codelists[i].identifiesMeId(id)) {\r\n                if (cl == null) cl = this.codelists[i];\r\n                else {\r\n                    var j: number = cl.getVersion().compareTo(this.codelists[i].getVersion());\r\n                    switch (j) {\r\n                        case -1: // Less\r\n                            break;\r\n                        case 0:  // Equal\r\n                            break;\r\n                        case 1:\r\n                            // Our found conceptscheme has a greater version number.\r\n                            cl = this.codelists[i];\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return cl;\r\n    }\r\n    findCodelistReference(ref: commonreferences.Reference): Codelist {\r\n        return this.findCodelist(ref.getAgencyId(), ref.getMaintainableParentId(), ref.getMaintainedParentVersion());\r\n    }\r\n\r\n    merge(codelists: CodeLists) {\r\n        if (codelists == null) return;\r\n        for (var i: number = 0; i < codelists.getCodelists().length; i++) {\r\n            this.codelists.push(codelists[i]);\r\n        }\r\n    }\r\n}\r\nexport class Concepts {\r\n    private concepts: Array<ConceptSchemeType> = [];\r\n\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @return the codelists\r\n     */\r\n    getConceptSchemes(): Array<ConceptSchemeType> {\r\n        return this.concepts;\r\n    }\r\n\r\n    /**\r\n     * @param codelists the codelists to set\r\n     */\r\n    setConceptSchemes(cls: Array<ConceptSchemeType>) {\r\n        this.concepts = cls;\r\n    }\r\n    findConceptSchemeStrings(agency: string, id: string, vers: string): ConceptSchemeType {\r\n        var findid: commonreferences.ID = new commonreferences.ID(id);\r\n        var ag: commonreferences.NestedNCNameID = new commonreferences.NestedNCNameID(agency);\r\n        var ver: commonreferences.Version = vers == null ? null : new commonreferences.Version(vers);\r\n        return this.findConceptScheme(ag, findid, ver);\r\n    }\r\n    findConceptScheme(agency2: commonreferences.NestedNCNameID, findid: commonreferences.NestedID, ver: commonreferences.Version): ConceptSchemeType {\r\n        for (var i: number = 0; i < this.concepts.length; i++) {\r\n            var cl2: ConceptSchemeType = this.concepts[i];\r\n            if (cl2.identifiesMe(agency2, findid, ver)) {\r\n                return cl2;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    findConceptSchemeURI(uri: xml.anyURI): ConceptSchemeType {\r\n        for (var i: number = 0; i < this.concepts.length; i++) {\r\n            if (this.concepts[i].identifiesMeURI(uri)) {\r\n                return this.concepts[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /*\r\n     * This method is used in sdmx 2.0 parsing to find a codelist with the correct ID..\r\n     * this is because the Dimension in the KeyFamily does not contain a complete reference\r\n     * only an ID.. we lookup the Codelist by it's ID, when we find a match, we can make a \r\n     * LocalItemSchemeReference out of it with it's AgencyID and Version.\r\n     */\r\n    findConceptSchemeById(id: commonreferences.NestedID): ConceptSchemeType {\r\n        var cl: ConceptSchemeType = null;\r\n        for (var i: number = 0; i < this.concepts.length; i++) {\r\n            if (this.concepts[i].identifiesMeId(id)) {\r\n                if (cl == null) cl = this.concepts[i];\r\n                else {\r\n                    var j: number = cl.getVersion().compareTo(this.concepts[i].getVersion());\r\n                    switch (j) {\r\n                        case -1: // Less\r\n                            break;\r\n                        case 0:  // Equal\r\n                            break;\r\n                        case 1:\r\n                            // Our found conceptscheme has a greater version number.\r\n                            cl = this.concepts[i];\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return cl;\r\n    }\r\n    findConceptSchemeReference(ref: commonreferences.Reference): ConceptSchemeType {\r\n        return this.findConceptScheme(ref.getAgencyId(), ref.getMaintainableParentId(), ref.getMaintainedParentVersion());\r\n    }\r\n\r\n    merge(conceptsType: Concepts) {\r\n        if (conceptsType == null) return;\r\n        for (var i: number = 0; i < conceptsType.getConceptSchemes().length; i++) {\r\n            this.concepts.push(conceptsType.getConceptSchemes()[i]);\r\n        }\r\n    }\r\n}\r\nexport class DataStructures {\r\n    private datastructures: Array<DataStructure> = [];\r\n\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @return the codelists\r\n     */\r\n    getDataStructures(): Array<DataStructure> {\r\n        return this.datastructures;\r\n    }\r\n\r\n    /**\r\n     * @param codelists the codelists to set\r\n     */\r\n    setDataStructures(cls: Array<DataStructure>) {\r\n        this.datastructures = cls;\r\n    }\r\n    findDataStructureStrings(agency: string, id: string, vers: string): DataStructure {\r\n        var findid: commonreferences.ID = new commonreferences.ID(id);\r\n        var ag: commonreferences.NestedNCNameID = new commonreferences.NestedNCNameID(agency);\r\n        var ver: commonreferences.Version = vers == null ? null : new commonreferences.Version(vers);\r\n        return this.findDataStructure(ag, findid, ver);\r\n    }\r\n    findDataStructure(agency2: commonreferences.NestedNCNameID, findid: commonreferences.NestedID, ver: commonreferences.Version): DataStructure {\r\n        for (var i: number = 0; i < this.datastructures.length; i++) {\r\n            var cl2: DataStructure = this.datastructures[i];\r\n            if (cl2.identifiesMe(agency2, findid, ver)) {\r\n                return cl2;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    findDataStructureURI(uri: xml.anyURI): DataStructure {\r\n        for (var i: number = 0; i < this.datastructures.length; i++) {\r\n            if (this.datastructures[i].identifiesMeURI(uri)) {\r\n                return this.datastructures[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    findDataStructureReference(ref: commonreferences.Reference): DataStructure {\r\n        return this.findDataStructure(ref.getAgencyId(), ref.getMaintainableParentId(), ref.getMaintainedParentVersion());\r\n    }\r\n\r\n    merge(dss: DataStructures) {\r\n        if (dss == null) return;\r\n        for (var i: number = 0; i < dss.getDataStructures().length; i++) {\r\n            this.datastructures.push(dss.getDataStructures()[i]);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Structures implements interfaces.Registry {\r\n    private codelists: CodeLists = null;\r\n    private concepts: Concepts = null;\r\n    private datastructures: DataStructures = null;\r\n    getConcepts() {\r\n        return this.concepts;\r\n    }\r\n    setConcepts(c: Concepts) {\r\n        this.concepts = c;\r\n    }\r\n    getCodeLists() {\r\n        return this.codelists;\r\n    }\r\n    setCodeLists(c: CodeLists) {\r\n        this.codelists = c;\r\n    }\r\n    getDataStructures() {\r\n        return this.datastructures;\r\n    }\r\n    setDataStructures(ds: DataStructures) {\r\n        this.datastructures = ds;\r\n    }\r\n    // Registry\r\n    listDataflows(): Array<structure.Dataflow> {\r\n        return null;\r\n    }\r\n    clear(): void {\r\n\r\n    }\r\n    load(struct: message.StructureType): void {\r\n\r\n    }\r\n    unload(struct: message.StructureType): void {\r\n\r\n    }\r\n    findDataStructure(ref: commonreferences.Reference): structure.DataStructure {\r\n        return null;\r\n    }\r\n    findDataflow(ref: commonreferences.Reference): structure.Dataflow {\r\n        return null;\r\n    }\r\n    findCode(ref: commonreferences.Reference): structure.CodeType {\r\n        return this.codelists.findCodelistReference(ref).findItemId(ref.getId());\r\n    }\r\n    findCodelist(ref: commonreferences.Reference): structure.Codelist {\r\n        return this.codelists.findCodelistReference(ref);\r\n    }\r\n    findItemType(item: commonreferences.Reference): structure.ItemType {\r\n        return null;\r\n    }\r\n    findConcept(ref: commonreferences.Reference): structure.ConceptType {\r\n        return this.concepts.findConceptSchemeReference(ref).findItemId(ref.getId());\r\n    }\r\n    findConceptScheme(ref: commonreferences.Reference): structure.ConceptSchemeType {\r\n        return this.concepts.findConceptSchemeReference(ref);\r\n    }\r\n    searchDataStructure(ref: commonreferences.Reference): Array<structure.DataStructure> {\r\n        return new Array<structure.DataStructure>();\r\n    }\r\n    searchDataflow(ref: commonreferences.Reference): Array<structure.Dataflow> {\r\n        return new Array<structure.Dataflow>();\r\n    }\r\n    searchCodelist(ref: commonreferences.Reference): Array<structure.Codelist> {\r\n        return new Array<structure.Codelist>();\r\n    }\r\n    searchItemType(item: commonreferences.Reference): Array<structure.ItemType> {\r\n        return new Array<structure.ItemType>();\r\n    }\r\n    searchConcept(ref: commonreferences.Reference): Array<structure.ConceptType> {\r\n        return new Array<structure.ConceptType>();\r\n    }\r\n    searchConceptScheme(ref: commonreferences.Reference): Array<structure.ConceptSchemeType> {\r\n        return new Array<structure.ConceptSchemeType>();\r\n    }\r\n    save(): any {\r\n\r\n    }\r\n}"],"sourceRoot":"/source/"}