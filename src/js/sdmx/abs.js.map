{"version":3,"sources":["sdmx/abs.ts"],"names":["parseXml","ABS","ABS.constructor","ABS.getRemoteRegistry","ABS.getRepository","ABS.clear","ABS.query","ABS.load","ABS.unload","ABS.makeRequest","ABS.retrieve","ABS.retrieve2","ABS.findDataStructure","ABS.listDataflows","ABS.getServiceURL","ABS.recurseDomChildren","ABS.loopNodeChildren","ABS.outputNode","ABS.findNodeName","ABS.searchNodeName","ABS.findDataflow","ABS.findCode","ABS.findCodelist","ABS.findItemType","ABS.findConcept","ABS.findConceptScheme","ABS.searchDataStructure","ABS.searchDataflow","ABS.searchCodelist","ABS.searchItemType","ABS.searchConcept","ABS.searchConceptScheme","ABS.getLocalRegistry","ABS.save"],"mappings":"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","file":"sdmx/abs.js","sourcesContent":["/*\n    This file is part of sdmx-js.\n\n    sdmx-js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    sdmx-js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\n    Copyright (C) 2016 James Gardner\n*/\n///<reference path=\"../es6-promise.d.ts\"/>\nimport interfaces = require(\"sdmx/interfaces\");\nimport registry = require(\"sdmx/registry\");\nimport structure = require(\"sdmx/structure\");\nimport message = require(\"sdmx/message\");\nimport commonreferences = require(\"sdmx/commonreferences\");\nimport common = require(\"sdmx/common\");\nimport sdmx = require(\"sdmx\");\nexport function parseXml(s: string): any {\n    var parseXml: DOMParser;\n    parseXml = new DOMParser();\n    var xmlDoc = parseXml.parseFromString(s, \"text/xml\");\n    return xmlDoc;\n}\nexport class ABS implements interfaces.Queryable, interfaces.RemoteRegistry {\n    private agency: string = \"ABS\";\n    private serviceURL: string = \"http://stat.abs.gov.au/restsdmx/sdmx.ashx/\";\n    private options: string = \"\";\n    private local: interfaces.LocalRegistry = new registry.LocalRegistry();\n\n    private dataflowList: Array<structure.Dataflow> = null;\n\n    getRemoteRegistry(): interfaces.RemoteRegistry {\n        return this;\n    }\n\n    getRepository(): interfaces.Repository {\n        return null;//this;\n        \n    }\n\n    clear() {\n        this.local.clear();\n    }\n    query(s: string) {\n\n    }\n    constructor(agency: string, service: string, options: string) {\n        if (service != null) { this.serviceURL = service; }\n        if (agency != null) { this.agency = agency; }\n        if (options != null) { this.options = options; }\n    }\n\n    load(struct: message.StructureType) {\n        console.log(\"abs load\");\n        this.local.load(struct);\n    }\n\n    unload(struct: message.StructureType) {\n        this.local.unload(struct);\n    }\n    makeRequest(opts): Promise<string> {\n        return new Promise(function(resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(opts.method, opts.url);\n            xhr.onload = function() {\n                if (this.status >= 200 && this.status < 300) {\n                    resolve(xhr.response);\n                } else {\n                    reject({\n                        status: this.status,\n                        statusText: xhr.statusText\n                    });\n                }\n            };\n            xhr.onerror = function() {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            };\n            if (opts.headers) {\n                Object.keys(opts.headers).forEach(function(key) {\n                    xhr.setRequestHeader(key, opts.headers[key]);\n                });\n            }\n            var params = opts.params;\n            // We'll need to stringify if we've been given an object\n            // If we have a string, this is skipped.\n            if (params && typeof params === 'object') {\n                params = Object.keys(params).map(function(key) {\n                    return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n                }).join('&');\n            }\n            xhr.send(params);\n        });\n    }\n    public retrieve(urlString: string): Promise<message.StructureType> {\n        console.log(\"nomis retrieve:\" + urlString);\n        var s: string = this.options;\n        if (urlString.indexOf(\"?\") == -1) {\n            s = \"?\" + s + \"&random=\" + new Date().getTime();\n        } else {\n            s = \"&\" + s + \"&random=\" + new Date().getTime();\n        }\n        var opts: any = {};\n        opts.url = urlString;\n        opts.method = \"GET\";\n        opts.headers = {};\n        return this.makeRequest(opts).then(function(a) {\n            return sdmx.SdmxIO.parseStructure(a);\n        });\n    }\n    public retrieve2(urlString: string): Promise<string> {\n        console.log(\"nomis retrieve:\" + urlString);\n        var s: string = this.options;\n        if (urlString.indexOf(\"?\") == -1) {\n            s = \"?\" + s + \"&random=\" + new Date().getTime();\n        } else {\n            s = \"&\" + s + \"&random=\" + new Date().getTime();\n        }\n        var opts: any = {};\n        opts.url = urlString;\n        opts.method = \"GET\";\n        return this.makeRequest(opts).then(function(a) {\n            return a;\n        });\n    }\n\n    public findDataStructure(ref: commonreferences.Reference): Promise<structure.DataStructure> {\n        var dst: structure.DataStructure = this.local.findDataStructure(ref);\n        if (dst != null) {\n            var promise = new Promise(function(resolve, reject) {\n                resolve(dst);\n            }.bind(this));\n            return promise;\n        } else {\n            return null;\n        }\n    }\n\n    public listDataflows(): Promise<Array<structure.Dataflow>> {\n        if (this.dataflowList != null) {\n            var promise = new Promise(function(resolve, reject) {\n                resolve(this.dataflowList);\n            }.bind(this));\n            return promise;\n        } else {\n            return this.retrieve(this.serviceURL + \"GetDataStructure/ALL/ABS\").then(function(st: message.StructureType) {\n                var array: Array<structure.DataStructure> = st.getStructures().getDataStructures().getDataStructures();\n                var dfs: Array<structure.Dataflow> = [];\n                for (var i = 0; i < array.length; i++) {\n                    dfs.push(array[i].asDataflow());\n                }\n                this.dataflowList = dfs;\n                return dfs;\n            }.bind(this)\n            );\n        }\n    }\n    public getServiceURL(): string {\n        return this.serviceURL;\n    }\n    recurseDomChildren(start: any, output: any) {\n        var nodes;\n        if (start.childNodes) {\n            nodes = start.childNodes;\n            this.loopNodeChildren(nodes, output);\n        }\n    }\n\n    loopNodeChildren(nodes: Array<any>, output: any) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (output) {\n                this.outputNode(node);\n            }\n            if (node.childNodes) {\n                this.recurseDomChildren(node, output);\n            }\n        }\n    }\n    outputNode(node: any) {\n        var whitespace = /^\\s+$/g;\n        if (node.nodeType === 1) {\n            console.log(\"element: \" + node.tagName);\n        } else if (node.nodeType === 3) {\n            //clear whitespace text nodes\n            node.data = node.data.replace(whitespace, \"\");\n            if (node.data) {\n                console.log(\"text: \" + node.data);\n            }\n        }\n    }\n    findNodeName(s: string, childNodes: any) {\n        for (var i: number = 0; i < childNodes.length; i++) {\n            var nn: string = childNodes[i].nodeName;\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\n            if (nn.indexOf(s) == 0) {\n                //alert(\"found node:\"+s);\n                return childNodes[i];\n            }\n        }\n        return null;\n    }\n    searchNodeName(s: string, childNodes: any): Array<any> {\n        var result: Array<any> = [];\n        for (var i: number = 0; i < childNodes.length; i++) {\n            var nn: string = childNodes[i].nodeName;\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\n            if (nn.indexOf(s) == 0) {\n                //alert(\"found node:\"+s);\n                result.push(childNodes[i]);\n            }\n        }\n        if (result.length == 0) {\n            //alert(\"cannot find any \" + s + \" in node\");\n        }\n        return result;\n    }\n    findDataflow(ref: commonreferences.Reference): Promise<structure.Dataflow> {\n        return null;\n    }\n    findCode(ref: commonreferences.Reference): Promise<structure.CodeType> { return null; }\n    findCodelist(ref: commonreferences.Reference): Promise<structure.Codelist> { return null; }\n    findItemType(item: commonreferences.Reference): Promise<structure.ItemType> { return null; }\n    findConcept(ref: commonreferences.Reference): Promise<structure.ConceptType> { return null; }\n    findConceptScheme(ref: commonreferences.Reference): Promise<structure.ConceptSchemeType> { return null; }\n    searchDataStructure(ref: commonreferences.Reference): Promise<Array<structure.DataStructure>> { return null; }\n    searchDataflow(ref: commonreferences.Reference): Promise<Array<structure.Dataflow>> { return null; }\n    searchCodelist(ref: commonreferences.Reference): Promise<Array<structure.Codelist>> { return null; }\n    searchItemType(item: commonreferences.Reference): Promise<Array<structure.ItemType>> { return null; }\n    searchConcept(ref: commonreferences.Reference): Promise<Array<structure.ConceptType>> { return null; }\n    searchConceptScheme(ref: commonreferences.Reference): Promise<Array<structure.ConceptSchemeType>> { return null; }\n    getLocalRegistry(): interfaces.LocalRegistry {\n        return this.local;\n    }\n    save(): any { }\n}\n"],"sourceRoot":"/source/"}