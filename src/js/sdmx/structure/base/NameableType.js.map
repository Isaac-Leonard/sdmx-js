{"version":3,"sources":["sdmx/structure/base/NameableType.ts"],"names":["sdmx","sdmx.structure","sdmx.structure.base","sdmx.structure.base.NameableType","sdmx.structure.base.NameableType.constructor","sdmx.structure.base.NameableType.getNames","sdmx.structure.base.NameableType.setNames","sdmx.structure.base.NameableType.getDescriptions","sdmx.structure.base.NameableType.setDescriptions","sdmx.structure.base.NameableType.findName","sdmx.structure.base.NameableType.findDescription","sdmx.structure.base.NameableType.toString","sdmx.structure.base.NameableType.getName","sdmx.structure.base.NameableType.toStringWithLocale","sdmx.structure.base.NameableType.toIDString","sdmx.structure.base.NameableType.sanitise"],"mappings":"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","file":"sdmx/structure/base/NameableType.js","sourcesContent":["/// <reference path=\"../../common/AnnotableType.ts\" />\nmodule sdmx.structure.base {\n    import Name = sdmx.common.Name;\n    import Description = sdmx.common.Description;\n    export class NameableType extends IdentifiableType {\n        private names: Array<sdmx.common.Name> = null;\n        private descriptions: Array<sdmx.common.Description> = null;\n\n        /**\n         * @return the names\n         */\n        public getNames(): Array<sdmx.common.Name> {\n            return this.names;\n        }\n\n        /**\n         * @param names the names to set\n         */\n        public setNames(names1: Array<sdmx.common.Name>) {\n            this.names = names1;\n        }\n\n        /**\n         * @return the descriptions\n         */\n        public getDescriptions(): Array<sdmx.common.Description> {\n            return this.descriptions;\n        }\n\n        /**\n         * @param descriptions the descriptions to set\n         */\n        public setDescriptions(descriptions: Array<sdmx.common.Description>) {\n            this.descriptions = descriptions;\n        }\n\n        public findName(lang: String): sdmx.common.Name {\n            if (this.names == null) {\n                return null;\n            }\n            var def: sdmx.common.Name = null;\n            for (var i: number = 0; i < this.names.length; i++) {\n                if (lang != null && lang == this.names[i].getLang()) {\n                    return this.names[i];\n                }\n                if (this.names[i].getLang() == null) {\n                    def = this.names[i];\n                }\n            }\n            if (def == null && \"en\" != lang) {\n                def = this.findName(\"en\");\n            }\n            return def;\n        }\n\n        public findDescription(lang: String): sdmx.common.Description {\n            if (this.descriptions == null) {\n                return null;\n            }\n            var def: sdmx.common.Description = null;\n            for (var i: number = 0; i < this.descriptions.length; i++) {\n                if (lang != null && lang == this.descriptions[i].getLang()) {\n                    return this.descriptions[i];\n                }\n                if (this.descriptions[i].getLang() == null) {\n                    def = this.descriptions[i];\n                }\n            }\n            if (def == null && \"en\" != lang) {\n                def = this.findDescription(\"en\");\n            }\n            return def;\n        }\n\n        public toString(): String {\n            var loc: String = SdmxIO.getLocale();\n            var name: Name = this.findName(loc);\n            if (name != null) {\n                return name.toString();\n            }\n            var desc: Description = this.findDescription(loc);\n            if (desc != null) {\n                return desc.getText();\n            }\n            return \"NameableType\";\n        }\n\n        public getName(): String {\n            if (SdmxIO.isSanitiseNames()) {\n                return NameableType.sanitise(NameableType.toString(this));\n            } else {\n                return NameableType.toString(this);\n            }\n        }\n\n        private static toString(named: NameableType): String {\n            var loc: String = SdmxIO.getLocale();\n            if (named == null) {\n                return \"\";\n            }\n            var desc: Description = named.findDescription(loc);\n            if (desc == null) {\n                var name: Name = named.findName(loc);\n                if (name == null) {\n                    return named.getId().toString();\n                }\n                return name.getText();\n            }\n            return desc.getText();\n        }\n\n        private static toStringWithLocale(named: NameableType, loc: String): String {\n            //if (concept.equals(\"FREQ\")) {\n            //    ItemType code2 = getCode();\n            //    System.out.println(\"FREQ Code=\" + code2);\n            //}\n            if (named == null) {\n                return \"\";\n            }\n            var name: Name = named.findName(loc);\n            if (name == null) {\n                var desc: Description = named.findDescription(loc);\n                if (desc == null) {\n                    return named.getId().toString();\n                }\n                return desc.getText();\n            }\n            return name.getText();\n\n        }\n\n        private static toIDString(named: NameableType): String {\n            return named.getId().toString();\n        }\n\n        public static sanitise(s: String): String {\n            if (s.indexOf(\"'\")!=-1) {\n                s = s.replace(\"'\", \"&apos;\");\n            }\n            if (s.indexOf(\"\\\"\")!=-1) {\n                s = s.replace(\"\\\"\", \"&quot;\");\n            }\n            return s;\n        }\n    }\n}"],"sourceRoot":"/source/"}