{"version":3,"sources":["registry.ts"],"names":["LocalRegistry","LocalRegistry.constructor","LocalRegistry.listDataflows","LocalRegistry.clear","LocalRegistry.load","LocalRegistry.unload","LocalRegistry.findDataStructure","LocalRegistry.findDataflow","LocalRegistry.findCode","LocalRegistry.findCodelist","LocalRegistry.findItemType","LocalRegistry.findConcept","LocalRegistry.findConceptScheme","LocalRegistry.searchDataStructure","LocalRegistry.searchDataflow","LocalRegistry.searchCodelist","LocalRegistry.searchItemType","LocalRegistry.searchConcept","LocalRegistry.searchConceptScheme","LocalRegistry.save"],"mappings":";IAKA;QAAAA;YACYC,eAAUA,GAAiCA,EAAEA,CAACA;QA8D1DA,CAACA;QA7DGD,WAAWA;QACXA,qCAAaA,GAAbA;YACIE,IAAIA,YAAYA,GAA8BA,EAAEA,CAACA;YACjDA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,UAAUA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBAC9CA,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA,aAAaA,EAAEA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBAChDA,WAAWA,CAACA,MAAMA,CAACA,OAAOA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA,aAAaA,EAAEA,EAAEA,UAASA,CAAqBA;wBACzF,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC,CAACA,CAACA;gBACPA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,YAAYA,CAACA;QACxBA,CAACA;QACDF,6BAAKA,GAALA;YACIG,IAAIA,CAACA,UAAUA,GAAGA,EAAEA,CAACA;QACzBA,CAACA;QACDH,4BAAIA,GAAJA,UAAKA,MAA6BA;YAC9BI,IAAIA,CAACA,UAAUA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;QACjCA,CAACA;QACDJ,8BAAMA,GAANA,UAAOA,MAA6BA;YAChCK,WAAWA,CAACA,MAAMA,CAACA,MAAMA,CAACA,IAAIA,CAACA,UAAUA,EAAEA,MAAMA,CAACA,CAACA;QACvDA,CAACA;QACDL,yCAAiBA,GAAjBA,UAAkBA,GAA+BA;YAC7CM,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDN,oCAAYA,GAAZA,UAAaA,GAA+BA;YACxCO,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDP,gCAAQA,GAARA,UAASA,GAA+BA;YACpCQ,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDR,oCAAYA,GAAZA,UAAaA,GAA+BA;YACxCS,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDT,oCAAYA,GAAZA,UAAaA,IAAgCA;YACzCU,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDV,mCAAWA,GAAXA,UAAYA,GAA+BA;YACvCW,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDX,yCAAiBA,GAAjBA,UAAkBA,GAA+BA;YAC7CY,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDZ,2CAAmBA,GAAnBA,UAAoBA,GAA+BA;YAC/Ca,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDb,sCAAcA,GAAdA,UAAeA,GAA+BA;YAC1Cc,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDd,sCAAcA,GAAdA,UAAeA,GAA+BA;YAC1Ce,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDf,sCAAcA,GAAdA,UAAeA,IAAgCA;YAC3CgB,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDhB,qCAAaA,GAAbA,UAAcA,GAA+BA;YACzCiB,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDjB,2CAAmBA,GAAnBA,UAAoBA,GAA+BA;YAC/CkB,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDlB,4BAAIA,GAAJA,cAAcmB,CAACA;QACnBnB,oBAACA;IAADA,CA/DA,AA+DCA,IAAA;IA/DY,qBAAa,gBA+DzB,CAAA","file":"registry.js","sourcesContent":["///<reference path=\"collections.ts\"/>\nimport structure = require(\"structure\");\nimport interfaces = require(\"interfaces\");\nimport commonreferences = require(\"commonreferences\");\nimport message = require(\"message\");\nexport class LocalRegistry implements interfaces.Registry {\n    private structures: Array<message.StructureType> = [];\n    // Registry\n    listDataflows(): Array<structure.Dataflow> {\n        var dataflowList: Array<structure.Dataflow> = [];\n        for (var i = 0; i < this.structures.length; i++) {\n            if (this.structures[i].listDataflows().length > 0) {\n                collections.arrays.forEach(this.structures[i].listDataflows(), function(e: structure.Dataflow): void {\n                    dataflowList.push(e);\n                });\n            }\n        }\n        return dataflowList;\n    }\n    clear(): void {\n        this.structures = [];\n    }\n    load(struct: message.StructureType): void {\n        this.structures.push(struct);\n    }\n    unload(struct: message.StructureType): void {\n        collections.arrays.remove(this.structures, struct);\n    }\n    findDataStructure(ref: commonreferences.Reference): structure.DataStructure {\n        return null;\n    }\n    findDataflow(ref: commonreferences.Reference): structure.Dataflow {\n        return null;\n    }\n    findCode(ref: commonreferences.Reference): structure.CodeType {\n        return null;\n    }\n    findCodelist(ref: commonreferences.Reference): structure.Codelist {\n        return null;\n    }\n    findItemType(item: commonreferences.Reference): structure.ItemType {\n        return null;\n    }\n    findConcept(ref: commonreferences.Reference): structure.ConceptType {\n        return null;\n    }\n    findConceptScheme(ref: commonreferences.Reference): structure.ConceptSchemeType {\n        return null;\n    }\n    searchDataStructure(ref: commonreferences.Reference): Array<structure.DataStructure> {\n        return null;\n    }\n    searchDataflow(ref: commonreferences.Reference): Array<structure.Dataflow> {\n        return null;\n    }\n    searchCodelist(ref: commonreferences.Reference): Array<structure.Codelist> {\n        return null;\n    }\n    searchItemType(item: commonreferences.Reference): Array<structure.ItemType> {\n        return null;\n    }\n    searchConcept(ref: commonreferences.Reference): Array<structure.ConceptType> {\n        return null;\n    }\n    searchConceptScheme(ref: commonreferences.Reference): Array<structure.ConceptSchemeType> {\n        return null;\n    }\n    save(): any { }\n}\n"],"sourceRoot":"/source/"}