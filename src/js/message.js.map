{"version":3,"sources":["message.ts"],"names":["DataMessage","DataMessage.constructor","DataQuery","DataQuery.constructor","StructureType","StructureType.constructor","StructureType.listDataflows","StructureType.clear","StructureType.load","StructureType.unload","StructureType.findDataStructure","StructureType.findDataflow","StructureType.findCode","StructureType.findCodelist","StructureType.findItemType","StructureType.findConcept","StructureType.findConceptScheme","StructureType.searchDataStructure","StructureType.searchDataflow","StructureType.searchCodelist","StructureType.searchItemType","StructureType.searchConcept","StructureType.searchConceptScheme","StructureType.save","HeaderTimeType","HeaderTimeType.constructor","HeaderTimeType.getDate","HeaderTimeType.setDate","Contact","Contact.constructor","PartyType","PartyType.constructor","Sender","Sender.constructor","Header","Header.constructor","Header.getId","Header.setId","Header.getTest","Header.setTest","Header.getPrepared","Header.setPrepared","Header.getReceivers","Header.setReceivers","Header.getNames","Header.setNames","Header.setStructures","Header.getStructures","Header.getDataproviderReference","Header.setDataproviderReference","Header.setAction","Header.getAction","Header.getDataSetId","Header.setDataSetId","Header.getExtracted","Header.setExtracted","Header.getReportingBegin","Header.setReportingBegin","Header.getReportingEnd","Header.setReportingEnd","Header.getEmbargoDate","Header.setEmbargoDate","Header.getSource","Header.setSource"],"mappings":";;;;;;IAMA;QAAAA;QAEAC,CAACA;QAADD,kBAACA;IAADA,CAFA,AAECA,IAAA;IAFY,mBAAW,cAEvB,CAAA;IAED;QAAAE;QAEAC,CAACA;QAADD,gBAACA;IAADA,CAFA,AAECA,IAAA;IAFY,iBAAS,YAErB,CAAA;IACD;QACIE;QAEAC,CAACA;QACDD,WAAWA;QACXA,qCAAaA,GAAbA;YACIE,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDF,6BAAKA,GAALA;QAEAG,CAACA;QACDH,4BAAIA,GAAJA,UAAKA,MAAqBA;QAE1BI,CAACA;QACDJ,8BAAMA,GAANA,UAAOA,MAAqBA;QAE5BK,CAACA;QACDL,yCAAiBA,GAAjBA,UAAkBA,GAA+BA;YAC7CM,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDN,oCAAYA,GAAZA,UAAaA,GAA+BA;YACxCO,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDP,gCAAQA,GAARA,UAASA,GAA+BA;YACpCQ,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDR,oCAAYA,GAAZA,UAAaA,GAA+BA;YACxCS,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDT,oCAAYA,GAAZA,UAAaA,IAAgCA;YACzCU,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDV,mCAAWA,GAAXA,UAAYA,GAA+BA;YACvCW,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDX,yCAAiBA,GAAjBA,UAAkBA,GAA+BA;YAC7CY,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDZ,2CAAmBA,GAAnBA,UAAoBA,GAA+BA;YAC/Ca,MAAMA,CAACA,IAAIA,KAAKA,EAAsBA,CAACA;QAC3CA,CAACA;QACDb,sCAAcA,GAAdA,UAAeA,GAA+BA;YAC1Cc,MAAMA,CAACA,IAAIA,KAAKA,EAAsBA,CAACA;QAC3CA,CAACA;QACDd,sCAAcA,GAAdA,UAAeA,GAA+BA;YAC1Ce,MAAMA,CAACA,IAAIA,KAAKA,EAA0BA,CAACA;QAC/CA,CAACA;QACDf,sCAAcA,GAAdA,UAAeA,IAAgCA;YAC3CgB,MAAMA,CAACA,IAAIA,KAAKA,EAAsBA,CAACA;QAC3CA,CAACA;QACDhB,qCAAaA,GAAbA,UAAcA,GAA+BA;YACzCiB,MAAMA,CAACA,IAAIA,KAAKA,EAAyBA,CAACA;QAC9CA,CAACA;QACDjB,2CAAmBA,GAAnBA,UAAoBA,GAA+BA;YAC/CkB,MAAMA,CAACA,IAAIA,KAAKA,EAA+BA,CAACA;QACpDA,CAACA;QACDlB,4BAAIA,GAAJA;QAEAmB,CAACA;QAELnB,oBAACA;IAADA,CA5DA,AA4DCA,IAAA;IA5DY,qBAAa,gBA4DzB,CAAA;IACD;QAEIoB,wBAAYA,CAAeA;YADnBC,SAAIA,GAAiBA,IAAIA,CAACA;YAE9BA,IAAIA,CAACA,IAAIA,GAACA,CAACA,CAACA;QAChBA,CAACA;QACDD,gCAAOA,GAAPA,cAA0BE,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA;QAC7CF,gCAAOA,GAAPA,UAAQA,CAAeA;YACnBG,IAAIA,CAACA,IAAIA,GAAGA,CAACA,CAACA;QAClBA,CAACA;QACLH,qBAACA;IAADA,CATA,AASCA,IAAA;IATY,sBAAc,iBAS1B,CAAA;IACD;QAAAI;YACWC,SAAIA,GAAuBA,EAAEA,CAACA;YAC9BA,gBAAWA,GAA2BA,EAAEA,CAACA;YACzCA,UAAKA,GAA2BA,EAAEA,CAACA;YACnCA,eAAUA,GAAkBA,EAAEA,CAACA;YAC/BA,UAAKA,GAAkBA,EAAEA,CAACA;YAC1BA,UAAKA,GAAkBA,EAAEA,CAACA;YAC1BA,SAAIA,GAAsBA,EAAEA,CAACA;YAC7BA,WAAMA,GAAkBA,EAAEA,CAACA;QACtCA,CAACA;QAADD,cAACA;IAADA,CATA,AASCA,IAAA;IATY,eAAO,UASnB,CAAA;IACD;QAA+BE,6BAAsBA;QAArDA;YAA+BC,8BAAsBA;YAC1CA,aAAQA,GAAmBA,EAAEA,CAACA;QACzCA,CAACA;QAADD,gBAACA;IAADA,CAFA,AAECA,EAF8B,SAAS,CAAC,YAAY,EAEpD;IAFY,iBAAS,YAErB,CAAA;IACD;QAA4BE,0BAASA;QAArCA;YAA4BC,8BAASA;QAGrCA,CAACA;QAADD,aAACA;IAADA,CAHA,AAGCA,EAH2B,SAAS,EAGpC;IAHY,cAAM,SAGlB,CAAA;IACD;QAAAE;YACYC,OAAEA,GAAWA,IAAIA,CAACA;YAClBA,SAAIA,GAAYA,IAAIA,CAACA;YACrBA,aAAQA,GAAmBA,IAAIA,CAACA;YAChCA,cAASA,GAAqBA,EAAEA,CAACA;YACjCA,UAAKA,GAAuBA,EAAEA,CAACA;YAC/BA,eAAUA,GAAuCA,EAAEA,CAACA;YACpDA,0BAAqBA,GAA+BA,IAAIA,CAACA;YACzDA,kBAAaA,GAAsBA,IAAIA,CAACA;YACxCA,cAASA,GAAmCA,EAAEA,CAACA;YAC/CA,cAASA,GAAiBA,IAAIA,CAACA;YAC/BA,mBAAcA,GAAuCA,IAAIA,CAACA;YAC1DA,iBAAYA,GAAuCA,IAAIA,CAACA;YACxDA,gBAAWA,GAAiBA,IAAIA,CAACA;YACjCA,WAAMA,GAAuBA,EAAEA,CAACA;QA6E5CA,CAACA;QA5EGD,sBAAKA,GAALA,cAAkBE,MAAMA,CAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,CAACA;QACnCF,sBAAKA,GAALA,UAAMA,CAASA,IAAIG,IAAIA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;QACjCH,wBAAOA,GAAPA,cAAqBI,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACxCJ,wBAAOA,GAAPA,UAAQA,CAAUA;YACdK,IAAIA,CAACA,IAAIA,GAAGA,CAACA,CAACA;QAClBA,CAACA;QACDL,4BAAWA,GAAXA,cAAgCM,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA;QACvDN,4BAAWA,GAAXA,UAAYA,CAAiBA;YACzBO,IAAIA,CAACA,QAAQA,GAAGA,CAACA,CAACA;QACtBA,CAACA;QACDP,6BAAYA,GAAZA;YACIQ,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA;QAC1BA,CAACA;QACDR,6BAAYA,GAAZA,UAAaA,IAAsBA;YAC/BS,IAAIA,CAACA,SAASA,GAAGA,IAAIA,CAACA;QAC1BA,CAACA;QACDT,yBAAQA,GAARA;YACIU,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA;QACtBA,CAACA;QACDV,yBAAQA,GAARA,UAASA,CAAqBA;YAC1BW,IAAIA,CAACA,KAAKA,GAAGA,CAACA,CAACA;QACnBA,CAACA;QACDX,8BAAaA,GAAbA,UAAcA,EAAsCA;YAChDY,IAAIA,CAACA,UAAUA,GAAGA,EAAEA,CAACA;QACzBA,CAACA;QACDZ,8BAAaA,GAAbA;YACIa,MAAMA,CAACA,IAAIA,CAACA,UAAUA,CAACA;QAC3BA,CAACA;QACDb,yCAAwBA,GAAxBA;YACIc,MAAMA,CAACA,IAAIA,CAACA,qBAAqBA,CAACA;QACtCA,CAACA;QACDd,yCAAwBA,GAAxBA,UAAyBA,GAA+BA;YACpDe,IAAIA,CAACA,qBAAqBA,GAACA,GAAGA,CAACA;QACnCA,CAACA;QACDf,0BAASA,GAATA,UAAUA,EAAqBA;YAC3BgB,IAAIA,CAACA,aAAaA,GAACA,EAAEA,CAACA;QAC1BA,CAACA;QACDhB,0BAASA,GAATA;YACIiB,MAAMA,CAACA,IAAIA,CAACA,aAAaA,CAACA;QAC9BA,CAACA;QACDjB,6BAAYA,GAAZA;YACIkB,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA;QAC1BA,CAACA;QACDlB,6BAAYA,GAAZA,UAAaA,GAAmCA;YAC5CmB,IAAIA,CAACA,SAASA,GAACA,GAAGA,CAACA;QACvBA,CAACA;QACDnB,6BAAYA,GAAZA;YACIoB,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA;QAC1BA,CAACA;QACDpB,6BAAYA,GAAZA,UAAaA,CAAeA;YACxBqB,IAAIA,CAACA,SAASA,GAACA,CAACA,CAACA;QACrBA,CAACA;QACDrB,kCAAiBA,GAAjBA;YACIsB,MAAMA,CAACA,IAAIA,CAACA,cAAcA,CAACA;QAC/BA,CAACA;QACDtB,kCAAiBA,GAAjBA,UAAkBA,CAAqCA;YACnDuB,IAAIA,CAACA,cAAcA,GAACA,CAACA,CAACA;QAC1BA,CAACA;QACDvB,gCAAeA,GAAfA;YACIwB,MAAMA,CAACA,IAAIA,CAACA,YAAYA,CAACA;QAC7BA,CAACA;QACDxB,gCAAeA,GAAfA,UAAgBA,CAAqCA;YACjDyB,IAAIA,CAACA,YAAYA,GAACA,CAACA,CAACA;QACxBA,CAACA;QACDzB,+BAAcA,GAAdA;YACI0B,MAAMA,CAACA,IAAIA,CAACA,WAAWA,CAACA;QAC5BA,CAACA;QACD1B,+BAAcA,GAAdA,UAAeA,EAAgBA;YAC3B2B,IAAIA,CAACA,WAAWA,GAACA,EAAEA,CAACA;QACxBA,CAACA;QACD3B,0BAASA,GAATA;YACI4B,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA;QACvBA,CAACA;QACD5B,0BAASA,GAATA,UAAUA,CAAoBA;YAC1B6B,IAAIA,CAACA,MAAMA,GAACA,CAACA,CAACA;QAClBA,CAACA;QACL7B,aAACA;IAADA,CA3FA,AA2FCA,IAAA;IA3FY,cAAM,SA2FlB,CAAA","file":"message.js","sourcesContent":["/// <amd-module name='message'/>\nimport sdmx = require(\"sdmx\");\nimport structure = require(\"structure\");\nimport commonreferences = require(\"commonreferences\");\nimport xml = require(\"xml\");\nimport common = require(\"common\");\nexport class DataMessage {\n\n}\n\nexport class DataQuery {\n\n}\nexport class StructureType implements sdmx.Registry {\n    constructor() {\n\n    }\n    // Registry\n    listDataflows(): Array<structure.Dataflow> {\n        return null;\n    }\n    clear(): void {\n\n    }\n    load(struct: StructureType): void {\n\n    }\n    unload(struct: StructureType): void {\n\n    }\n    findDataStructure(ref: commonreferences.Reference): structure.DataStructure {\n        return null;\n    }\n    findDataflow(ref: commonreferences.Reference): structure.Dataflow {\n        return null;\n    }\n    findCode(ref: commonreferences.Reference): structure.CodeType {\n        return null;\n    }\n    findCodelist(ref: commonreferences.Reference): structure.CodelistType {\n        return null;\n    }\n    findItemType(item: commonreferences.Reference): structure.ItemType {\n        return null;\n    }\n    findConcept(ref: commonreferences.Reference): structure.ConceptType {\n        return null;\n    }\n    findConceptScheme(ref: commonreferences.Reference): structure.ConceptSchemeType {\n        return null;\n    }\n    searchDataStructure(ref: commonreferences.Reference): Array<structure.DataStructure> {\n        return new Array<structure.ItemType>();\n    }\n    searchDataflow(ref: commonreferences.Reference): Array<structure.Dataflow> {\n        return new Array<structure.Dataflow>();\n    }\n    searchCodelist(ref: commonreferences.Reference): Array<structure.CodelistType> {\n        return new Array<structure.CodelistType>();\n    }\n    searchItemType(item: commonreferences.Reference): Array<structure.ItemType> {\n        return new Array<structure.ItemType>();\n    }\n    searchConcept(ref: commonreferences.Reference): Array<structure.ConceptType> {\n        return new Array<structure.ConceptType>();\n    }\n    searchConceptScheme(ref: commonreferences.Reference): Array<structure.ConceptSchemeType> {\n        return new Array<structure.ConceptSchemeType>();\n    }\n    save(): any {\n\n    }\n\n}\nexport class HeaderTimeType {\n    private date: xml.DateTime = null;\n    constructor(d: xml.DateTime){\n        this.date=d;\n    }\n    getDate(): xml.DateTime { return this.date; }\n    setDate(d: xml.DateTime): void {\n        this.date = d;\n    }\n}\nexport class Contact {\n    public name: Array<common.Name> = [];\n    public departments: Array<common.TextType> = [];\n    public roles: Array<common.TextType> = [];\n    public telephones: Array<string> = [];\n    public faxes: Array<string> = [];\n    public z400s: Array<string> = [];\n    public uris: Array<xml.anyURI> = [];\n    public emails: Array<string> = [];\n}\nexport class PartyType extends structure.NameableType {\n    public contacts: Array<Contact> = [];\n}\nexport class Sender extends PartyType {\n\n\n}\nexport class Header {\n    private id: string = null;\n    private test: boolean = null;\n    private prepared: HeaderTimeType = null;\n    private receivers: Array<PartyType> = [];\n    private names: Array<common.Name> = [];\n    private structures: Array<common.PayloadStructureType> = [];\n    private dataproviderReference: commonreferences.Reference = null;\n    private dataSetAction: common.ActionType = null;\n    private dataSetId: Array<commonreferences.IDType> = [];\n    private extracted: xml.DateTime = null;\n    private reportingBegin: common.ObservationalTimePeriodType = null;\n    private reportingEnd: common.ObservationalTimePeriodType = null;\n    private embargoDate: xml.DateTime = null;\n    private source: Array<common.Name> = [];\n    getId(): string { return this.id; }\n    setId(s: string) { this.id = s; }\n    getTest(): boolean { return this.test; }\n    setTest(b: boolean) {\n        this.test = b;\n    }\n    getPrepared(): HeaderTimeType { return this.prepared; }\n    setPrepared(h: HeaderTimeType) {\n        this.prepared = h;\n    }\n    getReceivers(): Array<PartyType> {\n        return this.receivers;\n    }\n    setReceivers(recs: Array<PartyType>) {\n        this.receivers = recs;\n    }\n    getNames(): Array<common.Name> {\n        return this.names;\n    }\n    setNames(n: Array<common.Name>) {\n        this.names = n;\n    }\n    setStructures(pl: Array<common.PayloadStructureType>) {\n        this.structures = pl;\n    }\n    getStructures(): Array<common.PayloadStructureType> {\n        return this.structures;\n    }\n    getDataproviderReference():commonreferences.Reference{\n        return this.dataproviderReference;\n    }\n    setDataproviderReference(ref: commonreferences.Reference) {\n        this.dataproviderReference=ref;\n    }\n    setAction(ac: common.ActionType) {\n        this.dataSetAction=ac;\n    }\n    getAction(): common.ActionType{\n        return this.dataSetAction;\n    }\n    getDataSetId(): Array<commonreferences.IDType>{\n        return this.dataSetId;\n    }\n    setDataSetId(ids: Array<commonreferences.IDType>){\n        this.dataSetId=ids;\n    }\n    getExtracted(): xml.DateTime{\n        return this.extracted;\n    }\n    setExtracted(d: xml.DateTime) {\n        this.extracted=d;\n    }\n    getReportingBegin(): common.ObservationalTimePeriodType{\n        return this.reportingBegin;\n    }\n    setReportingBegin(o: common.ObservationalTimePeriodType) {\n        this.reportingBegin=o;\n    }\n    getReportingEnd(): common.ObservationalTimePeriodType{\n        return this.reportingEnd;\n    }\n    setReportingEnd(o: common.ObservationalTimePeriodType) {\n        this.reportingEnd=o;\n    }\n    getEmbargoDate(): xml.DateTime{\n        return this.embargoDate;\n    }\n    setEmbargoDate(dt: xml.DateTime) {\n        this.embargoDate=dt;\n    }\n    getSource(): Array<common.Name>{\n        return this.source;\n    }\n    setSource(s:Array<common.Name>){\n        this.source=s;\n    }\n}\n\n\n"],"sourceRoot":"/source/"}