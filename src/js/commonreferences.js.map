{"version":3,"sources":["commonreferences.ts"],"names":["NestedID","NestedID.constructor","NestedID.getPatternArray","NestedID.equalsNestedID","NestedID.equalsString","NestedID.equalsID","NestedID.asID","IDType","IDType.constructor","IDType.equalsID","IDType.equalsString","IDType.getPatternArray","NestedNCNameID","NestedNCNameID.constructor","NestedNCNameID.getPatternArray","NestedNCNameID.equalsNestedNCNameID","Ref","Ref.constructor","Ref.getAgencyId","Ref.getId","Ref.getVersion","Ref.getMaintainableParentId","Ref.getMaintainableParentVersion","Ref.getRefClass","Ref.getPack","Ref.setAgencyId","Ref.setId","Ref.setVersion","Ref.setMaintainableParentId","Ref.setMaintainableParentVersion","Ref.setRefClass","Ref.setPackage","Reference","Reference.constructor","Reference.getRef","Reference.setRef","Reference.getUrn","Reference.setUrn","Reference.getPack","Reference.getRefClass","Reference.getClazz","Reference.getAgencyId","Reference.getMaintainableParentId","Reference.getVersion","Reference.getId","Reference.getContainedObjectIds","Reference.getMaintainedParentVersion","Reference.dump","Reference.toString","Reference.parse","Reference.produce","Version","Version.constructor","Version.getPatternArray","Version.equalsVersion","Version.equals","Version.compareTo","ObjectTypeCodelistType","ObjectTypeCodelistType.constructor","ObjectTypeCodelistType.add","ObjectTypeCodelistType.addString","ObjectTypeCodelistType.fromString","ObjectTypeCodelistType.fromStringWithException","ObjectTypeCodelistType.toString","ObjectTypeCodelistType.toInt","PackageTypeCodelistType","PackageTypeCodelistType.constructor","PackageTypeCodelistType.add","PackageTypeCodelistType.addString","PackageTypeCodelistType.fromString","PackageTypeCodelistType.fromStringWithException","PackageTypeCodelistType.toString"],"mappings":"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","file":"commonreferences.js","sourcesContent":["import xml = require(\"xml\");\n\nexport class NestedID extends xml.RegexXMLString {\n\n    public static PATTERN: string = \"[A-z0-9_@$\\\\-]+(\\\\.[A-z0-9_@$\\\\-]+)*\";\n\n    constructor(s: string) {\n        super(s);\n    }\n\n    public getPatternArray(): string[] {\n        return [NestedID.PATTERN];\n    }\n\n    public equalsNestedID(id: NestedID): boolean {\n        if (super.getString() == null) return false;\n        return super.getString() == id.getString();\n    }\n\n    public equalsString(id: string): boolean {\n        return super.equalsString(id);\n    }\n\n    public equalsID(id: IDType): boolean {\n        return super.getString() == id.getString();\n    }\n\n    public asID(): IDType {\n        return new IDType(super.getString());\n    }\n}\nexport class IDType extends NestedID {\n\n    public static PATTERN: string = \"[A-z0-9_@$\\\\-]+\";\n\n    constructor(s: string) {\n        super(s);\n        if (s == null) { throw new Error(\"null IDType string\"); }\n    }\n\n    public equalsID(id: IDType): boolean {\n        return false;\n    }\n\n    public equalsString(id: string): boolean {\n        return false;\n    }\n    public getPatternArray(): string[] {\n        return [IDType.PATTERN];\n    }\n}\nexport class NestedNCNameID extends NestedID {\n    public static PATTERN: string = \"[A-z][A-z0-9_\\\\-]*(\\\\.[A-z][A-z0-9_\\\\-]*)*\";\n\n    constructor(s: string) {\n        super(s);\n    }\n    public getPatternArray(): string[] {\n        return [NestedNCNameID.PATTERN];\n    }\n    public equalsNestedNCNameID(id: NestedNCNameID): boolean {\n        return super.getString() == id.getString();\n    }\n}\nexport class Ref {\n    private agencyId: NestedNCNameID = null;\n    private id: IDType = null;\n    private version: Version = null;\n    private maintainedParentId: IDType = null;\n    private maintainedParentVersion: Version = null;\n    private local: boolean = null;\n    private object: ObjectTypeCodelistType = null;\n    private package: PackageTypeCodelistType = null;\n\n\n    constructor(agencyId: NestedNCNameID, id: NestedID, vers: Version, maintParent: IDType, mainVers: Version, containId: NestedID, loc: boolean, ob: ObjectTypeCodelistType, pack: PackageTypeCodelistType) {\n        this.agencyId = agencyId;\n        this.id = id;\n        this.version = vers;\n        this.maintainedParentId = maintParent;\n        this.maintainedParentVersion = mainVers;\n        this.local = loc;\n        this.object = ob;\n        this.package = pack;\n    }\n\n    public getAgencyId(): NestedNCNameID {\n        return this.agencyId;\n    }\n    public getId(): IDType {\n        return this.id;\n    }\n    public getVersion(): Version {\n        return this.version;\n    }\n    public getMaintainableParentId(): IDType {\n        return this.maintainedParentId;\n    }\n    public getMaintainableParentVersion(): Version {\n        return this.maintainedParentVersion;\n    }\n    public getRefClass(): ObjectTypeCodelistType {\n        return this.object;\n    }\n    public getPack(): PackageTypeCodelistType {\n        return this.package;\n\n    }\n    public setAgencyId(a: NestedNCNameID) {\n        this.agencyId = a;\n    }\n    public setId(id: IDType) {\n        this.id = id;\n    }\n    public setVersion(v: Version) {\n        this.version = v;\n    }\n    public setMaintainableParentId(id: IDType) {\n        this.maintainedParentId = id;\n    }\n    public setMaintainableParentVersion(v: Version) {\n        this.maintainedParentVersion = v;\n    }\n    public setRefClass(ob: ObjectTypeCodelistType) {\n        this.object = ob;\n    }\n    public setPackage(p: PackageTypeCodelistType) {\n        this.package = p;\n    }\n}\nexport class Reference {\n    public urn: xml.anyURI;\n    public ref: Ref;\n\n    private pack: PackageTypeCodelistType = null;\n    private clazz: ObjectTypeCodelistType = null;\n    private agency: NestedNCNameID = null;\n    private maintainedParentId: IDType = null;\n    private maintainedParentVersion: Version = null;\n    private version: Version = null;\n    private containedIds: Array<IDType> = null;\n    private objectId: NestedID = null;\n\n    constructor(ref: Ref, urn: xml.anyURI) {\n        this.ref = ref;\n        this.urn = urn;\n        if (this.ref != null) {\n            //try {\n            this.pack = ref.getPack();\n            this.clazz = ref.getRefClass();\n            this.agency = ref.getAgencyId();\n            this.objectId = ref.getId();\n            this.maintainedParentId = ref.getMaintainableParentId();\n            this.maintainedParentVersion = ref.getMaintainableParentVersion();\n            this.version = ref.getVersion();\n            //} catch (URISyntaxException ex) {\n            //    Logger.getLogger(ReferenceType.class.getName()).log(Level.SEVERE, null, ex);\n            //}\n        } else {\n            this.parse();\n        }\n        if (this.urn == null) {\n            try {\n                //if (this.getAgencyId() != null) {\n                this.produce();\n                //}\n            } catch (Error) {\n            }\n        }\n    }\n\n    /**\n     * @return the ref\n     */\n    public getRef(): Ref {\n        return this.ref;\n    }\n\n    /**\n     * @param ref the ref to set\n     */\n    public setRef(ref: Ref) {\n        this.ref = ref;\n    }\n\n    /**\n     * @return the urn\n     */\n    public getUrn(): xml.anyURI {\n        return this.urn;\n    }\n\n    /**\n     * @param urn the urn to set\n     */\n    public setUrn(urn: xml.anyURI) {\n        this.urn = urn;\n    }\n\n    /**\n     * @return the pack\n     */\n    public getPack(): PackageTypeCodelistType {\n        return this.pack;\n    }\n\n    /**\n     * @return the clazz\n     */\n    public getRefClass(): ObjectTypeCodelistType {\n        return this.clazz;\n    }\n\n    /**\n     * @return the clazz\n     */\n    public getClazz(): ObjectTypeCodelistType {\n        return this.clazz;\n    }\n\n    /**\n     * @return the agency\n     */\n    public getAgencyId(): NestedNCNameID {\n        return this.agency;\n    }\n\n    /**\n     * @return the maintainedObjectId\n     */\n    public getMaintainableParentId(): IDType {\n        return this.maintainedParentId;\n    }\n\n    /**\n     * @return the maintainedObjectVersion\n     */\n    public getVersion(): Version {\n        return this.version;\n    }\n\n    /**\n     * @return the objectId\n     */\n    public getId(): NestedID {\n        return this.objectId;\n    }\n\n    public getContainedObjectIds(): Array<IDType> {\n        return this.containedIds;\n    }\n\n    /**\n     * @return the maintainedParentVersion\n     */\n    public getMaintainedParentVersion(): Version {\n        return this.maintainedParentVersion;\n    }\n    //public IDType getMainID() {\n    //    if( this.maintainedParentId==null ) return objectId!=null?objectId.asID():null;\n    //    else return maintainedParentId;\n    //}\n\n    public dump() {\n    }\n\n    public toString(): string {\n        var s: string = \"\";\n        return s;\n    }\n    public parse() {\n\n    }\n    public produce() {\n\n    }\n}\nexport class Version extends xml.RegexXMLString {\n    public static PATTERN: string = \"[0-9]+(\\\\.[0-9]+)*\";\n    public static ONE: Version = new Version(\"1.0\");\n    constructor(s: string) {\n        super(s);\n    }\n    public getPatternArray(): string[] {\n        return [Version.PATTERN];\n    }\n    public equalsVersion(id: Version): boolean {\n        return super.getString() == id.getString();\n    }\n    public equals(id: String): boolean {\n        return super.getString() == id;\n    }\n    public compareTo(o: Object): number {\n        if (!(o instanceof Version)) return -1;\n        var a1: number = parseFloat(o.toString());\n        var a2: number = parseFloat(toString());\n        return a1 > a2 ? 1 : a1 < a2 ? -1 : 0;\n    }\n}\nexport class ObjectTypeCodelistType {\n\n    public static ENUM: Array<ObjectTypeCodelistType> = new Array<ObjectTypeCodelistType>();\n    public static STRING_ENUM: Array<string> = new Array<string>();\n\n    public static TARGET_ANY: string = ObjectTypeCodelistType.addString(\"Any\");\n    public static TARGET_AGENCY: string = ObjectTypeCodelistType.addString(\"Agency\");\n\n    public static TARGET_AGENCYSCHEME: string = ObjectTypeCodelistType.addString(\"AgencyScheme\");\n    public static TARGET_ATTACHMENTCONSTRAINT: string = ObjectTypeCodelistType.addString(\"AttachmentConstraint\");\n    public static TARGET_ATTRIBUTE: string = ObjectTypeCodelistType.addString(\"Attribute\");\n    public static TARGET_ATTRIBUTEDESCRIPTOR: string = ObjectTypeCodelistType.addString(\"AttributeDescriptor\");\n    public static TARGET_CATEGORISATION: string = ObjectTypeCodelistType.addString(\"Categorisation\");\n    public static TARGET_CATEGORY: string = ObjectTypeCodelistType.addString(\"Category\");\n    public static TARGET_CATEGORYSCHEMEMAP: string = ObjectTypeCodelistType.addString(\"CategorySchemeMap\");\n    public static TARGET_CATEGORYSCHEME: string = ObjectTypeCodelistType.addString(\"CategoryScheme\");\n    public static TARGET_CODE: string = ObjectTypeCodelistType.addString(\"Code\");\n    public static TARGET_CODEMAP: string = ObjectTypeCodelistType.addString(\"CodeMap\");\n    public static TARGET_CODELIST: string = ObjectTypeCodelistType.addString(\"Codelist\");\n    public static TARGET_CODELISTMAP: string = ObjectTypeCodelistType.addString(\"CodelistMap\");\n    public static TARGET_COMPONENTMAP: string = ObjectTypeCodelistType.addString(\"ComponentMap\");\n    public static TARGET_CONCEPT: string = ObjectTypeCodelistType.addString(\"Concept\");\n    public static TARGET_CONCEPTMAP: string = ObjectTypeCodelistType.addString(\"ConceptMap\");\n    public static TARGET_CONCEPTSCHEME: string = ObjectTypeCodelistType.addString(\"ConceptScheme\");\n    public static TARGET_CONCEPTSCHEMEMAP: string = ObjectTypeCodelistType.addString(\"ConceptSchemeMap\");\n    public static TARGET_CONSTRAINT: string = ObjectTypeCodelistType.addString(\"Constraint\");\n    public static TARGET_CONSTRAINTARGET: string = ObjectTypeCodelistType.addString(\"ConstraintTarget\");\n    public static TARGET_CONTENTCONSTRAINT: string = ObjectTypeCodelistType.addString(\"ContentConstraint\");\n    public static TARGET_DATAFLOW: string = ObjectTypeCodelistType.addString(\"Dataflow\");\n    public static TARGET_DATACONSUMER: string = ObjectTypeCodelistType.addString(\"DataConsumer\");\n    public static TARGET_DATACONSUMERSCHEME: string = ObjectTypeCodelistType.addString(\"DataConsumerScheme\");\n    public static TARGET_DATAPROVIDER: string = ObjectTypeCodelistType.addString(\"DataProvider\");\n    public static TARGET_DATAPROVIDERSCHEME: string = ObjectTypeCodelistType.addString(\"DataProviderScheme\");\n    public static TARGET_DATASETTARGET: string = ObjectTypeCodelistType.addString(\"DataSetTarget\");\n    public static TARGET_DATASTRUCTURE: string = ObjectTypeCodelistType.addString(\"DataStructure\");\n    public static TARGET_DIMENSION: string = ObjectTypeCodelistType.addString(\"Dimension\");\n    public static TARGET_DIMENSIONDESCRIPTOR: string = ObjectTypeCodelistType.addString(\"DimensionDescriptor\");\n    public static TARGET_DIMENSIONDESCRIPTORVALUESTARGET: string = ObjectTypeCodelistType.addString(\"DimensionDescriptorValuesTarget\");\n    public static TARGET_GROUPDIMENSIONDESCRIPTOR: string = ObjectTypeCodelistType.addString(\"GroupDimensionDescriptor\");\n    public static TARGET_HIERARCHICALCODE: string = ObjectTypeCodelistType.addString(\"HierarchicalCode\");\n    public static TARGET_HIERARCHICALCODELIST: string = ObjectTypeCodelistType.addString(\"HierarchicalCodelist\");\n    public static TARGET_HIERARCHY: string = ObjectTypeCodelistType.addString(\"Hierarchy\");\n    public static TARGET_HYBRIDCODELISTMAP: string = ObjectTypeCodelistType.addString(\"HybridCodelistMap\");\n    public static TARGET_HYBRIDCODEMAP: string = ObjectTypeCodelistType.addString(\"HybridCodeMap\");\n    public static TARGET_IDENTIFIABLEOBJECTTARGET: string = ObjectTypeCodelistType.addString(\"IdentifiableObjectTarget\");\n    public static TARGET_LEVEL: string = ObjectTypeCodelistType.addString(\"Level\");\n    public static TARGET_MEASUREDESCRIPTOR: string = ObjectTypeCodelistType.addString(\"MeasureDescriptor\");\n    public static TARGET_MEASUREDIMENSION: string = ObjectTypeCodelistType.addString(\"MeasureDimension\");\n    public static TARGET_METADATAFLOW: string = ObjectTypeCodelistType.addString(\"Metadataflow\");\n    public static TARGET_METADATAATTRIBUTE: string = ObjectTypeCodelistType.addString(\"MetadataAttribute\");\n    public static TARGET_METADATASET: string = ObjectTypeCodelistType.addString(\"MetadataSet\");\n    public static TARGET_METADATASTRUCTURE: string = ObjectTypeCodelistType.addString(\"MetadataStructure\");\n    public static TARGET_METADATATARGET: string = ObjectTypeCodelistType.addString(\"MetadataTarget\");\n    public static TARGET_ORGANISATION: string = ObjectTypeCodelistType.addString(\"Organisation\");\n    public static TARGET_ORGANISATIONMAP: string = ObjectTypeCodelistType.addString(\"OrganisationMap\");\n    public static TARGET_ORGANISATIONSCHEME: string = ObjectTypeCodelistType.addString(\"OrganisationScheme\");\n    public static TARGET_ORGANISATIONSCHEMEMAP: string = ObjectTypeCodelistType.addString(\"OrganisationSchemeMap\");\n    public static TARGET_ORGANISATIONUNIT: string = ObjectTypeCodelistType.addString(\"OrganisationUnit\");\n    public static TARGET_ORGANISATIONUNITSCHEME: string = ObjectTypeCodelistType.addString(\"OrganisationUnitScheme\");\n    public static TARGET_PRIMARYMEASURE: string = ObjectTypeCodelistType.addString(\"PrimaryMeasure\");\n    public static TARGET_PROCESS: string = ObjectTypeCodelistType.addString(\"Process\");\n    public static TARGET_PROCESSSTEP: string = ObjectTypeCodelistType.addString(\"ProcessStep\");\n    public static TARGET_PROVISIONAGREEMENT: string = ObjectTypeCodelistType.addString(\"ProvisionAgreement\");\n    public static TARGET_REPORTINGCATEGORY: string = ObjectTypeCodelistType.addString(\"ReportingCategory\");\n    public static TARGET_REPORTINGCATEGORYMAP: string = ObjectTypeCodelistType.addString(\"ReportingCategoryMap\");\n    public static TARGET_REPORTINGTAXONOMY: string = ObjectTypeCodelistType.addString(\"ReportingTaxonomy\");\n    public static TARGET_REPORTINGTAXONOMYMAP: string = ObjectTypeCodelistType.addString(\"ReportingTaxonomyMap\");\n    public static TARGET_REPORTINGYEARSTARTDAY: string = ObjectTypeCodelistType.addString(\"ReportingYearStartDay\");\n    public static TARGET_REPORTPERIODTARGET: string = ObjectTypeCodelistType.addString(\"ReportPeriodTarget\");\n    public static TARGET_REPORTSTRUCTURE: string = ObjectTypeCodelistType.addString(\"ReportStructure\");\n    public static TARGET_STRUCTUREMAP: string = ObjectTypeCodelistType.addString(\"StructureMap\");\n    public static TARGET_STRUCTURESET: string = ObjectTypeCodelistType.addString(\"StructureSet\");\n    public static TARGET_TIMEDIMENSION: string = ObjectTypeCodelistType.addString(\"TimeDimension\");\n    public static TARGET_TRANSITION: string = ObjectTypeCodelistType.addString(\"Transition\");\n\n    public static ANY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ANY);\n    public static AGENCY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_AGENCY);\n    public static AGENCYSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_AGENCYSCHEME);\n    public static ATTACHMENTCONSTRAINT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ATTACHMENTCONSTRAINT);\n    public static ATTRIBUTE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ATTRIBUTE);\n    public static ATTRIBUTEDESCRIPTOR: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ATTRIBUTEDESCRIPTOR);\n    public static CATEGORISATION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CATEGORISATION);\n    public static CATEGORY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CATEGORY);\n    public static CATEGORYSCHEMEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CATEGORYSCHEMEMAP);\n    public static CATEGORYSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CATEGORYSCHEME);\n    public static CODE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CODE);\n    public static CODEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CODE);\n    public static CODELIST: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CODELIST);\n    public static CODELISTMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CODELISTMAP);\n    public static COMPONENTMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_COMPONENTMAP);\n    public static CONCEPT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONCEPT);\n    public static CONCEPTMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONCEPTMAP);\n    public static CONCEPTSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONCEPTSCHEME);\n    public static CONCEPTSCHEMEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONCEPTSCHEMEMAP);\n    public static CONSTRAINT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONSTRAINT);\n    public static CONSTRAINTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONSTRAINTARGET);\n    public static CONTENTCONSTRAINT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_CONTENTCONSTRAINT);\n    public static DATAFLOW: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATAFLOW);\n    public static DATACONSUMER: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATACONSUMER);\n    public static DATACONSUMERSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATACONSUMERSCHEME);\n    public static DATAPROVIDER: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATAPROVIDER);\n    public static DATAPROVIDERSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATAPROVIDERSCHEME);\n    public static DATASETTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATASETTARGET);\n    public static DATASTRUCTURE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DATASTRUCTURE);\n    public static DIMENSION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DIMENSION);\n    public static DIMENSIONDESCRIPTOR: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DIMENSIONDESCRIPTOR);\n    public static DIMENSIONDESCRIPTORVALUESTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_DIMENSIONDESCRIPTORVALUESTARGET);\n    public static GROUPDIMENSIONDESCRIPTOR: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_GROUPDIMENSIONDESCRIPTOR);\n    public static HIERARCHICALCODE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HIERARCHICALCODE);\n    public static HIERARCHICALCODELIST: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HIERARCHICALCODELIST);\n    public static HIERARCHY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HIERARCHY);\n    public static HYBRIDCODELISTMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HYBRIDCODELISTMAP);\n    public static HYBRIDCODEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_HYBRIDCODEMAP);\n    public static IDENTIFIABLEOBJECTTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_IDENTIFIABLEOBJECTTARGET);\n    public static LEVEL: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_LEVEL);\n    public static MEASUREDESCRIPTOR: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_MEASUREDESCRIPTOR);\n    public static MEASUREDIMENSION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_MEASUREDIMENSION);\n    public static METADATAFLOW: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATAFLOW);\n    public static METADATAATTRIBUTE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATAATTRIBUTE);\n    public static METADATASET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATASET);\n    public static METADATASTRUCTURE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATASTRUCTURE);\n    public static METADATATARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_METADATATARGET);\n    public static ORGANISATION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATION);\n    public static ORGANISATIONMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONMAP);\n    public static ORGANISATIONSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONSCHEME);\n    public static ORGANISATIONSCHEMEMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONSCHEMEMAP);\n    public static ORGANISATIONUNIT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONUNIT);\n    public static ORGANISATIONUNITSCHEME: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_ORGANISATIONUNITSCHEME);\n    public static PRIMARYMEASURE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_PRIMARYMEASURE);\n    public static PROCESS: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_PROCESS);\n    public static PROCESSSTEP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_PROCESSSTEP);\n    public static PROVISIONAGREEMENT: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_PROVISIONAGREEMENT);\n    public static REPORTINGCATEGORY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGCATEGORY);\n    public static REPORTINGCATEGORYMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGCATEGORYMAP);\n    public static REPORTINGTAXONOMY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGTAXONOMY);\n    public static REPORTINGTAXONOMYMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGTAXONOMYMAP);\n    public static REPORTINGYEARSTARTDAY: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTINGYEARSTARTDAY);\n    public static REPORTPERIODTARGET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTPERIODTARGET);\n    public static REPORTSTRUCTURE: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_REPORTSTRUCTURE);\n    public static STRUCTUREMAP: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_STRUCTUREMAP);\n    public static STRUCTURESET: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_STRUCTURESET);\n    public static TIMEDIMENSION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_TIMEDIMENSION);\n    public static TRANSITION: ObjectTypeCodelistType = ObjectTypeCodelistType.add(ObjectTypeCodelistType.TARGET_TRANSITION);\n\n    public static INT_ANY: number = 0;\n    public static INT_AGENCY: number = 1;\n    public static INT_AGENCYSCHEME: number = 2;\n    public static INT_ATTACHMENTCONSTRAINT: number = 3;\n    public static INT_ATTRIBUTE: number = 4;\n    public static INT_ATTRIBUTEDESCRIPTOR: number = 5;\n    public static INT_CATEGORISATION: number = 6;\n    public static INT_CATEGORY: number = 7;\n    public static INT_CATEGORYSCHEMEMAP: number = 8;\n    public static INT_CATEGORYSCHEME: number = 9;\n    public static INT_CODE: number = 10;\n    public static INT_CODEMAP: number = 11;\n    public static INT_CODELIST: number = 12;\n    public static INT_CODELISTMAP: number = 13;\n    public static INT_COMPONENTMAP: number = 14;\n    public static INT_CONCEPT: number = 15;\n    public static INT_CONCEPTMAP: number = 16;\n    public static INT_CONCEPTSCHEME: number = 17;\n    public static INT_CONCEPTSCHEMEMAP: number = 18;\n    public static INT_CONSTRAINT: number = 19;\n    public static INT_CONSTRAINTARGET: number = 20;\n    public static INT_CONTENTCONSTRAINT: number = 21;\n    public static INT_DATAFLOW: number = 22;\n    public static INT_DATACONSUMER: number = 23;\n    public static INT_DATACONSUMERSCHEME: number = 24;\n    public static INT_DATAPROVIDER: number = 25;\n    public static INT_DATAPROVIDERSCHEME: number = 26;\n    public static INT_DATASETTARGET: number = 27;\n    public static INT_DATASTRUCTURE: number = 28;\n    public static INT_DIMENSION: number = 29;\n    public static INT_DIMENSIONDESCRIPTOR: number = 30;\n    public static INT_DIMENSIONDESCRIPTORVALUESTARGET: number = 31;\n    public static INT_GROUPDIMENSIONDESCRIPTOR: number = 32;\n    public static INT_HIERARCHICALCODE: number = 33;\n    public static INT_HIERARCHICALCODELIST: number = 34;\n    public static INT_HIERARCHY: number = 35;\n    public static INT_HYBRIDCODELISTMAP: number = 36;\n    public static INT_HYBRIDCODEMAP: number = 37;\n    public static INT_IDENTIFIABLEOBJECTTARGET: number = 38;\n    public static INT_LEVEL: number = 39;\n    public static INT_MEASUREDESCRIPTOR: number = 40;\n    public static INT_MEASUREDIMENSION: number = 41;\n    public static INT_METADATAFLOW: number = 42;\n    public static INT_METADATAATTRIBUTE: number = 43;\n    public static INT_METADATASET: number = 44;\n    public static INT_METADATASTRUCTURE: number = 45;\n    public static INT_METADATATARGET: number = 46;\n    public static INT_ORGANISATION: number = 47;\n    public static INT_ORGANISATIONMAP: number = 48;\n    public static INT_ORGANISATIONSCHEME: number = 49;\n    public static INT_ORGANISATIONSCHEMEMAP: number = 50;\n    public static INT_ORGANISATIONUNIT: number = 51;\n    public static INT_ORGANISATIONUNITSCHEME: number = 52;\n    public static INT_PRIMARYMEASURE: number = 53;\n    public static INT_PROCESS: number = 54;\n    public static INT_PROCESSSTEP: number = 55;\n    public static INT_PROVISIONAGREEMENT: number = 56;\n    public static INT_REPORTINGCATEGORY: number = 57;\n    public static INT_REPORTINGCATEGORYMAP: number = 58;\n    public static INT_REPORTINGTAXONOMY: number = 59;\n    public static INT_REPORTINGTAXONOMYMAP: number = 60;\n    public static INT_REPORTINGYEARSTARTDAY: number = 61;\n    public static INT_REPORTPERIODTARGET: number = 62;\n    public static INT_REPORTSTRUCTURE: number = 63;\n    public static INT_STRUCTUREMAP: number = 64;\n    public static INT_STRUCTURESET: number = 65;\n    public static INT_TIMEDIMENSION: number = 66;\n    public static INT_TRANSITION: number = 67;\n\n    // Utility\n    private static add(s: string): ObjectTypeCodelistType {\n        var b: ObjectTypeCodelistType = new ObjectTypeCodelistType(s);\n        ObjectTypeCodelistType.ENUM.push(b);\n        return b;\n    }\n    private static addString(s: string): string {\n        ObjectTypeCodelistType.STRING_ENUM.push(s);\n        return s;\n    }\n\n    public static fromString(s: string): ObjectTypeCodelistType {\n        for (var i: number = 0; i < ObjectTypeCodelistType.ENUM.length; i++) {\n            if (ObjectTypeCodelistType.ENUM[i].target == s) return ObjectTypeCodelistType.ENUM[i];\n        }\n        return null;\n    }\n    public static fromStringWithException(s: string): ObjectTypeCodelistType {\n        for (var i: number = 0; i < ObjectTypeCodelistType.ENUM.length; i++) {\n            if (ObjectTypeCodelistType.ENUM[i].target == s) return ObjectTypeCodelistType.ENUM[i];\n        }\n        throw new Error(\"Value:\" + s + \" not found in enumeration! - ObjectypeCodelistType\");\n    }\n    // Instance\n    private target: string = null;\n    private index: number = -1;\n    public constructor(s: string) {\n        var contains: boolean = false;\n        for (var i = 0; i < ObjectTypeCodelistType.STRING_ENUM.length; i++) {\n            if (ObjectTypeCodelistType.STRING_ENUM[i] == s) {\n                contains = true;\n            }\n        }\n        if (!contains) throw new Error(s + \" is not a valid CodeTypeCodelistType\");\n        this.target = s;\n        this.index = ObjectTypeCodelistType.STRING_ENUM.indexOf(s);\n    }\n    public toString(): string { return this.target; }\n    public toInt(): number {\n        return this.index;\n    }\n}\nexport class PackageTypeCodelistType {\n\n    public static ENUM: Array<PackageTypeCodelistType> = new Array<PackageTypeCodelistType>();\n    public static STRING_ENUM: Array<string> = new Array<string>();\n\n    public static TARGET_BASE: string = PackageTypeCodelistType.addString(\"base\");\n    public static TARGET_DATASTRUCTURE: string = PackageTypeCodelistType.addString(\"datastructure\");\n    public static TARGET_METADATASTRUCTURE: string = PackageTypeCodelistType.addString(\"metadatastructure\");\n    public static TARGET_PROCESS: string = PackageTypeCodelistType.addString(\"process\");\n    public static TARGET_REGISTRY: string = PackageTypeCodelistType.addString(\"registry\");\n    public static TARGET_MAPPING: string = PackageTypeCodelistType.addString(\"mapping\");\n    public static TARGET_CODELIST: string = PackageTypeCodelistType.addString(\"codelist\");\n    public static TARGET_CATEGORYSCHEME: string = PackageTypeCodelistType.addString(\"categoryscheme\");\n    public static TARGET_CONCEPTSCHEME: string = PackageTypeCodelistType.addString(\"conceptscheme\");\n\n    public static BASE: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_BASE);\n    public static DATASTRUCTURE: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_DATASTRUCTURE);\n    public static METADATASTRUCTURE: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_METADATASTRUCTURE);\n    public static PROCESS: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_PROCESS);\n    public static REGISTRY: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_REGISTRY);\n    public static MAPPING: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_MAPPING);\n    public static CODELIST: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_CODELIST);\n    public static CATEGORYSCHEME: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_CATEGORYSCHEME);\n    public static CONCEPTSCHEME: PackageTypeCodelistType = PackageTypeCodelistType.add(PackageTypeCodelistType.TARGET_CONCEPTSCHEME);\n    // Utility\n    private static add(s: string): PackageTypeCodelistType {\n        var b: PackageTypeCodelistType = new PackageTypeCodelistType(s);\n        PackageTypeCodelistType.ENUM.push(b);\n        return b;\n    }\n    private static addString(s: string): string {\n        PackageTypeCodelistType.STRING_ENUM.push(s);\n        return s;\n    }\n\n    public static fromString(s: string): PackageTypeCodelistType {\n        for (var i = 0; i < PackageTypeCodelistType.ENUM.length; i++) {\n            if (PackageTypeCodelistType.ENUM[i].target == s) return PackageTypeCodelistType.ENUM[i];\n        }\n        return null;\n    }\n    public static fromStringWithException(s: string): PackageTypeCodelistType {\n        for (var i = 0; i < PackageTypeCodelistType.ENUM.length; i++) {\n            if (PackageTypeCodelistType.ENUM[i].target == s) return PackageTypeCodelistType.ENUM[i];\n        }\n        throw new Error(\"Value:\" + s + \" not found in PackageTypeCodelistType enumeration!\");\n    }\n    // Instance\n    private target: string = null;\n    constructor(s: string) {\n        var contains: boolean = false;\n        for (var i = 0; i < PackageTypeCodelistType.STRING_ENUM.length; i++) {\n            if (PackageTypeCodelistType.STRING_ENUM[i] == s) {\n                contains = true;\n            }\n        }\n        if (!contains) throw new Error(s + \" is not a valid CodeTypeCodelistType\");\n        this.target = s;\n    }\n    public toString(): string { return this.target; }\n}"],"sourceRoot":"/source/"}