{"version":3,"sources":["sdmx20.ts"],"names":["Sdmx20StructureParser","Sdmx20StructureParser.constructor","Sdmx20StructureParser.getVersionIdentifier","Sdmx20StructureParser.canParse","Sdmx20StructureParser.isStructure","Sdmx20StructureParser.isData","Sdmx20StructureParser.isMetadata","Sdmx20StructureParser.parseStructure","Sdmx20StructureParser.parseData"],"mappings":";IAOA;QACIA;QAEAC,CAACA;QACDD,oDAAoBA,GAApBA;YACIE,MAAMA,CAACA,GAAGA,CAACA;QACfA,CAACA;QACDF,wCAAQA,GAARA,UAASA,KAAaA;YAClBG,EAAEA,CAACA,CAACA,KAAKA,IAAIA,IAAIA,CAACA;gBAACA,MAAMA,CAACA,KAAKA,CAACA;YAChCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,KAAKA,CAACA,CAACA;gBAACA,MAAMA,CAACA,IAAIA,CAACA;YACzCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA;gBAACA,MAAMA,CAACA,IAAIA,CAACA;QACxCA,CAACA;QACDH,2CAAWA,GAAXA,UAAYA,KAAaA;YACrBI,EAAEA,CAAAA,CAACA,KAAKA,CAACA,OAAOA,CAACA,WAAWA,CAACA,IAAIA,CAACA,CAACA,IAAIA,KAAKA,CAACA,OAAOA,CAACA,2DAA2DA,CAACA,IAAEA,CAACA,CAACA,CAACA,CAAAA,CAACA;gBACnHA,MAAMA,CAACA,IAAIA,CAACA;YAChBA,CAACA;YAACA,IAAIA;gBAACA,MAAMA,CAACA,KAAKA,CAACA;QACxBA,CAACA;QACDJ,sCAAMA,GAANA,UAAOA,MAAcA;YACjBK,MAAMA,CAACA,KAAKA,CAACA;QACjBA,CAACA;QACDL,0CAAUA,GAAVA,UAAWA,MAAcA;YACrBM,MAAMA,CAACA,KAAKA,CAACA;QACjBA,CAACA;QACDN,8CAAcA,GAAdA,UAAeA,KAAaA;YACxBO,IAAIA,IAAIA,GAAmCA,EAAEA,CAACA;YAC9CA,IAAIA,MAAMA,GAAkBA,GAAGA,CAACA,MAAMA,CAACA,WAAWA,CAAAA,IAAIA,EAACA,cAAcA,CAAAA,IAAIA,CAACA,CAACA;YAE3EA,MAAMA,CAACA,OAAOA,GAAGA,UAASA,CAACA;gBACvB,qBAAqB;YACzB,CAAC,CAACA;YACFA,MAAMA,CAACA,MAAMA,GAAGA,UAASA,CAACA;gBACtB,2CAA2C;YAC/C,CAAC,CAACA;YACFA,MAAMA,CAACA,SAASA,GAAGA,UAASA,IAAIA;gBAC5B,kDAAkD;gBAClD,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;YAChC,CAAC,CAACA;YACFA,MAAMA,CAACA,UAAUA,GAAGA,UAASA,CAACA;gBAC1B,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;YAE9B,CAAC,CAAAA;YACDA,MAAMA,CAACA,WAAWA,GAAGA,UAASA,IAAIA;gBAC9B,6CAA6C;YACjD,CAAC,CAACA;YACFA,MAAMA,CAACA,KAAKA,GAAGA;gBACX,qEAAqE;YACzE,CAAC,CAACA;YAEFA,MAAMA,CAACA,KAAKA,CAACA,KAAKA,CAACA,CAACA,KAAKA,EAAEA,CAACA;YAC5BA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDP,yCAASA,GAATA,UAAUA,KAAaA;YACnBQ,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACLR,4BAACA;IAADA,CAtDA,AAsDCA,IAAA;IAtDY,6BAAqB,wBAsDjC,CAAA;IACD,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,IAAI,qBAAqB,EAAE,CAAC,CAAC","file":"sdmx20.js","sourcesContent":["/// <amd-module name='sdmx20'/>\n///<reference path=\"sax.d.ts\"/>\nimport sax = require(\"sax\");\nimport structure = require(\"structure\");\nimport message = require(\"message\");\nimport parser = require(\"parser\");\nimport sdmx = require(\"sdmx\");\nexport class Sdmx20StructureParser implements parser.SdmxParserProvider {\n    constructor(){\n        \n    }\n    getVersionIdentifier(): number {\n        return 2.1;\n    }\n    canParse(input: string): boolean {\n        if (input == null) return false;\n        if (this.isStructure(input)) return true;\n        if (this.isData(input)) return true;\n    }\n    isStructure(input: string): boolean {\n        if(input.indexOf(\"Structure\") != -1 && input.indexOf(\"http://www.SDMX.org/resources/SDMXML/schemas/v2_0/message\")!=-1){\n            return true;\n        } else return false;\n    }\n    isData(header: string): boolean {\n        return false;\n    }\n    isMetadata(header: string): boolean {\n        return false;\n    }\n    parseStructure(input: string): message.StructureType {\n        var opts: sax.SAXOptions = <sax.SAXOptions>{};\n        var parser: sax.SAXParser = sax.parser(/*strict=*/true,/*SaxOptions*/opts);\n\n        parser.onerror = function(e) {\n            // an error happened.\n        };\n        parser.ontext = function(t) {\n            // got some text.  t is the string of text.\n        };\n        parser.onopentag = function(node) {\n            // opened a tag.  node has \"name\" and \"attributes\"\n            console.log(\"open:\" + node);\n        };\n        parser.onclosetag = function(e) {\n            console.log(\"close:\" + e);\n\n        }\n        parser.onattribute = function(attr) {\n            // an attribute.  attr has \"name\" and \"value\"\n        };\n        parser.onend = function() {\n            // parser stream is done, and ready to have more stuff written to it.\n        };\n\n        parser.write(input).close();\n        return null;\n    }\n    parseData(input: string): message.DataMessage {\n        return null;\n    }\n}\nsdmx.SdmxIO.registerParserProvider(new Sdmx20StructureParser());"],"sourceRoot":"/source/"}