{"version":3,"sources":["sdmx20.ts"],"names":["parseXml","Sdmx20StructureParser","Sdmx20StructureParser.constructor","Sdmx20StructureParser.getVersionIdentifier","Sdmx20StructureParser.canParse","Sdmx20StructureParser.isStructure","Sdmx20StructureParser.isData","Sdmx20StructureParser.isMetadata","Sdmx20StructureParser.parseStructure","Sdmx20StructureParser.parseData","Sdmx20StructureReaderTools","Sdmx20StructureReaderTools.constructor","Sdmx20StructureReaderTools.toStructureType","Sdmx20StructureReaderTools.toHeader","Sdmx20StructureReaderTools.toSender","Sdmx20StructureReaderTools.toNames","Sdmx20StructureReaderTools.toName","Sdmx20StructureReaderTools.toDescriptions","Sdmx20StructureReaderTools.toDescription","Sdmx20StructureReaderTools.toTextType","Sdmx20StructureReaderTools.toPartyType","Sdmx20StructureReaderTools.toCodelists","Sdmx20StructureReaderTools.toID","Sdmx20StructureReaderTools.toNestedNCNameID","Sdmx20StructureReaderTools.toVersion","Sdmx20StructureReaderTools.toCodelist","Sdmx20StructureReaderTools.toCode","Sdmx20StructureReaderTools.getParentCode","Sdmx20StructureReaderTools.toValue","Sdmx20StructureReaderTools.toConcepts","Sdmx20StructureReaderTools.findStandaloneConceptScheme","Sdmx20StructureReaderTools.toConceptScheme","Sdmx20StructureReaderTools.toConcept","Sdmx20StructureReaderTools.toKeyFamilies","Sdmx20StructureReaderTools.getStructureType","Sdmx20StructureReaderTools.myLoop","Sdmx20StructureReaderTools.myLoop2","Sdmx20StructureReaderTools.findNodeName","Sdmx20StructureReaderTools.searchNodeName","Sdmx20StructureReaderTools.findTextNode"],"mappings":"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CA;YACzDA,EAAEA,CAACA,UAAUA,CAACA,IAAIA,CAACA,SAASA,CAACA,iBAAiBA,CAACA,CAACA,CAACA;YACjDA,MAAMA,CAACA,EAAEA,CAACA;QACdA,CAACA;QACDrB,8CAASA,GAATA,UAAUA,aAA0CA,EAAEA,WAAgBA;YAClEsB,EAAEA,CAACA,CAACA,WAAWA,IAAIA,IAAIA,CAACA,CAACA,CAACA;gBACtBA,MAAMA,CAACA,IAAIA,CAACA;YAChBA,CAACA;YACDA,IAAIA,GAAGA,GAA0BA,IAAIA,SAASA,CAACA,WAAWA,EAAEA,CAACA;YAC7DA,GAAGA,CAACA,QAAQA,CAACA,IAAIA,CAACA,OAAOA,CAACA,WAAWA,CAACA,CAACA,CAACA;YACxCA,GAAGA,CAACA,eAAeA,CAACA,IAAIA,CAACA,cAAcA,CAACA,WAAWA,CAACA,CAACA,CAACA;YACtDA,GAAGA,CAACA,KAAKA,CAACA,IAAIA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA,CAACA;YAElCA,aAAaA,CAACA,QAAQA,EAAEA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;QACvCA,CAACA;QACDtB,kDAAaA,GAAbA,UAAcA,eAAoBA;YAC9BuB,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACDvB,qDAAgBA,GAAhBA;YACIwB,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA;QACvBA,CAACA;QACDxB,2CAAMA,GAANA,UAAOA,CAAMA;YACTyB,IAAIA,CAASA,EAAEA,CAAMA,EAAEA,IAAYA,EAAEA,GAAWA,CAACA;YACjDA,GAAGA,GAAGA,EAAEA,CAACA;YACTA,CAACA,GAAGA,CAACA,CAACA,UAAUA,CAACA;YACjBA,IAAIA,GAAGA,CAACA,CAACA,MAAMA,CAACA;YAChBA,GAAGA,CAACA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACxBA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACTA,EAAEA,CAACA,CAACA,CAACA,CAACA,QAAQA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAClBA,EAAEA,CAACA,CAACA,CAACA,CAACA,UAAUA,CAACA,CAACA,CAACA,IAAIA,SAASA,CAACA,CAACA,CAACA;wBAC/BA,GAAGA,IAAIA,IAAIA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;oBAC1BA,CAACA;gBACLA,CAACA;gBAACA,IAAIA,CAACA,CAACA;oBACJA,GAAGA,IAAIA,CAACA,CAACA,SAASA,GAAGA,MAAMA,CAACA;gBAChCA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,GAAGA,CAACA;QACfA,CAACA;QACDzB,4CAAOA,GAAPA,UAAQA,CAAMA;YACV0B,IAAIA,CAASA,EAAEA,CAAMA,EAAEA,IAAYA,EAAEA,GAAWA,CAACA;YACjDA,GAAGA,GAAGA,EAAEA,CAACA;YACTA,CAACA,GAAGA,CAACA,CAACA,UAAUA,CAACA;YACjBA,IAAIA,GAAGA,CAACA,CAACA,MAAMA,CAACA;YAChBA,GAAGA,CAACA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACxBA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACTA,EAAEA,CAACA,CAACA,CAACA,CAACA,QAAQA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAClBA,KAAKA,CAACA,CAACA,CAACA,QAAQA,GAAGA,GAAGA,GAAGA,CAACA,CAACA,SAASA,CAACA,CAACA;oBACtCA,EAAEA,CAACA,CAACA,CAACA,CAACA,UAAUA,CAACA,CAACA,CAACA,IAAIA,SAASA,CAACA,CAACA,CAACA;wBAC/BA,GAAGA,IAAIA,IAAIA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA;oBAC3BA,CAACA;gBACLA,CAACA;gBAACA,IAAIA,CAACA,CAACA;oBACJA,GAAGA,IAAIA,CAACA,CAACA,SAASA,GAAGA,MAAMA,CAACA;gBAEhCA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,GAAGA,CAACA;QACfA,CAACA;QACD1B,iDAAYA,GAAZA,UAAaA,CAASA,EAAEA,UAAeA;YACnC2B,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,UAAUA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACjDA,IAAIA,EAAEA,GAAWA,UAAUA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA;gBACxCA,2DAA2DA;gBAC3DA,EAAEA,CAACA,CAACA,EAAEA,CAACA,OAAOA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA;oBACtBA,yBAAyBA;oBACzBA,MAAMA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA;gBACzBA,CAACA;YACLA,CAACA;YACDA,KAAKA,CAACA,iBAAiBA,GAAGA,CAACA,CAACA,CAACA;YAC7BA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QACD3B,mDAAcA,GAAdA,UAAeA,CAASA,EAAEA,UAAeA;YACrC4B,IAAIA,MAAMA,GAAeA,EAAEA,CAACA;YAC5BA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,UAAUA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACjDA,IAAIA,EAAEA,GAAWA,UAAUA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA;gBACxCA,2DAA2DA;gBAC3DA,EAAEA,CAACA,CAACA,EAAEA,CAACA,OAAOA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA;oBACtBA,yBAAyBA;oBACzBA,MAAMA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAC/BA,CAACA;YACLA,CAACA;YACDA,EAAEA,CAACA,CAACA,MAAMA,CAACA,MAAMA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACrBA,KAAKA,CAACA,kBAAkBA,GAAGA,CAACA,GAAGA,UAAUA,CAACA,CAACA;YAC/CA,CAACA;YACDA,MAAMA,CAACA,MAAMA,CAACA;QAClBA,CAACA;QACD5B,iDAAYA,GAAZA,UAAaA,IAASA;YAClB6B,EAAEA,CAACA,CAACA,IAAIA,IAAIA,IAAIA,CAACA;gBAACA,MAAMA,CAACA,EAAEA,CAACA;YAC5BA,IAAIA,UAAUA,GAAGA,IAAIA,CAACA,UAAUA,CAACA;YACjCA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,UAAUA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;gBACjDA,IAAIA,QAAQA,GAAGA,UAAUA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA;gBACtCA,EAAEA,CAACA,CAACA,QAAQA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAChBA,MAAMA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA,SAASA,CAACA;gBACnCA,CAACA;YACLA,CAACA;YACDA,MAAMA,CAACA,EAAEA,CAACA;QACdA,CAACA;QAEL7B,iCAACA;IAADA,CA3QA,AA2QCA,IAAA;IA3QY,kCAA0B,6BA2QtC,CAAA","file":"sdmx20.js","sourcesContent":["/// <amd-module name='sdmx20'/>\n///<reference path=\"sax.d.ts\"/>\nimport commonreferences = require(\"commonreferences\");\nimport sax = require(\"sax\");\nimport structure = require(\"structure\");\nimport message = require(\"message\");\nimport interfaces = require(\"interfaces\");\nimport xml = require(\"xml\");\nimport common = require(\"common\");\nexport function parseXml(s: string): any {\n    var parseXml: DOMParser;\n    parseXml = new DOMParser();\n    var xmlDoc = parseXml.parseFromString(s, \"text/xml\");\n    return xmlDoc;\n}\n\nexport class Sdmx20StructureParser implements interfaces.SdmxParserProvider {\n    constructor() {\n\n    }\n    getVersionIdentifier(): number {\n        return 2.1;\n    }\n    canParse(input: string): boolean {\n        if (input == null) return false;\n        if (this.isStructure(input)) return true;\n        if (this.isData(input)) return true;\n    }\n    isStructure(input: string): boolean {\n        if (input.indexOf(\"Structure\") != -1 && input.indexOf(\"http://www.SDMX.org/resources/SDMXML/schemas/v2_0/message\") != -1) {\n            return true;\n        } else return false;\n    }\n    isData(header: string): boolean {\n        return false;\n    }\n    isMetadata(header: string): boolean {\n        return false;\n    }\n    parseStructure(input: string): message.StructureType {\n        var srt: Sdmx20StructureReaderTools = new Sdmx20StructureReaderTools(input);\n        return srt.getStructureType();\n\n    }\n    parseData(input: string): message.DataMessage {\n        var opts: sax.SAXOptions = <sax.SAXOptions>{};\n        var parser: sax.SAXParser = sax.parser(/*strict=*/true,/*SaxOptions*/opts);\n\n        parser.onerror = function(e) {\n            // an error happened.\n        };\n        parser.ontext = function(t) {\n            // got some text.  t is the string of text.\n        };\n        parser.onopentag = function(node) {\n            // opened a tag.  node has \"name\" and \"attributes\"\n            console.log(\"open:\" + node);\n        };\n        parser.onclosetag = function(e) {\n            console.log(\"close:\" + e);\n\n        }\n        parser.onattribute = function(attr) {\n            // an attribute.  attr has \"name\" and \"value\"\n        };\n        parser.onend = function() {\n            // parser stream is done, and ready to have more stuff written to it.\n        };\n\n        parser.write(input).close();\n        return null;\n    }\n}\nexport class Sdmx20StructureReaderTools {\n    private struct: message.StructureType = null;\n\n    constructor(s: string) {\n        var dom: any = parseXml(s);\n        this.struct = this.toStructureType(dom.documentElement);\n    }\n    toStructureType(structureNode: any): message.StructureType {\n        this.struct = new message.StructureType();\n        var structures = new structure.Structures();\n        this.struct.setStructures(structures);\n        var childNodes = structureNode.childNodes;\n        this.struct.setHeader(this.toHeader(this.findNodeName(\"Header\", childNodes)));\n        structures.setCodeLists(this.toCodelists(this.findNodeName(\"CodeLists\", childNodes)));\n        structures.setConcepts(this.toConcepts(this.findNodeName(\"Concepts\", childNodes)));\n        structures.setDataStructures(this.toKeyFamilies(this.findNodeName(\"KeyFamilies\", childNodes)));\n        return this.struct;\n    }\n    toHeader(headerNode: any) {\n        var header: message.Header = new message.Header()\n        header.setId(this.findNodeName(\"ID\", headerNode.childNodes).childNodes[0].nodeValue);\n        var test: string = this.findNodeName(\"Test\", headerNode.childNodes).childNodes[0].nodeValue;\n        header.setTest(test == \"true\");\n        // truncated not in sdmx 2.1\n        //var truncated:string= this.findNodeName(\"Truncated\",headerNode.childNodes).childNodes[0].nodeValue;\n        //header.setTruncated(truncated==\"true\");\n        var prepared: string = this.findNodeName(\"Prepared\", headerNode.childNodes).childNodes[0].nodeValue;\n        var prepDate: xml.DateTime = xml.DateTime.fromString(prepared);\n        header.setPrepared(new message.HeaderTimeType(prepDate));\n        header.setSender(this.toSender(this.findNodeName(\"Sender\", headerNode.childNodes)));\n        return header;\n    }\n    toSender(senderNode: any): message.Sender {\n        var sender: string = senderNode.childNodes[0].nodeValue;\n\n        var senderType: message.Sender = new message.Sender();\n        var senderId: string = senderNode.getAttribute(\"id\");\n        var senderID: commonreferences.ID = new commonreferences.ID(senderId);\n        senderType.setId(senderID);\n        return senderType;\n    }\n    toNames(node: any): Array<common.Name> {\n        var names: Array<common.Name> = [];\n        var senderNames = this.searchNodeName(\"Name\", node.childNodes);\n        for (var i: number = 0; i < senderNames.length; i++) {\n            names.push(this.toName(senderNames[i]));\n        }\n        return names;\n    }\n    toName(node: any): common.Name {\n        var lang = node.getAttribute(\"xml:lang\");\n        var text = node.childNodes[0].nodeValue;\n        var name: common.Name = new common.Name(lang, text);\n        return name;\n    }\n    toDescriptions(node: any): Array<common.Description> {\n        var names: Array<common.Description> = [];\n        var senderNames = this.searchNodeName(\"Description\", node.childNodes);\n        for (var i: number = 0; i < senderNames.length; i++) {\n            names.push(this.toDescription(senderNames[i]));\n        }\n        return names;\n    }\n    toDescription(node: any): common.Description {\n        var lang = node.getAttribute(\"xml:lang\");\n        var text = node.childNodes[0].nodeValue;\n        var desc: common.Description = new common.Description(lang, text);\n        return desc;\n    }\n    toTextType(node: any): common.TextType {\n        var lang = node.getAttribute(\"xml:lang\");\n        var text = node.childNodes[0].nodeValue;\n        var textType: common.TextType = new common.TextType(lang, text);\n        return textType;\n    }\n    toPartyType(node: any): message.PartyType {\n        var pt = new message.PartyType();\n        return pt;\n    }\n    toCodelists(codelistsNode: any) {\n        if (codelistsNode == null) return null;\n        var codelists: structure.CodeLists = new structure.CodeLists();\n        var codes = this.searchNodeName(\"CodeList\", codelistsNode.childNodes);\n        for (var i: number = 0; i < codes.length; i++) {\n            codelists.getCodelists().push(this.toCodelist(codes[i]));\n        }\n        return codelists;\n    }\n    toID(node: any): commonreferences.ID {\n        if (node == null) return null;\n        return new commonreferences.ID(node.getAttribute(\"id\"));\n    }\n    toNestedNCNameID(node: any): commonreferences.NestedNCNameID {\n        if (node == null) return null;\n        return new commonreferences.NestedNCNameID(node.getAttribute(\"agencyID\"));\n    }\n    toVersion(node: any): commonreferences.Version {\n        if (node == null) return null;\n        return new commonreferences.Version(node.getAttribute(\"version\"));\n    }\n    toCodelist(codelistNode: any) {\n        var cl: structure.Codelist = new structure.Codelist();\n        cl.setNames(this.toNames(codelistNode));\n        cl.setId(this.toID(codelistNode));\n        cl.setAgencyID(this.toNestedNCNameID(codelistNode));\n        cl.setVersion(this.toVersion(codelistNode));\n        var codeNodes = this.searchNodeName(\"Code\", codelistNode.childNodes);\n        for (var i: number = 0; i < codeNodes.length; i++) {\n            cl.getItems().push(this.toCode(codeNodes[i]));\n        }\n        return cl;\n    }\n    toCode(codeNode: any): structure.CodeType {\n        var c: structure.CodeType = new structure.CodeType();\n        c.setDescriptions(this.toDescriptions(codeNode));\n        c.setId(this.toValue(codeNode));\n        if (codeNode.getAttribute(\"parentCode\") != null) {\n            var ref: commonreferences.Ref = new commonreferences.Ref();\n            ref.setMaintainableParentId(new commonreferences.ID(codeNode.getAttribute(\"parentCode\")));\n            var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\n            c.setParent(reference);\n        }\n        return c;\n    }\n    getParentCode(codeNode: any): commonreferences.ID {\n        var id = codeNode.getAttribute(\"parentCode\");\n        if (id == null) { return null; }\n        else {\n            return new commonreferences.ID(id);\n        }\n    }\n    toValue(codeNode: any): commonreferences.ID {\n        if (codeNode == null) return null;\n        var id = codeNode.getAttribute(\"value\");\n        return new commonreferences.ID(id);\n    }\n    toConcepts(conceptsNode: any) {\n        if (conceptsNode == null) return null;\n        var concepts: structure.Concepts = new structure.Concepts();\n        this.struct.getStructures().setConcepts(concepts);\n        var conNodes = this.searchNodeName(\"Concept\", conceptsNode.childNodes);\n        for (var i: number = 0; i < conNodes.length; i++) {\n            var conceptScheme: structure.ConceptSchemeType = this.findStandaloneConceptScheme(this.toNestedNCNameID(conNodes[i]));\n            this.toConcept(conceptScheme, conNodes[i]);\n            alert(JSON.stringify(conceptScheme));\n        }\n\n        return concepts;\n    }\n    findStandaloneConceptScheme(ag: commonreferences.NestedNCNameID): structure.ConceptSchemeType {\n        var ref: commonreferences.Ref = new commonreferences.Ref();\n        ref.setAgencyId(ag);\n        ref.setMaintainableParentId(new commonreferences.ID(\"STANDALONE_CONCEPT_SCHEME\"));\n        ref.setVersion(null);\n        var reference: commonreferences.Reference = new commonreferences.Reference(ref, null);\n        var cs: structure.ConceptSchemeType = this.struct.findConceptScheme(reference);\n        if (cs == null) {\n            cs = new structure.ConceptSchemeType();\n            cs.setAgencyID(ag);\n            cs.setId(new commonreferences.ID(\"STANDALONE_CONCEPT_SCHEME\"));\n            cs.setVersion(commonreferences.Version.ONE);\n            var name: common.Name = new common.Name(\"en\",\"Standalone Concept Scheme\");\n            cs.setNames([name]);\n            this.struct.getStructures().getConcepts().getConceptSchemes().push(cs);\n        }\n        return cs;\n    }\n    toConceptScheme(conceptSchemeNode: any) {\n        if (conceptSchemeNode == null) return null;\n        var cs: structure.ConceptSchemeType = new structure.ConceptSchemeType();\n        cs.setNames(this.toNames(conceptSchemeNode))\n        cs.setAgencyID(this.toNestedNCNameID(conceptSchemeNode));\n        cs.setVersion(this.toVersion(conceptSchemeNode));\n        return cs;\n    }\n    toConcept(conceptScheme: structure.ConceptSchemeType, conceptNode: any) {\n        if (conceptNode == null) {\n            return null;\n        }\n        var con: structure.ConceptType = new structure.ConceptType();\n        con.setNames(this.toNames(conceptNode));\n        con.setDescriptions(this.toDescriptions(conceptNode));\n        con.setId(this.toID(conceptNode));\n        \n        conceptScheme.getItems().push(con);\n    }\n    toKeyFamilies(keyFamiliesNode: any) {\n        return null;\n    }\n    getStructureType(): message.StructureType {\n        return this.struct;\n    }\n    myLoop(x: any): string {\n        var i: number, y: any, xLen: number, txt: string;\n        txt = \"\";\n        x = x.childNodes;\n        xLen = x.length;\n        for (i = 0; i < xLen; i++) {\n            y = x[i];\n            if (y.nodeType != 3) {\n                if (y.childNodes[0] != undefined) {\n                    txt += this.myLoop(y);\n                }\n            } else {\n                txt += y.nodeValue + \"<br>\";\n            }\n        }\n        return txt;\n    }\n    myLoop2(x: any): string {\n        var i: number, y: any, xLen: number, txt: string;\n        txt = \"\";\n        x = x.childNodes;\n        xLen = x.length;\n        for (i = 0; i < xLen; i++) {\n            y = x[i];\n            if (y.nodeType != 3) {\n                alert(y.nodeName + \":\" + y.nodeValue);\n                if (y.childNodes[0] != undefined) {\n                    txt += this.myLoop2(y);\n                }\n            } else {\n                txt += y.nodeValue + \"<br>\";\n\n            }\n        }\n        return txt;\n    }\n    findNodeName(s: string, childNodes: any) {\n        for (var i: number = 0; i < childNodes.length; i++) {\n            var nn: string = childNodes[i].nodeName;\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\n            if (nn.indexOf(s) != -1) {\n                //alert(\"found node:\"+s);\n                return childNodes[i];\n            }\n        }\n        alert(\"not found node:\" + s);\n        return null;\n    }\n    searchNodeName(s: string, childNodes: any): Array<any> {\n        var result: Array<any> = [];\n        for (var i: number = 0; i < childNodes.length; i++) {\n            var nn: string = childNodes[i].nodeName;\n            //alert(\"looking for:\"+s+\": name=\"+childNodes[i].nodeName);\n            if (nn.indexOf(s) != -1) {\n                //alert(\"found node:\"+s);\n                result.push(childNodes[i]);\n            }\n        }\n        if (result.length == 0) {\n            alert(\"cannot find any \" + s + \" in node\");\n        }\n        return result;\n    }\n    findTextNode(node: any): string {\n        if (node == null) return \"\";\n        var childNodes = node.childNodes;\n        for (var i: number = 0; i < childNodes.length; i++) {\n            var nodeType = childNodes[i].nodeType;\n            if (nodeType == 3) {\n                return childNodes[i].nodeValue;\n            }\n        }\n        return \"\";\n    }\n\n}\n\n"],"sourceRoot":"/source/"}