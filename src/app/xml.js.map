{"version":3,"sources":["xml.ts"],"names":["DateTime","DateTime.constructor","DateTime.getDate","DateTime.fromString","DateTime.toString","DateTime.now","DateTime.setBaseString","DateTime.getBaseString","RegexXMLString","RegexXMLString.constructor","RegexXMLString.getPatternArray","XMLString","XMLString.constructor","XMLString.getString","XMLString.toString","XMLString.equalsString","anyURI","anyURI.constructor","anyURI.getString","anyURI.toString"],"mappings":"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","file":"C:/Users/James/Dropbox/sdmx-js/src/app/xml.js","sourcesContent":["/// <amd-module name='xml'/>\nimport moment = require('moment');\nexport class DateTime {\n    public static DF: string = \"yyyy-MM-dd'T'HH:mm:ssXXX\";\n    public static DF2: string = \"yyyy-MM-dd'T'HH:mm:ss\";\n    private baseString: string = null;\n    private date: Date = null;\n\n    constructor(d: Date) {\n        this.date = d;\n    }\n\n    public getDate(): Date {\n        return this.date;\n    }\n\n    public static fromString(s: string): DateTime {\n        if (s == null || s == \"\") {\n            return null;\n        }\n        var m = moment(s, [DateTime.DF, DateTime.DF2]);\n        var dt: DateTime = new DateTime(m.toDate());\n        dt.setBaseString(s);\n        return dt;\n    }\n    public toString(): string {\n        if (this.baseString != null) return this.baseString;\n        return moment(this.date).format(DateTime.DF);\n    }\n    public static now(): DateTime {\n        return new DateTime(moment().toDate());\n    }\n    public setBaseString(s: string) {\n        this.baseString = s;\n    }\n    public getBaseString() :string{\n        return this.baseString;\n    }\n}\nexport class RegexXMLString extends XMLString {\n\n    constructor(s: string) {\n        super(s);\n\n    }\n    // Override Me\n\n    public getPatternArray(): string[] {\n        return [];\n    }\n}\nexport class XMLString {\n    private value: string = null;\n    constructor(s: string) {\n        this.value = s;\n    }\n    public getString(): string { return this.value; }\n    public toString(): string {\n        return this.value;\n    }\n    public equalsString(s: string): boolean {\n        return this.value == s;\n    }\n}\nexport class anyURI {\n    public s: string = null;\n    constructor(s: string) {\n        this.s = s;\n    }\n    public getString(): string { return this.s; }\n    public toString(): string { return this.s; }\n}"],"sourceRoot":"/source/"}