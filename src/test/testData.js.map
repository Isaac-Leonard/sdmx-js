{"version":3,"sources":["test/testData.ts"],"names":[],"mappings":";IA4BA,qBAAqB;IACrB,IAAI,IAAI,GAAG,IAAI;QACX,IAAI,CAAC,GAAyB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACzD,IAAI,IAAI,GAAG,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACjC,IAAI,GAAG,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;QAC5B,IAAI,GAAG,GAA+B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAChF,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAS,EAAE;YACxC,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAClC,IAAI,KAAK,GAAe,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,GAAG,CAAC,CAAC;YAC7D,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC1D,IAAI,EAAE,GAAkB,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACrD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;wBAC7B,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnC,CAAC;gBACL,CAAC;YACL,CAAC;YACD,IAAI,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAS,EAAE;gBACtC,IAAI,GAAG,GAA+B,IAAI,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;gBAC9E,IAAI,IAAI,GAAc,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;gBAC7C,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;oBACvD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClG,CAAC;gBACD,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAEP,CAAC,CAAA;;AACD,GAAG","file":"test/testData.js","sourcesContent":["/*\n    This file is part of sdmx-js.\n\n    sdmx-js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    sdmx-js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with sdmx-js.  If not, see <http://www.gnu.org/licenses/>.\n    Copyright (C) 2016 James Gardner\n*/\n/// <amd-module name='test/testData'/>\nimport interfaces = require(\"sdmx/interfaces\");\nimport common = require(\"sdmx/common\");\nimport commonreferences = require(\"sdmx/commonreferences\");\nimport structure = require(\"sdmx/structure\");\nimport message = require(\"sdmx/message\");\nimport moment = require(\"moment\");\nimport sdmx = require(\"sdmx\");\nimport data = require(\"sdmx/data\");\nimport timepack = require(\"sdmx/time\");\n\n//export class test {\nvar main = new function() {\n    var q: interfaces.Queryable = sdmx.SdmxIO.connect(\"ABS\");\n    var rreg = q.getRemoteRegistry();\n    var rep = q.getRepository();\n    var ref: commonreferences.Reference = sdmx.SdmxIO.reference(\"ABS\", \"ALC\", null);\n    rreg.findDataStructure(ref).then(function(ds) {\n        var reg = rreg.getLocalRegistry();\n        var query: data.Query = new data.Query(ds.asDataflow(), reg);\n        for (var i: number = 0; i < query.getKeyNames().length; i++) {\n            var qk: data.QueryKey = query.getQueryKey(query.getKeyNames()[i]);\n            for (var j: number = 0; j < qk.getValues().length; j++) {\n                if ((Math.random() * 100) > 50) {\n                    qk.addValue(qk.getValues()[j]);\n                }\n            }\n        }\n        var dm = rep.query(query).then(function(dm) {\n            var sdm: data.StructuredDataMessage = new data.StructuredDataMessage(dm, reg);\n            var cube: data.Cube = new data.Cube(ds, reg);\n            for (var i: number = 0; i < dm.getDataSet(0).size(); i++) {\n                cube.putObservation(null, dm.getDataSet(0).getColumnMapper(), dm.getDataSet(0).getFlatObs(i));\n            }\n            cube.dump();\n            console.log(JSON.stringify(cube));\n        });\n    });\n\n}\n//}\n"],"sourceRoot":"/source/"}